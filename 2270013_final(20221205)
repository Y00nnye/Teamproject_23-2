{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Y00nnye/Teamproject_23-2/blob/main/2270013_final(20221205)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4ujUZf0fPKz-",
        "outputId": "8814416e-a323-4c5c-bab2-10bc22a3f1ab"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n",
            "Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.3.post1)\n",
            "Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.23.5)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n",
            "Requirement already satisfied: keybert in /usr/local/lib/python3.10/dist-packages (0.8.3)\n",
            "Requirement already satisfied: sentence-transformers>=0.3.8 in /usr/local/lib/python3.10/dist-packages (from keybert) (2.2.2)\n",
            "Requirement already satisfied: scikit-learn>=0.22.2 in /usr/local/lib/python3.10/dist-packages (from keybert) (1.2.2)\n",
            "Requirement already satisfied: numpy>=1.18.5 in /usr/local/lib/python3.10/dist-packages (from keybert) (1.23.5)\n",
            "Requirement already satisfied: rich>=10.4.0 in /usr/local/lib/python3.10/dist-packages (from keybert) (13.7.0)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.4.0->keybert) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.4.0->keybert) (2.16.1)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22.2->keybert) (1.11.4)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22.2->keybert) (1.3.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22.2->keybert) (3.2.0)\n",
            "Requirement already satisfied: transformers<5.0.0,>=4.6.0 in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=0.3.8->keybert) (4.35.2)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=0.3.8->keybert) (4.66.1)\n",
            "Requirement already satisfied: torch>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=0.3.8->keybert) (2.1.0+cu118)\n",
            "Requirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=0.3.8->keybert) (0.16.0+cu118)\n",
            "Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=0.3.8->keybert) (3.8.1)\n",
            "Requirement already satisfied: sentencepiece in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=0.3.8->keybert) (0.1.99)\n",
            "Requirement already satisfied: huggingface-hub>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=0.3.8->keybert) (0.19.4)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (3.13.1)\n",
            "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (2023.6.0)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (2.31.0)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (6.0.1)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (4.5.0)\n",
            "Requirement already satisfied: packaging>=20.9 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (23.2)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich>=10.4.0->keybert) (0.1.2)\n",
            "Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->sentence-transformers>=0.3.8->keybert) (1.12)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->sentence-transformers>=0.3.8->keybert) (3.2.1)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->sentence-transformers>=0.3.8->keybert) (3.1.2)\n",
            "Requirement already satisfied: triton==2.1.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->sentence-transformers>=0.3.8->keybert) (2.1.0)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers<5.0.0,>=4.6.0->sentence-transformers>=0.3.8->keybert) (2023.6.3)\n",
            "Requirement already satisfied: tokenizers<0.19,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers<5.0.0,>=4.6.0->sentence-transformers>=0.3.8->keybert) (0.15.0)\n",
            "Requirement already satisfied: safetensors>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from transformers<5.0.0,>=4.6.0->sentence-transformers>=0.3.8->keybert) (0.4.1)\n",
            "Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk->sentence-transformers>=0.3.8->keybert) (8.1.7)\n",
            "Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision->sentence-transformers>=0.3.8->keybert) (9.4.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.6.0->sentence-transformers>=0.3.8->keybert) (2.1.3)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (3.6)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.4.0->sentence-transformers>=0.3.8->keybert) (2023.11.17)\n",
            "Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.6.0->sentence-transformers>=0.3.8->keybert) (1.3.0)\n",
            "Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.35.2)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.13.1)\n",
            "Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.4)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.23.5)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (23.2)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2023.6.3)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.31.0)\n",
            "Requirement already satisfied: tokenizers<0.19,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.15.0)\n",
            "Requirement already satisfied: safetensors>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.1)\n",
            "Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.1)\n",
            "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (2023.6.0)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (4.5.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.6)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2023.11.17)\n",
            "Requirement already satisfied: kiwipiepy in /usr/local/lib/python3.10/dist-packages (0.16.2)\n",
            "Requirement already satisfied: kiwipiepy-model~=0.16 in /usr/local/lib/python3.10/dist-packages (from kiwipiepy) (0.16.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from kiwipiepy) (1.23.5)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kiwipiepy) (4.66.1)\n"
          ]
        }
      ],
      "source": [
        "#0.사용자 지정함수 설정,라이브러리 임포트\n",
        "!pip install pandas\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "from sklearn.metrics import mean_squared_error\n",
        "\n",
        "!pip install keybert\n",
        "!pip install transformers\n",
        "!pip install kiwipiepy\n",
        "\n",
        "from keybert import KeyBERT\n",
        "from kiwipiepy import Kiwi\n",
        "from transformers import BertModel\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qIh_Y4T6Nnw1"
      },
      "source": [
        "#1.데이터 불러오기(데이터형확인)(dim,shape)\n",
        "dataset = pd.read_csv('db.sheet.csv')  #파일 시스템을 통해 CSV 파일 구조를 확인해보자.\n",
        "print('db.sheet.csv)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fDlPAikRQsIQ",
        "outputId": "d4293703-3431-4a52-c4ea-4471e7f48391"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n",
            "     경력                           [채용] 본교 인재개발원 연구원 채용 공고     인재개발   연구원  \\\n",
            "0    경력  [인재개발원/채용상담회] 한국경제인협회(구 전국경제인연합회) 채용상담회: 11.1....      경제    채용   \n",
            "1    경력                               [채용] 산학협력단 직원 채용 공고    산학협력단    직원   \n",
            "2    학사  [글로벌소통교육실] 겨울계절학기 영어 말하기프로그램 Speaking Master P...  겨울계절학기    영어   \n",
            "3    일반  [언어교육원] 2023학년도 싱가포르 NTU 난양공대 위탁과정 언어교육원 한국어도우...    싱가포르  언어교육   \n",
            "4    일반  [교육혁신센터] 2023 THE BEST 융합수업 운영사례 공유회(융합수업 운영사례...    융합수업  운영사례   \n",
            "..   ..                                                ...     ...   ...   \n",
            "211  일반             [채용]이화여자대학교 산학협력단 직원(사업관리 및 정산) 채용 공고    산학협력단    직원   \n",
            "212  일반                      [조교모집] 23-2 건축학전공 A/B급 조교 모집      건축학     A   \n",
            "213  일반             [정책과학대학원] 2023학년도 2학기 B급 학생조교 모집 (마감)     정책과학    B급   \n",
            "214  일반                      [조교모집] 2023-2학기 수학과 B급 조교 모집      수학과    B급   \n",
            "215  일반                [교육혁신센터] 맞춤형 튜터링 튜터(가르치는 학생) 모집 안내      맞춤형   튜터링   \n",
            "\n",
            "          채용 Unnamed: 5  Unnamed: 6 Unnamed: 7  \n",
            "0        상담회        NaN         NaN        NaN  \n",
            "1         채용        NaN         NaN        NaN  \n",
            "2    말하기프로그램        NaN         NaN        NaN  \n",
            "3     한국어도우미        NaN         NaN        NaN  \n",
            "4         공유        NaN         NaN        NaN  \n",
            "..       ...        ...         ...        ...  \n",
            "211       채용        NaN         NaN        NaN  \n",
            "212       B급         조교         NaN        NaN  \n",
            "213     학생조교        NaN         NaN        NaN  \n",
            "214       조교        NaN         NaN        NaN  \n",
            "215       튜터        NaN         NaN        NaN  \n",
            "\n",
            "[216 rows x 8 columns]\n",
            "경력                           object\n",
            "[채용] 본교 인재개발원 연구원 채용 공고      object\n",
            "인재개발                         object\n",
            "연구원                          object\n",
            "채용                           object\n",
            "Unnamed: 5                   object\n",
            "Unnamed: 6                  float64\n",
            "Unnamed: 7                   object\n",
            "dtype: object\n",
            "(216, 8)\n",
            "X_dataset\n",
            "0      [인재개발원/채용상담회] 한국경제인협회(구 전국경제인연합회) 채용상담회: 11.1....\n",
            "1                                   [채용] 산학협력단 직원 채용 공고 \n",
            "2      [글로벌소통교육실] 겨울계절학기 영어 말하기프로그램 Speaking Master P...\n",
            "3      [언어교육원] 2023학년도 싱가포르 NTU 난양공대 위탁과정 언어교육원 한국어도우...\n",
            "4      [교육혁신센터] 2023 THE BEST 융합수업 운영사례 공유회(융합수업 운영사례...\n",
            "                             ...                        \n",
            "211               [채용]이화여자대학교 산학협력단 직원(사업관리 및 정산) 채용 공고 \n",
            "212                        [조교모집] 23-2 건축학전공 A/B급 조교 모집 \n",
            "213               [정책과학대학원] 2023학년도 2학기 B급 학생조교 모집 (마감) \n",
            "214                        [조교모집] 2023-2학기 수학과 B급 조교 모집 \n",
            "215                  [교육혁신센터] 맞춤형 튜터링 튜터(가르치는 학생) 모집 안내 \n",
            "Name: [채용] 본교 인재개발원 연구원 채용 공고 , Length: 216, dtype: object\n",
            "X_shape\n",
            "(216,)\n"
          ]
        }
      ],
      "source": [
        "#1.데이터 불러오기(데이터형확인)(dim,shape)\n",
        "from google.colab import drive\n",
        "import pandas as pd\n",
        "\n",
        "# Google Drive 마운트\n",
        "drive.mount('/content/drive')\n",
        "file_path = '/content/drive/MyDrive/4U/db/db.sheet.xlsx'\n",
        "dataset = pd.read_excel(file_path)\n",
        "\n",
        "# 데이터 확인\n",
        "print(dataset)\n",
        "print(dataset.dtypes)# 각 열의 데이터 타입 확인\n",
        "print(dataset.shape)# 데이터의 행과 열의 개수 확인\n",
        "\n",
        "#titleSet keywordSet나누기\n",
        "X = dataset.iloc[:, 1] #titleSet\n",
        "\n",
        "#출력\n",
        "print(\"X_dataset\")\n",
        "print(X)\n",
        "print(\"X_shape\")\n",
        "print(X.shape)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kxDQdh7bfhxf",
        "outputId": "2077b064-ae2d-4153-b299-b3a5db5fd666"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: kiwipiepy in /usr/local/lib/python3.10/dist-packages (0.16.2)\n",
            "Requirement already satisfied: kiwipiepy-model~=0.16 in /usr/local/lib/python3.10/dist-packages (from kiwipiepy) (0.16.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from kiwipiepy) (1.23.5)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kiwipiepy) (4.66.1)\n"
          ]
        }
      ],
      "source": [
        "#필요한 라이브러리 불러오기(분해 이전)\n",
        "\n",
        "import numpy as np\n",
        "\n",
        "!pip install kiwipiepy\n",
        "from kiwipiepy import Kiwi\n",
        "\n",
        "from keybert import KeyBERT\n",
        "from transformers import BertModel\n",
        "\n",
        "model = BertModel.from_pretrained('skt/kobert-base-v1')\n",
        "kw_model = KeyBERT(model)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kRi1C5-mucl4",
        "outputId": "f833554e-894c-49f7-f1b4-bba166a13836"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['인재', '개발원', '채용', '상담회', '한국', '경제인', '협회', '전국경제인연합회', '채용', '상담회']\n",
            "['채용', '산학', '협력단', '직원', '채용', '공고']\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '영어', '말하기', '프로그램', '등록', '안내']\n",
            "['언어', '교육원', '학년도', '싱가포르', '공대', '위탁', '과정', '언어', '교육원', '한국어', '도우미', '모집']\n",
            "['교육', '혁신', '센터', '융합', '수업', '운영', '사례', '공유', '융합', '수업', '운영', '사례', '발표', '전시', '안내']\n",
            "['인재', '개발원', '학년도', '겨울', '방학', '현장', '실습', '모집', '안내']\n",
            "['학년도', '전기', '졸업', '예정', '여부', '조회', '졸업', '의사', '신청', '관련', '안내']\n",
            "['국제', '학생증', '발급', '지원', '행사', '안내']\n",
            "['학년도', '전공', '변경', '시행', '안내']\n",
            "['학년도', '시행', '안내']\n",
            "['국제', '교류', '싱가포르', '교환', '프로그램', '설명회']\n",
            "['대학', '건강', '센터', '학생', '건강', '검사', '시행', '안내']\n",
            "['연구윤리', '센터', '연구윤리', '특강', '신청', '안내']\n",
            "['학부', '학년도', '학기', '이화', '플러스', '장학금', '신청', '안내']\n",
            "['다문화', '연구소', '상호', '문화', '학술', '대회', '외국', '한국', '상호', '문화', '교육', '관점']\n",
            "['학부', '방일영', '문화', '재단', '장학', '선발', '안내', '북한이탈주민', '대학', '지원']\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '영어', '말하기', '프로그램', '등록', '안내']\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '고급', '영어', '글쓰기', '등록', '안내']\n",
            "['인권', '센터', '인권', '센터', '젠더', '교육', '플랫폼', '폭력', '예방', '특강', '신청', '안내']\n",
            "['인재', '개발원', '진로', '디자인', '세계', '진로', '특강']\n",
            "['학부', '년도', '전기공사공제조합', '장학회', '장학', '선발', '안내']\n",
            "['학생', '서비스', '센터', '물건', '확인']\n",
            "['미래', '혁신', '센터', '대학', '혁신', '지원', '사업', '학생', '인식', '조사', '시행', '안내']\n",
            "['채용', '사회', '과학', '대학', '사회학', '사무실', '계약', '직원', '채용', '공고']\n",
            "['학년도', '전공', '학과', '결정', '시행', '안내']\n",
            "['출판문화', '이화', '플래너', '이화', '달력', '출시', '기념', '팝업', '스토어']\n",
            "['조교', '모집', '학년도', '학기', '체육', '학부', '행정실', '조교', '모집']\n",
            "['학년도', '사범대', '교직', '과정', '이수', '신청', '안내']\n",
            "['모집', '년도', '창업', '교육', '혁신', '선도', '대학', '대학', '스타트업', '애널리스트', '모집']\n",
            "['공연', '문화', '연구', '센터', '평화', '음악회', '강당', '공연', '안내']\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '고급', '영어', '글쓰기', '등록', '안내']\n",
            "['고전', '글쓰기', '나눔', '리더십', '대체', '교과목', '수강자', '학년도', '겨울', '계절', '학기', '수강', '인정', '신청', '안내']\n",
            "['기업가', '센터', '겨울', '계절', '학기', '스타트업', '인턴십', '기업', '모집']\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '영어', '스피킹', '마스터', '프로그램', '등록', '안내']\n",
            "['인재', '개발원', '채용', '상담회', '한국', '경제인', '협회', '전국경제인연합회', '채용', '상담회']\n",
            "['규칙', '공포', '교원', '종합', '평가', '세칙', '개정', '세칙', '공포', '시행']\n",
            "['국제', '교류', '온라인', '참가', '학생', '모집', '활동', '모집', '연장']\n",
            "['변리사', '변리', '시험', '합격자']\n",
            "['미래', '혁신', '센터', '도전', '학기', '참여', '학생', '모집']\n",
            "['교육', '혁신', '센터', '융합', '수업']\n",
            "['채용', '이화여자대학교', '아시아', '여성학', '센터', '전임', '연구', '인력', '채용', '공고']\n",
            "['교육', '안내', '연구', '지식', '재산', '이해', '사전', '수강', '신청', '기간']\n",
            "['교육', '혁신', '센터', '성공', '팀플', '학습법', '워크숍', '운영', '안내']\n",
            "['대학', '건강', '센터', '피부과', '상담', '클리닉', '안내']\n",
            "['스크랜튼학부', '학년도', '스크랜튼', '학부', '진입', '설명회', '개최', '안내']\n",
            "['글로벌', '소통', '교육실', '학기', '사실', '근무', '조교', '모집']\n",
            "['채용', '총장실', '부총장', '업무', '지원', '계약', '직원', '모집']\n",
            "['글로벌', '소통', '교육실', '인문', '계열', '예체능', '계열', '대상', '계절', '학기', '필수', '교양', '영어', '개설', '사전', '안내']\n",
            "['화인', '나눔', '가게', '랭앤루', '기부', '안내']\n",
            "['연장', '채용', '연구윤리', '센터', '동물', '실험', '윤리', '위원회', '생물', '안전', '위원회', '연구원', '모집', '공고']\n",
            "['조교', '모집', '학기', '교목', '조교', '모집']\n",
            "['입학', '학년도', '전기', '공연', '예술', '대학원', '야간', '신입', '모집', '안내']\n",
            "['통역', '번역', '대학원', '노벨', '문학상', '수상', '작가', '클레지오', '특별', '강연']\n",
            "['채용', '산업', '융합', '대학', '행정실', '계약', '직원', '모집']\n",
            "['학생', '서비스', '센터', '물건', '확인']\n",
            "['학년도', '전기', '외국어', '교육', '특수', '대학원', '석사', '과정', '야간', '학기', '신입', '모집']\n",
            "['채용', '사회', '과학', '대학', '사회학', '사무실', '계약', '직원', '채용', '공고']\n",
            "['인권', '센터', '인권', '센터', '젠더', '교육', '플랫폼', '폭력', '예방', '특강', '초대']\n",
            "['국제', '학생증', '발급', '지원', '행사', '안내']\n",
            "['학사', '겨울', '계절', '학기', '필수', '교양', '영어', '수작업', '수강', '신청', '안내']\n",
            "['경영', '대학', '행정실', '이화', '안내']\n",
            "['조교', '학기', '법학전문대학원', '행정실', '조교', '모집']\n",
            "['학부', '학년도', '학기', '전공', '리더십', '장학금', '신청', '안내']\n",
            "['학부', '대학원', '재단', '음악회', '무료', '초대', '안내']\n",
            "['사범대', '행정실', '학년도', '교육', '행정', '고시', '특강', '안내']\n",
            "['대학', '건강', '센터', '정신', '건강', '의학과', '상담', '클리닉', '안내']\n",
            "['대학', '건강', '센터', '피부과', '상담', '클리닉', '안내']\n",
            "['학부', '년도', '두산연강재단', '대학', '장학', '선발', '안내', '생활비']\n",
            "['마인드', '이화', '여성', '기술', '창업', '포럼', '창업', '포텐']\n",
            "['인재', '개발원', '채용', '설명회']\n",
            "['채용', '이화여자대학교', '학교', '폭력', '예방', '연구소', '연구', '교수', '채용', '공고']\n",
            "['인재', '개발원', '방진', '방구석', '진로', '콘서트', '라인업']\n",
            "['인재', '개발원', '이화', '멘토링', '데이', '전략', '기획']\n",
            "['국제', '교류', '싱가포르', '교환', '프로그램', '설명회']\n",
            "['국제', '교류', '온라인', '참가', '학생', '모집', '활동']\n",
            "['채용', '임상', '치의학', '대학원', '행정실', '계약', '직원', '모집', '공고', '연장']\n",
            "['여성', '가족부', '여성', '청소년', '생리', '용품', '바우처', '지원', '안내', '홍보']\n",
            "['채용', '이화여자대학교', '기숙사', '행정실', '계약', '직원', '채용', '공고']\n",
            "['인재', '개발원', '겨울', '방학', '현장', '실습', '설명회', '진행', '안내']\n",
            "['학부', '년도', '제4기', '경원', '장학', '재단', '장학', '선발', '안내']\n",
            "['학부', '충남', '뿌리', '장학', '선발', '안내']\n",
            "['겨울', '계절', '학기', '영어', '스피킹', '특화', '프로그램', '개설']\n",
            "['겨울', '계절', '학기', '영어', '글쓰기', '특화', '프로그램', '고급', '영어', '글쓰기', '개설']\n",
            "['학생', '서비스', '센터', '물건', '확인']\n",
            "['대학', '건강', '센터', '인플루엔자', '계절', '독감', '예방', '접종', '시행', '안내']\n",
            "['인재', '개발원', '취업', '경험', '실무진', '면접', '안내']\n",
            "['인재', '개발원', '방진', '방구석', '진로', '콘서트', '라인업']\n",
            "['대학원', '학기', '일반', '대학원', '우수', '연구', '장학금', '신청', '안내']\n",
            "['학부', '학년도', '겨울', '계절', '학기', '국내', '대학', '학점', '교류', '수강', '안내']\n",
            "['동창회', '기금', '재학', '장학', '기금', '마련', '기증', '바자회', '개최', '안내']\n",
            "['학년도', '학기', '입학', '학부', '일반', '대학원', '논문', '제출', '자격', '부여', '일반', '대학원', '학부', '졸업', '논문', '제출', '자격', '부여', '학부', '신청', '안내']\n",
            "['인사', '이화여자대학교', '직원', '채용', '공고']\n",
            "['학부', '년도', '대산농촌재단', '장학', '선발', '안내']\n",
            "['학사', '학년도', '학기', '학부', '대학원', '중간', '강의', '평가', '안내']\n",
            "['학부', '대학원', '한국장학재단', '특별', '상환', '유예', '제도', '시행', '안내']\n",
            "['마인드', '조교', '모집', '여성', '지도력', '개발', '센터', '연구', '장학', '조교', '모집', '공고']\n",
            "['경영', '연구소', '세미나', '개인', '정보', '보호', '데이터', '활용', '개인', '연합', '학습', '클라이언트', '클러스터', '연구']\n",
            "['학부', '학년도', '학기', '장학', '선발', '안내']\n",
            "['인공', '지능', '대학', '행정실', '학년도', '학기', '학생', '조교', '모집']\n",
            "['채용', '언어', '교육원', '한국어', '교육부', '객원', '강사', '모집', '겨울', '학기', '학기']\n",
            "['총무', '본교', '대표', '전화', '교환', '근무', '계약', '직원', '모집']\n",
            "['채용', '사범대학', '국어교육', '사무실', '계약', '직원', '채용', '공고']\n",
            "['채용', '약학', '대학', '행정실', '계약', '직원', '모집', '지원']\n",
            "['학부', '학년도', '학기', '영어', '정보', '인증', '신청']\n",
            "['조교', '학기', '법학전문대학원', '행정실', '조교', '모집']\n",
            "['대학', '건강', '센터', '서버', '보수', '완료', '안내']\n",
            "['학생', '서비스', '센터', '물건', '확인']\n",
            "['모집', '시간', '이화', '여성', '기술', '창업', '포럼', '창업', '포텐']\n",
            "['채용', '연구윤리', '센터', '동물', '실험', '윤리', '위원회', '생물', '안전', '위원회', '연구원', '모집', '공고']\n",
            "['대학', '건강', '센터', '서버', '긴급', '보수', '관련', '이용', '안내']\n",
            "['모집', '이화', '스타트업', '아카데미', '수강', '모집']\n",
            "['이화', '저널리즘', '데이', '참가', '신청', '안내', '언론', '관련', '교과', '교과', '프로그램']\n",
            "['채용', '국제', '대학원', '행정', '직원', '모집', '공고', '프로그램']\n",
            "['교목', '학기', '졸업', '채플', '사진', '공모']\n",
            "['교목', '학기', '졸업', '채플', '소감', '모집']\n",
            "['교목', '학기', '이화', '감사', '페스티벌', '참가', '안내']\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내', '금일', '자정', '마감']\n",
            "['조교', '모집', '여성', '지도력', '개발', '센터', '연구', '조교', '모집', '공고']\n",
            "['인재', '개발원', '이화', '멘토링', '데이', '영업', '마케팅']\n",
            "['입학', '디자인', '대학원', '학년도', '전기', '신입', '모집', '안내']\n",
            "['학부', '학기', '성남시', '다자녀', '대학생', '장학금', '신청', '안내']\n",
            "['사회봉사', '학년도', '겨울', '국내', '이화', '봉사단', '봉사', '단원', '모집']\n",
            "['학사', '평생교육사', '자격증', '발급', '신청', '안내']\n",
            "['교육', '혁신', '센터', '특강', '초대']\n",
            "['홍보', '아이디어', '공모전', '온라인', '투표']\n",
            "['안전', '승강기', '운행', '중단', '안내']\n",
            "['모집', '창업', '동아리']\n",
            "['조교', '모집', '이화', '여자', '대학교', '학교', '폭력', '예방', '연구소', '조교', '모집']\n",
            "['학생', '상담', '센터', '학기', '심리', '교육', '워크숍', '개설', '안내']\n",
            "['학생', '지원', '학관', '연습실', '유레카', '공간', '사용', '신청', '관련', '안내', '유레카', '시스템', '예약']\n",
            "['채용', '이화', '의학', '교육', '센터', '계약직', '연구원', '채용', '공고', '수정']\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내', '금요일', '마감']\n",
            "['학생', '서비스', '센터', '물건', '확인']\n",
            "['대학', '건강', '센터', '산부인과', '상담', '클리닉', '시행', '안내']\n",
            "['채용', '국제', '대학원', '행정', '직원', '모집', '공고', '이화', '사업단']\n",
            "['이화', '저널리즘', '데이', '참가', '신청', '안내', '기자', '선배']\n",
            "['조교', '모집', '여성', '지도력', '개발', '센터', '연구', '조교', '모집', '공고']\n",
            "['한국대학사회봉사협의회', '월드', '프렌즈', '코리아', '청년', '봉사단', '단원', '모집', '겨울', '방학', '활동']\n",
            "['학부', '장학', '재단', '장학금', '신청', '안내']\n",
            "['이화문예', '공모전', '시조', '단편', '소설', '수필', '마감']\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내']\n",
            "['대학', '건강', '센터', '피부과', '상담', '클리닉', '안내']\n",
            "['사범대', '행정실', '학년도', '교육', '행정', '고시', '특강', '안내']\n",
            "['홍보', '아이디어', '공모전', '개최', '모집']\n",
            "['대학', '건강', '센터', '학생', '건강', '검사', '시행', '안내']\n",
            "['다문화', '연구소', '볼리비아', '상호', '문화', '대화', '개최']\n",
            "['모집', '인문', '융합', '전공', '글로벌', '영상', '예술사', '학년도', '학기', '수업', '조교', '모집', '마감']\n",
            "['이수', '매니지먼트', '주식', '회사', '관리자', '채용', '공고']\n",
            "['교내', '셔틀버스', '운행', '기간', '안내']\n",
            "['추석', '연휴', '기간', '학생', '식당', '운영', '안내']\n",
            "['건축', '삼성', '무대', '시설', '복구', '공사', '안내']\n",
            "['학년도', '전기', '교육대학원', '입학', '설명회', '온라인', '메타버스', '개최', '신입', '모집', '안내']\n",
            "['학생', '서비스', '센터', '물건', '확인']\n",
            "['규칙', '공포', '이화여자대학교', '직제', '개정', '직제', '공포', '시행']\n",
            "['이화', '상점', '기념품', '기념품점', '이전', '오픈', '이벤트', '안내', '오픈']\n",
            "['청탁', '금지법', '시행령', '개정', '선물', '가액', '범위', '안내', '추석', '선물', '가액', '확인']\n",
            "['학년도', '전기', '외국어', '교육', '특수', '대학원', '석사', '학위', '과정', '야간', '학기', '신입', '모집']\n",
            "['학년도', '전기', '전문', '특수', '대학원', '모집', '안내']\n",
            "['채용', '임상', '치의학', '대학원', '행정실', '계약', '직원', '모집', '공고']\n",
            "['생명', '의료법', '연구소', '교수', '특별', '강연', '안내']\n",
            "['인재', '개발원', '이화', '멘토링', '데이', '영업', '마케팅']\n",
            "['수업', '지원', '조교', '모집', '여성', '학과', '화3', '금3', '수업', '수업', '조교', '모집']\n",
            "['채용', '자연', '과학', '대학', '행정실', '계약', '직원', '모집', '공고']\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내']\n",
            "['경영', '대학', '행정실', '추가', '학기', '수업', '조교', '모집', '공고', '수정']\n",
            "['농림', '축산', '식품부', '아침밥', '학생', '만족도', '조사', '실시', '안내']\n",
            "['교육', '혁신', '센터', '조교', '모집']\n",
            "['대학', '혁신', '지원', '사업', '대학', '혁신', '지원', '사업', '리더스', '포럼', '마포', '신촌', '지역', '대학', '연합', '주차']\n",
            "['학부', '학년도', '학기', '국가', '장학금', '유형', '편입', '지원', '특별', '구제', '신청', '안내']\n",
            "['이화', '상점', '카페', '학생', '문화관', '오픈', '이벤트', '안내', '오픈']\n",
            "['학부', '년도', '학기', '안산시', '대학', '본인', '부담', '등록금', '지원', '안내']\n",
            "['학부', '학기', '고양시', '대학', '본인', '부담', '등록금', '지원', '안내']\n",
            "['조교', '모집', '이화여대', '언어', '교육원', '학기', '디자인', '조교', '모집']\n",
            "['학기', '장애', '학생', '도우미', '추가', '모집', '대학원', '학생', '가능']\n",
            "['수업', '조교', '모집', '여성', '학과', '학기', '조교', '모집']\n",
            "['공무원', '시험', '기술', '합격']\n",
            "['사회봉사', '겨울', '해외', '이화', '봉사단', '캄보디아', '추가', '모집', '내일']\n",
            "['특수', '교육', '연구소', '이화', '특수', '교육', '학술', '대회', '개최', '안내']\n",
            "['학생', '서비스', '센터', '물건', '확인']\n",
            "['모집', '이화', '비즈니스', '플랜', '창업', '경진', '대회', '참여', '모집', '안내']\n",
            "['인권', '센터', '인권', '폭력', '예방', '교육', '법정', '의무', '교육', '수강', '안내']\n",
            "['인권', '센터', '서울시', '폭력', '예방', '교육', '교육', '수요', '조사']\n",
            "['동양', '철학', '원전', '강독', '장자', '내편', '세미나']\n",
            "['채용', '이화여자대학교', '자연대', '생명', '과학', '전공', '사무실', '계약', '직원', '채용']\n",
            "['이화여대', '인공지능', '융합', '혁신', '대학원', '사업', '산학', '협력', '포럼', '초대']\n",
            "['대학', '건강', '센터', '추석', '연휴', '감염병', '예방', '준수', '사항', '안내']\n",
            "['조교', '모집', '건축학', '전공', '조교', '모집']\n",
            "['대학원', '학기', '대학원', '전공', '박람회', '개최', '안내']\n",
            "['사회봉사', '학기', '전공', '연계', '봉사', '소모임', '동아리', '봉사', '활동', '프로그램', '공모', '안내']\n",
            "['학부', '수림', '재단', '동교', '인재', '선발', '안내']\n",
            "['대학', '건강', '센터', '정신', '건강', '의학과', '상담', '클리닉', '안내']\n",
            "['입학', '학년도', '전기', '데이터', '사이언스', '대학원', '신입', '모집', '안내']\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내']\n",
            "['학생', '지원', '학년도', '학기', '학생', '학술', '활동', '지원', '안내']\n",
            "['모집', '이화', '스타트업', '캠프', '참여', '대학원', '창업', '동아리', '모집']\n",
            "['학부', '학년도', '학기', '복수', '전공', '신청', '취소', '안내']\n",
            "['학기', '일반', '대학원', '부전공', '신청', '취소', '안내']\n",
            "['대학', '혁신', '지원', '사업', '대학', '혁신', '지원', '사업', '리더스', '포럼', '마포', '신촌', '지역', '대학', '연합']\n",
            "['문화예술', '교육사', '역량', '강화', '특강', '문화', '예술', '치유', '프로그램', '이해', '안내']\n",
            "['건축학', '전공', '학기', '조교', '모집', '추가', '연장']\n",
            "['조교', '모집', '학년도', '전기', '일반', '대학원', '전형', '관리', '조교', '모집']\n",
            "['학생', '서비스', '센터', '물건', '확인']\n",
            "['화인', '나눔', '가게', '스파오', '미쏘', '기부', '안내']\n",
            "['도서관', '이용자', '만족도', '조사', '실시', '선물', '증정']\n",
            "['출판문화', '신간', '안내', '시민', '생활', '민사', '생활법률', '강의']\n",
            "['서울시', '청년', '주간', '행사', '홍보']\n",
            "['학기', '장애', '학생', '도우미', '국가', '근로', '장학', '모집', '교과목', '업데이트']\n",
            "['모집', '학년도', '학기', '커뮤니케이션', '미디어', '학부', '대학원', '수업', '조교', '모집', '기간', '연장']\n",
            "['조교', '모집', '간호학', '수업', '조교', '모집']\n",
            "['조교', '모집', '학기', '교목', '조교', '모집', '마감']\n",
            "['교육', '혁신', '센터', '학년도', '학기', '학습법', '워크숍', '운영', '안내']\n",
            "['채용', '이화여자대학교', '산학', '협력단', '직원', '사업', '관리', '정산', '채용', '공고']\n",
            "['조교', '모집', '건축학', '전공', '조교', '모집']\n",
            "['정책과학', '대학원', '학년도', '학기', '학생', '조교', '모집', '마감']\n",
            "['조교', '모집', '학기', '수학과', '조교', '모집']\n",
            "['교육', '혁신', '센터', '맞춤', '튜터링', '튜터', '학생', '모집', '안내']\n"
          ]
        }
      ],
      "source": [
        "import re\n",
        "\n",
        "# Kiwi 형태소 분석기 초기화\n",
        "kiwi = Kiwi()\n",
        "\n",
        "# 정규표현식을 사용하여 알파벳이 포함된 단어를 걸러내는 패턴\n",
        "alphabet_pattern = re.compile('[a-zA-Z]')\n",
        "\n",
        "# 각 행의 키워드를 저장할 리스트\n",
        "X_kiwi = []\n",
        "\n",
        "# 각 행을 처리하여 키워드 추출 후 저장\n",
        "for title in X:\n",
        "    # Kiwi 형태소 분석 수행\n",
        "    kiwi_result = kiwi.analyze(title)\n",
        "\n",
        "    # 명사 추출 함수\n",
        "    def noun_extractor_kiwi(kiwi_result):\n",
        "        nouns = []\n",
        "        for token, pos, _, _ in kiwi_result[0][0]:\n",
        "            if len(token) != 1 and (pos.startswith('N') or pos.startswith('SL')) and not alphabet_pattern.search(token):\n",
        "                nouns.append(token)\n",
        "        return nouns\n",
        "\n",
        "    # 명사 추출\n",
        "    nouns = noun_extractor_kiwi(kiwi_result)\n",
        "\n",
        "    # 추출된 명사를 X_kiwi에 추가\n",
        "    X_kiwi.append(nouns)\n",
        "\n",
        "for i in range(len(X_kiwi)):\n",
        "  print(X_kiwi[i])\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "o0-ruZNBhJgH"
      },
      "source": [
        "#2.모델 플로우: 키위=>형태소 분리=>패딩=>키버트 사용=>top_1출력\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mMZsueg8a8R4",
        "outputId": "e0c928e8-792d-48df-8310-448a10ce9403"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "216\n",
            "['인재 개발원 채용 상담회 한국 경제인 협회 전국경제인연합회 채용 상담회', '채용 산학 협력단 직원 채용 공고', '글로벌 소통 교육실 겨울 계절 학기 영어 말하기 프로그램 등록 안내', '언어 교육원 학년도 싱가포르 공대 위탁 과정 언어 교육원 한국어 도우미 모집', '교육 혁신 센터 융합 수업 운영 사례 공유 융합 수업 운영 사례 발표 전시 안내', '인재 개발원 학년도 겨울 방학 현장 실습 모집 안내', '학년도 전기 졸업 예정 여부 조회 졸업 의사 신청 관련 안내', '국제 학생증 발급 지원 행사 안내', '학년도 전공 변경 시행 안내', '학년도 시행 안내', '국제 교류 싱가포르 교환 프로그램 설명회', '대학 건강 센터 학생 건강 검사 시행 안내', '연구윤리 센터 연구윤리 특강 신청 안내', '학부 학년도 학기 이화 플러스 장학금 신청 안내', '다문화 연구소 상호 문화 학술 대회 외국 한국 상호 문화 교육 관점', '학부 방일영 문화 재단 장학 선발 안내 북한이탈주민 대학 지원', '글로벌 소통 교육실 겨울 계절 학기 영어 말하기 프로그램 등록 안내', '글로벌 소통 교육실 겨울 계절 학기 고급 영어 글쓰기 등록 안내', '인권 센터 인권 센터 젠더 교육 플랫폼 폭력 예방 특강 신청 안내', '인재 개발원 진로 디자인 세계 진로 특강', '학부 년도 전기공사공제조합 장학회 장학 선발 안내', '학생 서비스 센터 물건 확인', '미래 혁신 센터 대학 혁신 지원 사업 학생 인식 조사 시행 안내', '채용 사회 과학 대학 사회학 사무실 계약 직원 채용 공고', '학년도 전공 학과 결정 시행 안내', '출판문화 이화 플래너 이화 달력 출시 기념 팝업 스토어', '조교 모집 학년도 학기 체육 학부 행정실 조교 모집', '학년도 사범대 교직 과정 이수 신청 안내', '모집 년도 창업 교육 혁신 선도 대학 대학 스타트업 애널리스트 모집', '공연 문화 연구 센터 평화 음악회 강당 공연 안내', '글로벌 소통 교육실 겨울 계절 학기 고급 영어 글쓰기 등록 안내', '고전 글쓰기 나눔 리더십 대체 교과목 수강자 학년도 겨울 계절 학기 수강 인정 신청 안내', '기업가 센터 겨울 계절 학기 스타트업 인턴십 기업 모집', '글로벌 소통 교육실 겨울 계절 학기 영어 스피킹 마스터 프로그램 등록 안내', '인재 개발원 채용 상담회 한국 경제인 협회 전국경제인연합회 채용 상담회', '규칙 공포 교원 종합 평가 세칙 개정 세칙 공포 시행', '국제 교류 온라인 참가 학생 모집 활동 모집 연장', '변리사 변리 시험 합격자', '미래 혁신 센터 도전 학기 참여 학생 모집', '교육 혁신 센터 융합 수업', '채용 이화여자대학교 아시아 여성학 센터 전임 연구 인력 채용 공고', '교육 안내 연구 지식 재산 이해 사전 수강 신청 기간', '교육 혁신 센터 성공 팀플 학습법 워크숍 운영 안내', '대학 건강 센터 피부과 상담 클리닉 안내', '스크랜튼학부 학년도 스크랜튼 학부 진입 설명회 개최 안내', '글로벌 소통 교육실 학기 사실 근무 조교 모집', '채용 총장실 부총장 업무 지원 계약 직원 모집', '글로벌 소통 교육실 인문 계열 예체능 계열 대상 계절 학기 필수 교양 영어 개설 사전 안내', '화인 나눔 가게 랭앤루 기부 안내', '연장 채용 연구윤리 센터 동물 실험 윤리 위원회 생물 안전 위원회 연구원 모집 공고', '조교 모집 학기 교목 조교 모집', '입학 학년도 전기 공연 예술 대학원 야간 신입 모집 안내', '통역 번역 대학원 노벨 문학상 수상 작가 클레지오 특별 강연', '채용 산업 융합 대학 행정실 계약 직원 모집', '학생 서비스 센터 물건 확인', '학년도 전기 외국어 교육 특수 대학원 석사 과정 야간 학기 신입 모집', '채용 사회 과학 대학 사회학 사무실 계약 직원 채용 공고', '인권 센터 인권 센터 젠더 교육 플랫폼 폭력 예방 특강 초대', '국제 학생증 발급 지원 행사 안내', '학사 겨울 계절 학기 필수 교양 영어 수작업 수강 신청 안내', '경영 대학 행정실 이화 안내', '조교 학기 법학전문대학원 행정실 조교 모집', '학부 학년도 학기 전공 리더십 장학금 신청 안내', '학부 대학원 재단 음악회 무료 초대 안내', '사범대 행정실 학년도 교육 행정 고시 특강 안내', '대학 건강 센터 정신 건강 의학과 상담 클리닉 안내', '대학 건강 센터 피부과 상담 클리닉 안내', '학부 년도 두산연강재단 대학 장학 선발 안내 생활비', '마인드 이화 여성 기술 창업 포럼 창업 포텐', '인재 개발원 채용 설명회', '채용 이화여자대학교 학교 폭력 예방 연구소 연구 교수 채용 공고', '인재 개발원 방진 방구석 진로 콘서트 라인업', '인재 개발원 이화 멘토링 데이 전략 기획', '국제 교류 싱가포르 교환 프로그램 설명회', '국제 교류 온라인 참가 학생 모집 활동', '채용 임상 치의학 대학원 행정실 계약 직원 모집 공고 연장', '여성 가족부 여성 청소년 생리 용품 바우처 지원 안내 홍보', '채용 이화여자대학교 기숙사 행정실 계약 직원 채용 공고', '인재 개발원 겨울 방학 현장 실습 설명회 진행 안내', '학부 년도 제4기 경원 장학 재단 장학 선발 안내', '학부 충남 뿌리 장학 선발 안내', '겨울 계절 학기 영어 스피킹 특화 프로그램 개설', '겨울 계절 학기 영어 글쓰기 특화 프로그램 고급 영어 글쓰기 개설', '학생 서비스 센터 물건 확인', '대학 건강 센터 인플루엔자 계절 독감 예방 접종 시행 안내', '인재 개발원 취업 경험 실무진 면접 안내', '인재 개발원 방진 방구석 진로 콘서트 라인업', '대학원 학기 일반 대학원 우수 연구 장학금 신청 안내', '학부 학년도 겨울 계절 학기 국내 대학 학점 교류 수강 안내', '동창회 기금 재학 장학 기금 마련 기증 바자회 개최 안내', '학년도 학기 입학 학부 일반 대학원 논문 제출 자격 부여 일반 대학원 학부 졸업 논문 제출 자격 부여 학부 신청 안내', '인사 이화여자대학교 직원 채용 공고', '학부 년도 대산농촌재단 장학 선발 안내', '학사 학년도 학기 학부 대학원 중간 강의 평가 안내', '학부 대학원 한국장학재단 특별 상환 유예 제도 시행 안내', '마인드 조교 모집 여성 지도력 개발 센터 연구 장학 조교 모집 공고', '경영 연구소 세미나 개인 정보 보호 데이터 활용 개인 연합 학습 클라이언트 클러스터 연구', '학부 학년도 학기 장학 선발 안내', '인공 지능 대학 행정실 학년도 학기 학생 조교 모집', '채용 언어 교육원 한국어 교육부 객원 강사 모집 겨울 학기 학기', '총무 본교 대표 전화 교환 근무 계약 직원 모집', '채용 사범대학 국어교육 사무실 계약 직원 채용 공고', '채용 약학 대학 행정실 계약 직원 모집 지원', '학부 학년도 학기 영어 정보 인증 신청', '조교 학기 법학전문대학원 행정실 조교 모집', '대학 건강 센터 서버 보수 완료 안내', '학생 서비스 센터 물건 확인', '모집 시간 이화 여성 기술 창업 포럼 창업 포텐', '채용 연구윤리 센터 동물 실험 윤리 위원회 생물 안전 위원회 연구원 모집 공고', '대학 건강 센터 서버 긴급 보수 관련 이용 안내', '모집 이화 스타트업 아카데미 수강 모집', '이화 저널리즘 데이 참가 신청 안내 언론 관련 교과 교과 프로그램', '채용 국제 대학원 행정 직원 모집 공고 프로그램', '교목 학기 졸업 채플 사진 공모', '교목 학기 졸업 채플 소감 모집', '교목 학기 이화 감사 페스티벌 참가 안내', '트랙 학년도 학기 트랙 신청 안내 금일 자정 마감', '조교 모집 여성 지도력 개발 센터 연구 조교 모집 공고', '인재 개발원 이화 멘토링 데이 영업 마케팅', '입학 디자인 대학원 학년도 전기 신입 모집 안내', '학부 학기 성남시 다자녀 대학생 장학금 신청 안내', '사회봉사 학년도 겨울 국내 이화 봉사단 봉사 단원 모집', '학사 평생교육사 자격증 발급 신청 안내', '교육 혁신 센터 특강 초대', '홍보 아이디어 공모전 온라인 투표', '안전 승강기 운행 중단 안내', '모집 창업 동아리', '조교 모집 이화 여자 대학교 학교 폭력 예방 연구소 조교 모집', '학생 상담 센터 학기 심리 교육 워크숍 개설 안내', '학생 지원 학관 연습실 유레카 공간 사용 신청 관련 안내 유레카 시스템 예약', '채용 이화 의학 교육 센터 계약직 연구원 채용 공고 수정', '트랙 학년도 학기 트랙 신청 안내 금요일 마감', '학생 서비스 센터 물건 확인', '대학 건강 센터 산부인과 상담 클리닉 시행 안내', '채용 국제 대학원 행정 직원 모집 공고 이화 사업단', '이화 저널리즘 데이 참가 신청 안내 기자 선배', '조교 모집 여성 지도력 개발 센터 연구 조교 모집 공고', '한국대학사회봉사협의회 월드 프렌즈 코리아 청년 봉사단 단원 모집 겨울 방학 활동', '학부 장학 재단 장학금 신청 안내', '이화문예 공모전 시조 단편 소설 수필 마감', '트랙 학년도 학기 트랙 신청 안내', '대학 건강 센터 피부과 상담 클리닉 안내', '사범대 행정실 학년도 교육 행정 고시 특강 안내', '홍보 아이디어 공모전 개최 모집', '대학 건강 센터 학생 건강 검사 시행 안내', '다문화 연구소 볼리비아 상호 문화 대화 개최', '모집 인문 융합 전공 글로벌 영상 예술사 학년도 학기 수업 조교 모집 마감', '이수 매니지먼트 주식 회사 관리자 채용 공고', '교내 셔틀버스 운행 기간 안내', '추석 연휴 기간 학생 식당 운영 안내', '건축 삼성 무대 시설 복구 공사 안내', '학년도 전기 교육대학원 입학 설명회 온라인 메타버스 개최 신입 모집 안내', '학생 서비스 센터 물건 확인', '규칙 공포 이화여자대학교 직제 개정 직제 공포 시행', '이화 상점 기념품 기념품점 이전 오픈 이벤트 안내 오픈', '청탁 금지법 시행령 개정 선물 가액 범위 안내 추석 선물 가액 확인', '학년도 전기 외국어 교육 특수 대학원 석사 학위 과정 야간 학기 신입 모집', '학년도 전기 전문 특수 대학원 모집 안내', '채용 임상 치의학 대학원 행정실 계약 직원 모집 공고', '생명 의료법 연구소 교수 특별 강연 안내', '인재 개발원 이화 멘토링 데이 영업 마케팅', '수업 지원 조교 모집 여성 학과 화3 금3 수업 수업 조교 모집', '채용 자연 과학 대학 행정실 계약 직원 모집 공고', '트랙 학년도 학기 트랙 신청 안내', '경영 대학 행정실 추가 학기 수업 조교 모집 공고 수정', '농림 축산 식품부 아침밥 학생 만족도 조사 실시 안내', '교육 혁신 센터 조교 모집', '대학 혁신 지원 사업 대학 혁신 지원 사업 리더스 포럼 마포 신촌 지역 대학 연합 주차', '학부 학년도 학기 국가 장학금 유형 편입 지원 특별 구제 신청 안내', '이화 상점 카페 학생 문화관 오픈 이벤트 안내 오픈', '학부 년도 학기 안산시 대학 본인 부담 등록금 지원 안내', '학부 학기 고양시 대학 본인 부담 등록금 지원 안내', '조교 모집 이화여대 언어 교육원 학기 디자인 조교 모집', '학기 장애 학생 도우미 추가 모집 대학원 학생 가능', '수업 조교 모집 여성 학과 학기 조교 모집', '공무원 시험 기술 합격', '사회봉사 겨울 해외 이화 봉사단 캄보디아 추가 모집 내일', '특수 교육 연구소 이화 특수 교육 학술 대회 개최 안내', '학생 서비스 센터 물건 확인', '모집 이화 비즈니스 플랜 창업 경진 대회 참여 모집 안내', '인권 센터 인권 폭력 예방 교육 법정 의무 교육 수강 안내', '인권 센터 서울시 폭력 예방 교육 교육 수요 조사', '동양 철학 원전 강독 장자 내편 세미나', '채용 이화여자대학교 자연대 생명 과학 전공 사무실 계약 직원 채용', '이화여대 인공지능 융합 혁신 대학원 사업 산학 협력 포럼 초대', '대학 건강 센터 추석 연휴 감염병 예방 준수 사항 안내', '조교 모집 건축학 전공 조교 모집', '대학원 학기 대학원 전공 박람회 개최 안내', '사회봉사 학기 전공 연계 봉사 소모임 동아리 봉사 활동 프로그램 공모 안내', '학부 수림 재단 동교 인재 선발 안내', '대학 건강 센터 정신 건강 의학과 상담 클리닉 안내', '입학 학년도 전기 데이터 사이언스 대학원 신입 모집 안내', '트랙 학년도 학기 트랙 신청 안내', '학생 지원 학년도 학기 학생 학술 활동 지원 안내', '모집 이화 스타트업 캠프 참여 대학원 창업 동아리 모집', '학부 학년도 학기 복수 전공 신청 취소 안내', '학기 일반 대학원 부전공 신청 취소 안내', '대학 혁신 지원 사업 대학 혁신 지원 사업 리더스 포럼 마포 신촌 지역 대학 연합', '문화예술 교육사 역량 강화 특강 문화 예술 치유 프로그램 이해 안내', '건축학 전공 학기 조교 모집 추가 연장', '조교 모집 학년도 전기 일반 대학원 전형 관리 조교 모집', '학생 서비스 센터 물건 확인', '화인 나눔 가게 스파오 미쏘 기부 안내', '도서관 이용자 만족도 조사 실시 선물 증정', '출판문화 신간 안내 시민 생활 민사 생활법률 강의', '서울시 청년 주간 행사 홍보', '학기 장애 학생 도우미 국가 근로 장학 모집 교과목 업데이트', '모집 학년도 학기 커뮤니케이션 미디어 학부 대학원 수업 조교 모집 기간 연장', '조교 모집 간호학 수업 조교 모집', '조교 모집 학기 교목 조교 모집 마감', '교육 혁신 센터 학년도 학기 학습법 워크숍 운영 안내', '채용 이화여자대학교 산학 협력단 직원 사업 관리 정산 채용 공고', '조교 모집 건축학 전공 조교 모집', '정책과학 대학원 학년도 학기 학생 조교 모집 마감', '조교 모집 학기 수학과 조교 모집', '교육 혁신 센터 맞춤 튜터링 튜터 학생 모집 안내']\n",
            "Requirement already satisfied: xlsxwriter in /usr/local/lib/python3.10/dist-packages (3.1.9)\n",
            "216\n"
          ]
        }
      ],
      "source": [
        "#KIWI=KIWI_COMBINED(목적; 코버트 사용을 위해 리스트에서 문자열로 JOIN\n",
        "# x 리스트에 있는 문자열들을 join하여 하나의 문자열로 합치기\n",
        "\n",
        "X_kiwi_combined = [' '.join(sentence) for sentence in X_kiwi]\n",
        "print(len(X_kiwi_combined))\n",
        "print(X_kiwi_combined)\n",
        "\n",
        "#k_kiwi값 엑셀에 자동저장(num=217,header가 추가됨)\n",
        "!pip install xlsxwriter\n",
        "df_kiwi = pd.DataFrame(X_kiwi)\n",
        "file_path = '/content/drive/MyDrive/4U/db/kiwi_auto.xlsx'\n",
        "with pd.ExcelWriter(file_path, engine='xlsxwriter') as writer:\n",
        "    df_kiwi.to_excel(writer, sheet_name='kiwi_auto', index=False)\n",
        "\n",
        "print(len(X_kiwi_combined))\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0nsdsgBhkm9h",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7f59ecba-8b69-40c1-bf0e-348c2b75a238"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "value at index 0: [('협회', 0.7234)]\n",
            "value at index 1: [('공고', 0.7352)]\n",
            "value at index 2: [('영어', 0.5199)]\n",
            "value at index 3: [('싱가포르', 0.6966)]\n",
            "value at index 4: [('수업', 0.5876)]\n",
            "value at index 5: [('학년도', 0.8406)]\n",
            "value at index 6: [('학년도', 0.8442)]\n",
            "value at index 7: [('국제', 0.8671)]\n",
            "value at index 8: [('학년도', 0.9189)]\n",
            "value at index 9: [('학년도', 0.9569)]\n",
            "value at index 10: [('싱가포르', 0.6962)]\n",
            "value at index 11: [('안내', 0.7502)]\n",
            "value at index 12: [('연구윤리', 0.8173)]\n",
            "value at index 13: [('학년도', 0.8401)]\n",
            "value at index 14: [('다문화', 0.6997)]\n",
            "value at index 15: [('대학', 0.703)]\n",
            "value at index 16: [('영어', 0.5199)]\n",
            "value at index 17: [('글쓰기', 0.5861)]\n",
            "value at index 18: [('폭력', 0.5651)]\n",
            "value at index 19: [('디자인', 0.7502)]\n",
            "value at index 20: [('전기공사공제조합', 0.6929)]\n",
            "value at index 21: [('학생', 0.5215)]\n",
            "value at index 22: [('혁신', 0.5841)]\n",
            "value at index 23: [('채용', 0.7076)]\n",
            "value at index 24: [('학년도', 0.9211)]\n",
            "value at index 25: [('스토어', 0.728)]\n",
            "value at index 26: [('학년도', 0.7808)]\n",
            "value at index 27: [('학년도', 0.8774)]\n",
            "value at index 28: [('애널리스트', 0.6331)]\n",
            "value at index 29: [('음악회', 0.7906)]\n",
            "value at index 30: [('글쓰기', 0.5861)]\n",
            "value at index 31: [('학년도', 0.8248)]\n",
            "value at index 32: [('인턴십', 0.6066)]\n",
            "value at index 33: [('소통', 0.5065)]\n",
            "value at index 34: [('협회', 0.7234)]\n",
            "value at index 35: [('공포', 0.6365)]\n",
            "value at index 36: [('온라인', 0.5318)]\n",
            "value at index 37: [('변리사', 0.8997)]\n",
            "value at index 38: [('혁신', 0.5955)]\n",
            "value at index 39: [('혁신', 0.6316)]\n",
            "value at index 40: [('아시아', 0.5987)]\n",
            "value at index 41: [('수강', 0.6815)]\n",
            "value at index 42: [('학습법', 0.684)]\n",
            "value at index 43: [('안내', 0.7453)]\n",
            "value at index 44: [('학년도', 0.8571)]\n",
            "value at index 45: [('모집', 0.5705)]\n",
            "value at index 46: [('총장실', 0.7384)]\n",
            "value at index 47: [('안내', 0.7462)]\n",
            "value at index 48: [('안내', 0.8178)]\n",
            "value at index 49: [('연구윤리', 0.5215)]\n",
            "value at index 50: [('학기', 0.7871)]\n",
            "value at index 51: [('학년도', 0.7347)]\n",
            "value at index 52: [('클레지오', 0.7653)]\n",
            "value at index 53: [('채용', 0.7255)]\n",
            "value at index 54: [('학생', 0.5215)]\n",
            "value at index 55: [('학기', 0.6542)]\n",
            "value at index 56: [('채용', 0.7076)]\n",
            "value at index 57: [('폭력', 0.5291)]\n",
            "value at index 58: [('국제', 0.8671)]\n",
            "value at index 59: [('학기', 0.7082)]\n",
            "value at index 60: [('안내', 0.8496)]\n",
            "value at index 61: [('법학전문대학원', 0.8018)]\n",
            "value at index 62: [('학년도', 0.8558)]\n",
            "value at index 63: [('음악회', 0.7464)]\n",
            "value at index 64: [('학년도', 0.8271)]\n",
            "value at index 65: [('대학', 0.6994)]\n",
            "value at index 66: [('안내', 0.7453)]\n",
            "value at index 67: [('두산연강재단', 0.8155)]\n",
            "value at index 68: [('여성', 0.6442)]\n",
            "value at index 69: [('인재', 0.7506)]\n",
            "value at index 70: [('폭력', 0.693)]\n",
            "value at index 71: [('콘서트', 0.7124)]\n",
            "value at index 72: [('개발원', 0.7409)]\n",
            "value at index 73: [('싱가포르', 0.6962)]\n",
            "value at index 74: [('온라인', 0.5818)]\n",
            "value at index 75: [('채용', 0.6305)]\n",
            "value at index 76: [('여성', 0.5174)]\n",
            "value at index 77: [('공고', 0.7088)]\n",
            "value at index 78: [('안내', 0.7709)]\n",
            "value at index 79: [('안내', 0.7349)]\n",
            "value at index 80: [('안내', 0.7703)]\n",
            "value at index 81: [('겨울', 0.6212)]\n",
            "value at index 82: [('글쓰기', 0.6389)]\n",
            "value at index 83: [('학생', 0.5215)]\n",
            "value at index 84: [('인플루엔자', 0.8305)]\n",
            "value at index 85: [('안내', 0.7987)]\n",
            "value at index 86: [('콘서트', 0.7124)]\n",
            "value at index 87: [('학기', 0.7724)]\n",
            "value at index 88: [('학년도', 0.7469)]\n",
            "value at index 89: [('안내', 0.8217)]\n",
            "value at index 90: [('학년도', 0.7996)]\n",
            "value at index 91: [('공고', 0.7349)]\n",
            "value at index 92: [('안내', 0.8086)]\n",
            "value at index 93: [('학년도', 0.8798)]\n",
            "value at index 94: [('한국장학재단', 0.7494)]\n",
            "value at index 95: [('여성', 0.5365)]\n",
            "value at index 96: [('학습', 0.4678)]\n",
            "value at index 97: [('학년도', 0.8665)]\n",
            "value at index 98: [('대학', 0.7023)]\n",
            "value at index 99: [('한국어', 0.6625)]\n",
            "value at index 100: [('직원', 0.5752)]\n",
            "value at index 101: [('채용', 0.6959)]\n",
            "value at index 102: [('대학', 0.6072)]\n",
            "value at index 103: [('학년도', 0.7518)]\n",
            "value at index 104: [('법학전문대학원', 0.8018)]\n",
            "value at index 105: [('대학', 0.5973)]\n",
            "value at index 106: [('학생', 0.5215)]\n",
            "value at index 107: [('여성', 0.514)]\n",
            "value at index 108: [('연구윤리', 0.5236)]\n",
            "value at index 109: [('서버', 0.6254)]\n",
            "value at index 110: [('스타트업', 0.7232)]\n",
            "value at index 111: [('교과', 0.6931)]\n",
            "value at index 112: [('채용', 0.7069)]\n",
            "value at index 113: [('졸업', 0.6569)]\n",
            "value at index 114: [('졸업', 0.8146)]\n",
            "value at index 115: [('페스티벌', 0.9036)]\n",
            "value at index 116: [('학년도', 0.8706)]\n",
            "value at index 117: [('여성', 0.4937)]\n",
            "value at index 118: [('마케팅', 0.7353)]\n",
            "value at index 119: [('학년도', 0.7857)]\n",
            "value at index 120: [('성남시', 0.8475)]\n",
            "value at index 121: [('사회봉사', 0.6604)]\n",
            "value at index 122: [('안내', 0.8059)]\n",
            "value at index 123: [('혁신', 0.6175)]\n",
            "value at index 124: [('투표', 0.6055)]\n",
            "value at index 125: [('안내', 0.7459)]\n",
            "value at index 126: [('모집', 0.8029)]\n",
            "value at index 127: [('폭력', 0.5918)]\n",
            "value at index 128: [('워크숍', 0.669)]\n",
            "value at index 129: [('안내', 0.7534)]\n",
            "value at index 130: [('수정', 0.6291)]\n",
            "value at index 131: [('학년도', 0.7772)]\n",
            "value at index 132: [('학생', 0.5215)]\n",
            "value at index 133: [('산부인과', 0.8224)]\n",
            "value at index 134: [('모집', 0.6498)]\n",
            "value at index 135: [('안내', 0.8704)]\n",
            "value at index 136: [('여성', 0.4937)]\n",
            "value at index 137: [('한국대학사회봉사협의회', 0.7764)]\n",
            "value at index 138: [('안내', 0.7839)]\n",
            "value at index 139: [('이화문예', 0.8568)]\n",
            "value at index 140: [('트랙', 0.7892)]\n",
            "value at index 141: [('안내', 0.7453)]\n",
            "value at index 142: [('학년도', 0.8271)]\n",
            "value at index 143: [('홍보', 0.7091)]\n",
            "value at index 144: [('안내', 0.7502)]\n",
            "value at index 145: [('개최', 0.8028)]\n",
            "value at index 146: [('영상', 0.6844)]\n",
            "value at index 147: [('관리자', 0.7938)]\n",
            "value at index 148: [('안내', 0.7256)]\n",
            "value at index 149: [('식당', 0.6587)]\n",
            "value at index 150: [('삼성', 0.5727)]\n",
            "value at index 151: [('학년도', 0.8284)]\n",
            "value at index 152: [('학생', 0.5215)]\n",
            "value at index 153: [('공포', 0.5838)]\n",
            "value at index 154: [('기념품점', 0.721)]\n",
            "value at index 155: [('안내', 0.7947)]\n",
            "value at index 156: [('학기', 0.6516)]\n",
            "value at index 157: [('학년도', 0.8206)]\n",
            "value at index 158: [('직원', 0.6475)]\n",
            "value at index 159: [('안내', 0.7947)]\n",
            "value at index 160: [('마케팅', 0.7353)]\n",
            "value at index 161: [('금3', 0.6783)]\n",
            "value at index 162: [('공고', 0.6381)]\n",
            "value at index 163: [('트랙', 0.7892)]\n",
            "value at index 164: [('학기', 0.6194)]\n",
            "value at index 165: [('식품부', 0.6993)]\n",
            "value at index 166: [('혁신', 0.6315)]\n",
            "value at index 167: [('대학', 0.5146)]\n",
            "value at index 168: [('학년도', 0.7771)]\n",
            "value at index 169: [('안내', 0.7766)]\n",
            "value at index 170: [('안내', 0.7948)]\n",
            "value at index 171: [('안내', 0.8149)]\n",
            "value at index 172: [('언어', 0.5803)]\n",
            "value at index 173: [('학생', 0.6875)]\n",
            "value at index 174: [('학기', 0.7555)]\n",
            "value at index 175: [('시험', 0.7167)]\n",
            "value at index 176: [('캄보디아', 0.5845)]\n",
            "value at index 177: [('안내', 0.8926)]\n",
            "value at index 178: [('학생', 0.5215)]\n",
            "value at index 179: [('창업', 0.7082)]\n",
            "value at index 180: [('인권', 0.6186)]\n",
            "value at index 181: [('폭력', 0.5135)]\n",
            "value at index 182: [('원전', 0.582)]\n",
            "value at index 183: [('전공', 0.6474)]\n",
            "value at index 184: [('인공지능', 0.5662)]\n",
            "value at index 185: [('안내', 0.684)]\n",
            "value at index 186: [('건축학', 0.7515)]\n",
            "value at index 187: [('학기', 0.79)]\n",
            "value at index 188: [('사회봉사', 0.7002)]\n",
            "value at index 189: [('동교', 0.7291)]\n",
            "value at index 190: [('대학', 0.6994)]\n",
            "value at index 191: [('학년도', 0.786)]\n",
            "value at index 192: [('트랙', 0.7892)]\n",
            "value at index 193: [('학년도', 0.8711)]\n",
            "value at index 194: [('스타트업', 0.7194)]\n",
            "value at index 195: [('학년도', 0.8466)]\n",
            "value at index 196: [('학기', 0.7651)]\n",
            "value at index 197: [('혁신', 0.5327)]\n",
            "value at index 198: [('문화예술', 0.7649)]\n",
            "value at index 199: [('건축학', 0.7125)]\n",
            "value at index 200: [('일반', 0.7107)]\n",
            "value at index 201: [('학생', 0.5215)]\n",
            "value at index 202: [('안내', 0.8704)]\n",
            "value at index 203: [('도서관', 0.7193)]\n",
            "value at index 204: [('안내', 0.7588)]\n",
            "value at index 205: [('서울시', 0.6257)]\n",
            "value at index 206: [('학생', 0.6084)]\n",
            "value at index 207: [('커뮤니케이션', 0.6702)]\n",
            "value at index 208: [('간호학', 0.8397)]\n",
            "value at index 209: [('학기', 0.8029)]\n",
            "value at index 210: [('학습법', 0.7095)]\n",
            "value at index 211: [('관리', 0.737)]\n",
            "value at index 212: [('건축학', 0.7515)]\n",
            "value at index 213: [('학기', 0.7438)]\n",
            "value at index 214: [('학기', 0.8285)]\n",
            "value at index 215: [('교육', 0.5133)]\n"
          ]
        }
      ],
      "source": [
        "#bert_keyword초기화\n",
        "bert_keyword=[]\n",
        "\n",
        "# X_kiwi_combined의 길이만큼 반복: 모든 단어의 중요도 출력\n",
        "for i in range(len(X_kiwi_combined)):\n",
        "    # 키워드 추출\n",
        "    keywords = kw_model.extract_keywords(X_kiwi_combined[i], keyphrase_ngram_range=(1, 1), stop_words=None, top_n=1)\n",
        "\n",
        "    # bert_keyword 에 키워드 추가\n",
        "    bert_keyword.append(keywords)\n",
        "\n",
        "for i, value in enumerate(bert_keyword):\n",
        "    print(f\"value at index {i}: {value}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XO3bKmBcIlDC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "outputId": "98c43ef3-00ae-4acb-f5cf-5dcc216464bc"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       단어     중요도\n",
              "0      협회  0.7234\n",
              "1      공고  0.7352\n",
              "2      영어  0.5199\n",
              "3    싱가포르  0.6966\n",
              "4      수업  0.5876\n",
              "..    ...     ...\n",
              "211    관리  0.7370\n",
              "212   건축학  0.7515\n",
              "213    학기  0.7438\n",
              "214    학기  0.8285\n",
              "215    교육  0.5133\n",
              "\n",
              "[216 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1b00e034-b52b-435e-a348-231434064505\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>단어</th>\n",
              "      <th>중요도</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>협회</td>\n",
              "      <td>0.7234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>공고</td>\n",
              "      <td>0.7352</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>영어</td>\n",
              "      <td>0.5199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>싱가포르</td>\n",
              "      <td>0.6966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>수업</td>\n",
              "      <td>0.5876</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>211</th>\n",
              "      <td>관리</td>\n",
              "      <td>0.7370</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>212</th>\n",
              "      <td>건축학</td>\n",
              "      <td>0.7515</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213</th>\n",
              "      <td>학기</td>\n",
              "      <td>0.7438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>학기</td>\n",
              "      <td>0.8285</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>교육</td>\n",
              "      <td>0.5133</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>216 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b00e034-b52b-435e-a348-231434064505')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1b00e034-b52b-435e-a348-231434064505 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1b00e034-b52b-435e-a348-231434064505');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a9ea5696-0265-4ef5-81d0-80f6eac1ede5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a9ea5696-0265-4ef5-81d0-80f6eac1ede5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a9ea5696-0265-4ef5-81d0-80f6eac1ede5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "#위의 bert_keyword df화\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "# 주어진 데이터:bert_keyword\n",
        "\n",
        "# DataFrame으로 변환\n",
        "df = pd.DataFrame([(item[0], item[1]) for sublist in bert_keyword for item in sublist], columns=['단어', '중요도'])\n",
        "\n",
        "# 결과 출력\n",
        "display(df)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rvLidSjrTUyA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "46cf0134-d4db-4fa3-8533-3618d59016c4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['인재', '개발원', '채용', '상담회', '한국', '경제인', '협회', '전국경제인연합회', '채용', '상담회', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '산학', '협력단', '직원', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '영어', '말하기', '프로그램', '등록', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['언어', '교육원', '학년도', '싱가포르', '공대', '위탁', '과정', '언어', '교육원', '한국어', '도우미', '모집', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교육', '혁신', '센터', '융합', '수업', '운영', '사례', '공유', '융합', '수업', '운영', '사례', '발표', '전시', '안내', 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '학년도', '겨울', '방학', '현장', '실습', '모집', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '전기', '졸업', '예정', '여부', '조회', '졸업', '의사', '신청', '관련', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['국제', '학생증', '발급', '지원', '행사', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '전공', '변경', '시행', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '시행', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['국제', '교류', '싱가포르', '교환', '프로그램', '설명회', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '학생', '건강', '검사', '시행', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['연구윤리', '센터', '연구윤리', '특강', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '학년도', '학기', '이화', '플러스', '장학금', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['다문화', '연구소', '상호', '문화', '학술', '대회', '외국', '한국', '상호', '문화', '교육', '관점', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '방일영', '문화', '재단', '장학', '선발', '안내', '북한이탈주민', '대학', '지원', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '영어', '말하기', '프로그램', '등록', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '고급', '영어', '글쓰기', '등록', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인권', '센터', '인권', '센터', '젠더', '교육', '플랫폼', '폭력', '예방', '특강', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '진로', '디자인', '세계', '진로', '특강', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '년도', '전기공사공제조합', '장학회', '장학', '선발', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '서비스', '센터', '물건', '확인', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['미래', '혁신', '센터', '대학', '혁신', '지원', '사업', '학생', '인식', '조사', '시행', '안내', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '사회', '과학', '대학', '사회학', '사무실', '계약', '직원', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '전공', '학과', '결정', '시행', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['출판문화', '이화', '플래너', '이화', '달력', '출시', '기념', '팝업', '스토어', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '학년도', '학기', '체육', '학부', '행정실', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '사범대', '교직', '과정', '이수', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['모집', '년도', '창업', '교육', '혁신', '선도', '대학', '대학', '스타트업', '애널리스트', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['공연', '문화', '연구', '센터', '평화', '음악회', '강당', '공연', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '고급', '영어', '글쓰기', '등록', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['고전', '글쓰기', '나눔', '리더십', '대체', '교과목', '수강자', '학년도', '겨울', '계절', '학기', '수강', '인정', '신청', '안내', 0, 0, 0, 0, 0]\n",
            "['기업가', '센터', '겨울', '계절', '학기', '스타트업', '인턴십', '기업', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['글로벌', '소통', '교육실', '겨울', '계절', '학기', '영어', '스피킹', '마스터', '프로그램', '등록', '안내', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '채용', '상담회', '한국', '경제인', '협회', '전국경제인연합회', '채용', '상담회', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['규칙', '공포', '교원', '종합', '평가', '세칙', '개정', '세칙', '공포', '시행', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['국제', '교류', '온라인', '참가', '학생', '모집', '활동', '모집', '연장', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['변리사', '변리', '시험', '합격자', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['미래', '혁신', '센터', '도전', '학기', '참여', '학생', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교육', '혁신', '센터', '융합', '수업', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '이화여자대학교', '아시아', '여성학', '센터', '전임', '연구', '인력', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교육', '안내', '연구', '지식', '재산', '이해', '사전', '수강', '신청', '기간', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교육', '혁신', '센터', '성공', '팀플', '학습법', '워크숍', '운영', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '피부과', '상담', '클리닉', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['스크랜튼학부', '학년도', '스크랜튼', '학부', '진입', '설명회', '개최', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['글로벌', '소통', '교육실', '학기', '사실', '근무', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '총장실', '부총장', '업무', '지원', '계약', '직원', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['글로벌', '소통', '교육실', '인문', '계열', '예체능', '계열', '대상', '계절', '학기', '필수', '교양', '영어', '개설', '사전', '안내', 0, 0, 0, 0]\n",
            "['화인', '나눔', '가게', '랭앤루', '기부', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['연장', '채용', '연구윤리', '센터', '동물', '실험', '윤리', '위원회', '생물', '안전', '위원회', '연구원', '모집', '공고', 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '학기', '교목', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['입학', '학년도', '전기', '공연', '예술', '대학원', '야간', '신입', '모집', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['통역', '번역', '대학원', '노벨', '문학상', '수상', '작가', '클레지오', '특별', '강연', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '산업', '융합', '대학', '행정실', '계약', '직원', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '서비스', '센터', '물건', '확인', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '전기', '외국어', '교육', '특수', '대학원', '석사', '과정', '야간', '학기', '신입', '모집', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '사회', '과학', '대학', '사회학', '사무실', '계약', '직원', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인권', '센터', '인권', '센터', '젠더', '교육', '플랫폼', '폭력', '예방', '특강', '초대', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['국제', '학생증', '발급', '지원', '행사', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학사', '겨울', '계절', '학기', '필수', '교양', '영어', '수작업', '수강', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['경영', '대학', '행정실', '이화', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '학기', '법학전문대학원', '행정실', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '학년도', '학기', '전공', '리더십', '장학금', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '대학원', '재단', '음악회', '무료', '초대', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['사범대', '행정실', '학년도', '교육', '행정', '고시', '특강', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '정신', '건강', '의학과', '상담', '클리닉', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '피부과', '상담', '클리닉', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '년도', '두산연강재단', '대학', '장학', '선발', '안내', '생활비', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['마인드', '이화', '여성', '기술', '창업', '포럼', '창업', '포텐', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '채용', '설명회', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '이화여자대학교', '학교', '폭력', '예방', '연구소', '연구', '교수', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '방진', '방구석', '진로', '콘서트', '라인업', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '이화', '멘토링', '데이', '전략', '기획', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['국제', '교류', '싱가포르', '교환', '프로그램', '설명회', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['국제', '교류', '온라인', '참가', '학생', '모집', '활동', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '임상', '치의학', '대학원', '행정실', '계약', '직원', '모집', '공고', '연장', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['여성', '가족부', '여성', '청소년', '생리', '용품', '바우처', '지원', '안내', '홍보', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '이화여자대학교', '기숙사', '행정실', '계약', '직원', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '겨울', '방학', '현장', '실습', '설명회', '진행', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '년도', '제4기', '경원', '장학', '재단', '장학', '선발', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '충남', '뿌리', '장학', '선발', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['겨울', '계절', '학기', '영어', '스피킹', '특화', '프로그램', '개설', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['겨울', '계절', '학기', '영어', '글쓰기', '특화', '프로그램', '고급', '영어', '글쓰기', '개설', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '서비스', '센터', '물건', '확인', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '인플루엔자', '계절', '독감', '예방', '접종', '시행', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '취업', '경험', '실무진', '면접', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '방진', '방구석', '진로', '콘서트', '라인업', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학원', '학기', '일반', '대학원', '우수', '연구', '장학금', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '학년도', '겨울', '계절', '학기', '국내', '대학', '학점', '교류', '수강', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['동창회', '기금', '재학', '장학', '기금', '마련', '기증', '바자회', '개최', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '학기', '입학', '학부', '일반', '대학원', '논문', '제출', '자격', '부여', '일반', '대학원', '학부', '졸업', '논문', '제출', '자격', '부여', '학부', '신청']\n",
            "['인사', '이화여자대학교', '직원', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '년도', '대산농촌재단', '장학', '선발', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학사', '학년도', '학기', '학부', '대학원', '중간', '강의', '평가', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '대학원', '한국장학재단', '특별', '상환', '유예', '제도', '시행', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['마인드', '조교', '모집', '여성', '지도력', '개발', '센터', '연구', '장학', '조교', '모집', '공고', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['경영', '연구소', '세미나', '개인', '정보', '보호', '데이터', '활용', '개인', '연합', '학습', '클라이언트', '클러스터', '연구', 0, 0, 0, 0, 0, 0]\n",
            "['학부', '학년도', '학기', '장학', '선발', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인공', '지능', '대학', '행정실', '학년도', '학기', '학생', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '언어', '교육원', '한국어', '교육부', '객원', '강사', '모집', '겨울', '학기', '학기', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['총무', '본교', '대표', '전화', '교환', '근무', '계약', '직원', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '사범대학', '국어교육', '사무실', '계약', '직원', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '약학', '대학', '행정실', '계약', '직원', '모집', '지원', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '학년도', '학기', '영어', '정보', '인증', '신청', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '학기', '법학전문대학원', '행정실', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '서버', '보수', '완료', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '서비스', '센터', '물건', '확인', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['모집', '시간', '이화', '여성', '기술', '창업', '포럼', '창업', '포텐', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '연구윤리', '센터', '동물', '실험', '윤리', '위원회', '생물', '안전', '위원회', '연구원', '모집', '공고', 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '서버', '긴급', '보수', '관련', '이용', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['모집', '이화', '스타트업', '아카데미', '수강', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['이화', '저널리즘', '데이', '참가', '신청', '안내', '언론', '관련', '교과', '교과', '프로그램', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '국제', '대학원', '행정', '직원', '모집', '공고', '프로그램', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교목', '학기', '졸업', '채플', '사진', '공모', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교목', '학기', '졸업', '채플', '소감', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교목', '학기', '이화', '감사', '페스티벌', '참가', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내', '금일', '자정', '마감', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '여성', '지도력', '개발', '센터', '연구', '조교', '모집', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '이화', '멘토링', '데이', '영업', '마케팅', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['입학', '디자인', '대학원', '학년도', '전기', '신입', '모집', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '학기', '성남시', '다자녀', '대학생', '장학금', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['사회봉사', '학년도', '겨울', '국내', '이화', '봉사단', '봉사', '단원', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학사', '평생교육사', '자격증', '발급', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교육', '혁신', '센터', '특강', '초대', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['홍보', '아이디어', '공모전', '온라인', '투표', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['안전', '승강기', '운행', '중단', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['모집', '창업', '동아리', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '이화', '여자', '대학교', '학교', '폭력', '예방', '연구소', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '상담', '센터', '학기', '심리', '교육', '워크숍', '개설', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '지원', '학관', '연습실', '유레카', '공간', '사용', '신청', '관련', '안내', '유레카', '시스템', '예약', 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '이화', '의학', '교육', '센터', '계약직', '연구원', '채용', '공고', '수정', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내', '금요일', '마감', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '서비스', '센터', '물건', '확인', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '산부인과', '상담', '클리닉', '시행', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '국제', '대학원', '행정', '직원', '모집', '공고', '이화', '사업단', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['이화', '저널리즘', '데이', '참가', '신청', '안내', '기자', '선배', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '여성', '지도력', '개발', '센터', '연구', '조교', '모집', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['한국대학사회봉사협의회', '월드', '프렌즈', '코리아', '청년', '봉사단', '단원', '모집', '겨울', '방학', '활동', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '장학', '재단', '장학금', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['이화문예', '공모전', '시조', '단편', '소설', '수필', '마감', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '피부과', '상담', '클리닉', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['사범대', '행정실', '학년도', '교육', '행정', '고시', '특강', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['홍보', '아이디어', '공모전', '개최', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '학생', '건강', '검사', '시행', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['다문화', '연구소', '볼리비아', '상호', '문화', '대화', '개최', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['모집', '인문', '융합', '전공', '글로벌', '영상', '예술사', '학년도', '학기', '수업', '조교', '모집', '마감', 0, 0, 0, 0, 0, 0, 0]\n",
            "['이수', '매니지먼트', '주식', '회사', '관리자', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교내', '셔틀버스', '운행', '기간', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['추석', '연휴', '기간', '학생', '식당', '운영', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['건축', '삼성', '무대', '시설', '복구', '공사', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '전기', '교육대학원', '입학', '설명회', '온라인', '메타버스', '개최', '신입', '모집', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '서비스', '센터', '물건', '확인', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['규칙', '공포', '이화여자대학교', '직제', '개정', '직제', '공포', '시행', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['이화', '상점', '기념품', '기념품점', '이전', '오픈', '이벤트', '안내', '오픈', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['청탁', '금지법', '시행령', '개정', '선물', '가액', '범위', '안내', '추석', '선물', '가액', '확인', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '전기', '외국어', '교육', '특수', '대학원', '석사', '학위', '과정', '야간', '학기', '신입', '모집', 0, 0, 0, 0, 0, 0, 0]\n",
            "['학년도', '전기', '전문', '특수', '대학원', '모집', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '임상', '치의학', '대학원', '행정실', '계약', '직원', '모집', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['생명', '의료법', '연구소', '교수', '특별', '강연', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인재', '개발원', '이화', '멘토링', '데이', '영업', '마케팅', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['수업', '지원', '조교', '모집', '여성', '학과', '화3', '금3', '수업', '수업', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '자연', '과학', '대학', '행정실', '계약', '직원', '모집', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['경영', '대학', '행정실', '추가', '학기', '수업', '조교', '모집', '공고', '수정', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['농림', '축산', '식품부', '아침밥', '학생', '만족도', '조사', '실시', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교육', '혁신', '센터', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '혁신', '지원', '사업', '대학', '혁신', '지원', '사업', '리더스', '포럼', '마포', '신촌', '지역', '대학', '연합', '주차', 0, 0, 0, 0]\n",
            "['학부', '학년도', '학기', '국가', '장학금', '유형', '편입', '지원', '특별', '구제', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['이화', '상점', '카페', '학생', '문화관', '오픈', '이벤트', '안내', '오픈', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '년도', '학기', '안산시', '대학', '본인', '부담', '등록금', '지원', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '학기', '고양시', '대학', '본인', '부담', '등록금', '지원', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '이화여대', '언어', '교육원', '학기', '디자인', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학기', '장애', '학생', '도우미', '추가', '모집', '대학원', '학생', '가능', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['수업', '조교', '모집', '여성', '학과', '학기', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['공무원', '시험', '기술', '합격', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['사회봉사', '겨울', '해외', '이화', '봉사단', '캄보디아', '추가', '모집', '내일', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['특수', '교육', '연구소', '이화', '특수', '교육', '학술', '대회', '개최', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '서비스', '센터', '물건', '확인', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['모집', '이화', '비즈니스', '플랜', '창업', '경진', '대회', '참여', '모집', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인권', '센터', '인권', '폭력', '예방', '교육', '법정', '의무', '교육', '수강', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['인권', '센터', '서울시', '폭력', '예방', '교육', '교육', '수요', '조사', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['동양', '철학', '원전', '강독', '장자', '내편', '세미나', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '이화여자대학교', '자연대', '생명', '과학', '전공', '사무실', '계약', '직원', '채용', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['이화여대', '인공지능', '융합', '혁신', '대학원', '사업', '산학', '협력', '포럼', '초대', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '추석', '연휴', '감염병', '예방', '준수', '사항', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '건축학', '전공', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학원', '학기', '대학원', '전공', '박람회', '개최', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['사회봉사', '학기', '전공', '연계', '봉사', '소모임', '동아리', '봉사', '활동', '프로그램', '공모', '안내', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '수림', '재단', '동교', '인재', '선발', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '건강', '센터', '정신', '건강', '의학과', '상담', '클리닉', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['입학', '학년도', '전기', '데이터', '사이언스', '대학원', '신입', '모집', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['트랙', '학년도', '학기', '트랙', '신청', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '지원', '학년도', '학기', '학생', '학술', '활동', '지원', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['모집', '이화', '스타트업', '캠프', '참여', '대학원', '창업', '동아리', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학부', '학년도', '학기', '복수', '전공', '신청', '취소', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학기', '일반', '대학원', '부전공', '신청', '취소', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['대학', '혁신', '지원', '사업', '대학', '혁신', '지원', '사업', '리더스', '포럼', '마포', '신촌', '지역', '대학', '연합', 0, 0, 0, 0, 0]\n",
            "['문화예술', '교육사', '역량', '강화', '특강', '문화', '예술', '치유', '프로그램', '이해', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['건축학', '전공', '학기', '조교', '모집', '추가', '연장', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '학년도', '전기', '일반', '대학원', '전형', '관리', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학생', '서비스', '센터', '물건', '확인', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['화인', '나눔', '가게', '스파오', '미쏘', '기부', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['도서관', '이용자', '만족도', '조사', '실시', '선물', '증정', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['출판문화', '신간', '안내', '시민', '생활', '민사', '생활법률', '강의', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['서울시', '청년', '주간', '행사', '홍보', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['학기', '장애', '학생', '도우미', '국가', '근로', '장학', '모집', '교과목', '업데이트', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['모집', '학년도', '학기', '커뮤니케이션', '미디어', '학부', '대학원', '수업', '조교', '모집', '기간', '연장', 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '간호학', '수업', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '학기', '교목', '조교', '모집', '마감', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교육', '혁신', '센터', '학년도', '학기', '학습법', '워크숍', '운영', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['채용', '이화여자대학교', '산학', '협력단', '직원', '사업', '관리', '정산', '채용', '공고', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '건축학', '전공', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['정책과학', '대학원', '학년도', '학기', '학생', '조교', '모집', '마감', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['조교', '모집', '학기', '수학과', '조교', '모집', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
            "['교육', '혁신', '센터', '맞춤', '튜터링', '튜터', '학생', '모집', '안내', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"
          ]
        }
      ],
      "source": [
        "def pad_sequence(sequence, max_length, padding_value=0):\n",
        "    padded_sequence = sequence[:max_length] + [padding_value] * max(0, max_length - len(sequence))\n",
        "    return padded_sequence\n",
        "\n",
        "# 최대 길이\n",
        "max_length = 20\n",
        "\n",
        "# 패딩된 결과\n",
        "padded_X_kiwi = [pad_sequence(row, max_length) for row in X_kiwi]\n",
        "\n",
        "# 결과 출력\n",
        "for row in padded_X_kiwi:\n",
        "    print(row)\n",
        "\n",
        "# DataFrame 생성\n",
        "df_kiwi = pd.DataFrame(X_kiwi)\n",
        "\n",
        "# 패딩된 DataFrame 생성\n",
        "df_padded_X = pd.DataFrame(padded_X_kiwi)\n",
        "\n",
        "# 패딩된 값을 0으로 변경\n",
        "df_padded_X.replace('NULL', 0, inplace=True)\n",
        "\n",
        "# 엑셀 파일로 저장\n",
        "file_path = '/content/drive/MyDrive/4U/db/padded_X.xlsx'\n",
        "with pd.ExcelWriter(file_path, engine='xlsxwriter') as writer:\n",
        "    df_padded_X.to_excel(writer, sheet_name='padded_X', index=False)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(padded_X_kiwi[0])"
      ],
      "metadata": {
        "id": "Z3SH482RTrNI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3a4fd1f4-9b9e-4329-9a14-4e8f419b75b3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['인재', '개발원', '채용', '상담회', '한국', '경제인', '협회', '전국경제인연합회', '채용', '상담회', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oLGLyjW3EL-b"
      },
      "source": [
        "# 3.총 출력사항\n",
        "\n",
        "(1)패딩 후 키위(df)\n",
        "\n",
        "(2)bert_keyword(df)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lP3YyqqwEd1x",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6d646a34-ba12-4f02-e4d9-675f7a783945"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       0        1    2     3    4    5   6         7     8    9    10  11  12  \\\n",
            "0      인재      개발원   채용   상담회   한국  경제인  협회  전국경제인연합회    채용  상담회    0   0   0   \n",
            "1      채용       산학  협력단    직원   채용   공고   0         0     0    0    0   0   0   \n",
            "2     글로벌       소통  교육실    겨울   계절   학기  영어       말하기  프로그램   등록   안내   0   0   \n",
            "3      언어      교육원  학년도  싱가포르   공대   위탁  과정        언어   교육원  한국어  도우미  모집   0   \n",
            "4      교육       혁신   센터    융합   수업   운영  사례        공유    융합   수업   운영  사례  발표   \n",
            "..    ...      ...  ...   ...  ...  ...  ..       ...   ...  ...  ...  ..  ..   \n",
            "211    채용  이화여자대학교   산학   협력단   직원   사업  관리        정산    채용   공고    0   0   0   \n",
            "212    조교       모집  건축학    전공   조교   모집   0         0     0    0    0   0   0   \n",
            "213  정책과학      대학원  학년도    학기   학생   조교  모집        마감     0    0    0   0   0   \n",
            "214    조교       모집   학기   수학과   조교   모집   0         0     0    0    0   0   0   \n",
            "215    교육       혁신   센터    맞춤  튜터링   튜터  학생        모집    안내    0    0   0   0   \n",
            "\n",
            "     13  14 15 16 17 18 19  \n",
            "0     0   0  0  0  0  0  0  \n",
            "1     0   0  0  0  0  0  0  \n",
            "2     0   0  0  0  0  0  0  \n",
            "3     0   0  0  0  0  0  0  \n",
            "4    전시  안내  0  0  0  0  0  \n",
            "..   ..  .. .. .. .. .. ..  \n",
            "211   0   0  0  0  0  0  0  \n",
            "212   0   0  0  0  0  0  0  \n",
            "213   0   0  0  0  0  0  0  \n",
            "214   0   0  0  0  0  0  0  \n",
            "215   0   0  0  0  0  0  0  \n",
            "\n",
            "[216 rows x 20 columns]\n",
            "       단어     중요도\n",
            "0      협회  0.7234\n",
            "1      공고  0.7352\n",
            "2      영어  0.5199\n",
            "3    싱가포르  0.6966\n",
            "4      수업  0.5876\n",
            "..    ...     ...\n",
            "211    관리  0.7370\n",
            "212   건축학  0.7515\n",
            "213    학기  0.7438\n",
            "214    학기  0.8285\n",
            "215    교육  0.5133\n",
            "\n",
            "[216 rows x 2 columns]\n"
          ]
        }
      ],
      "source": [
        "df_X = pd.DataFrame(padded_X_kiwi)\n",
        "\n",
        "# 결과 출력\n",
        "print(df_X)\n",
        "\n",
        "df_keyword = pd.DataFrame(bert_keyword)\n",
        "\n",
        "# 튜플 분해 및 새로운 열 생성\n",
        "df_keyword[['단어', '중요도']] = pd.DataFrame(df_keyword[0].tolist(), index=df_keyword.index)\n",
        "\n",
        "# 기존 열 삭제\n",
        "df_keyword = df_keyword.drop(columns=[0])\n",
        "\n",
        "# 결과 출력\n",
        "print(df_keyword)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jE0zvqTcLjy_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 998
        },
        "outputId": "a7d9fad0-01b2-46ea-d415-bec43a78880e"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "        0        1    2     3    4    5   6         7     8    9  ...  12  13  \\\n",
              "0      인재      개발원   채용   상담회   한국  경제인  협회  전국경제인연합회    채용  상담회  ...   0   0   \n",
              "1      채용       산학  협력단    직원   채용   공고   0         0     0    0  ...   0   0   \n",
              "2     글로벌       소통  교육실    겨울   계절   학기  영어       말하기  프로그램   등록  ...   0   0   \n",
              "3      언어      교육원  학년도  싱가포르   공대   위탁  과정        언어   교육원  한국어  ...   0   0   \n",
              "4      교육       혁신   센터    융합   수업   운영  사례        공유    융합   수업  ...  발표  전시   \n",
              "..    ...      ...  ...   ...  ...  ...  ..       ...   ...  ...  ...  ..  ..   \n",
              "211    채용  이화여자대학교   산학   협력단   직원   사업  관리        정산    채용   공고  ...   0   0   \n",
              "212    조교       모집  건축학    전공   조교   모집   0         0     0    0  ...   0   0   \n",
              "213  정책과학      대학원  학년도    학기   학생   조교  모집        마감     0    0  ...   0   0   \n",
              "214    조교       모집   학기   수학과   조교   모집   0         0     0    0  ...   0   0   \n",
              "215    교육       혁신   센터    맞춤  튜터링   튜터  학생        모집    안내    0  ...   0   0   \n",
              "\n",
              "     14 15 16 17 18 19    단어     중요도  \n",
              "0     0  0  0  0  0  0    협회  0.7234  \n",
              "1     0  0  0  0  0  0    공고  0.7352  \n",
              "2     0  0  0  0  0  0    영어  0.5199  \n",
              "3     0  0  0  0  0  0  싱가포르  0.6966  \n",
              "4    안내  0  0  0  0  0    수업  0.5876  \n",
              "..   .. .. .. .. .. ..   ...     ...  \n",
              "211   0  0  0  0  0  0    관리  0.7370  \n",
              "212   0  0  0  0  0  0   건축학  0.7515  \n",
              "213   0  0  0  0  0  0    학기  0.7438  \n",
              "214   0  0  0  0  0  0    학기  0.8285  \n",
              "215   0  0  0  0  0  0    교육  0.5133  \n",
              "\n",
              "[216 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fd97afa5-7b1d-407f-9fe2-fa14652c3648\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>단어</th>\n",
              "      <th>중요도</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>인재</td>\n",
              "      <td>개발원</td>\n",
              "      <td>채용</td>\n",
              "      <td>상담회</td>\n",
              "      <td>한국</td>\n",
              "      <td>경제인</td>\n",
              "      <td>협회</td>\n",
              "      <td>전국경제인연합회</td>\n",
              "      <td>채용</td>\n",
              "      <td>상담회</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>협회</td>\n",
              "      <td>0.7234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>채용</td>\n",
              "      <td>산학</td>\n",
              "      <td>협력단</td>\n",
              "      <td>직원</td>\n",
              "      <td>채용</td>\n",
              "      <td>공고</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>공고</td>\n",
              "      <td>0.7352</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>글로벌</td>\n",
              "      <td>소통</td>\n",
              "      <td>교육실</td>\n",
              "      <td>겨울</td>\n",
              "      <td>계절</td>\n",
              "      <td>학기</td>\n",
              "      <td>영어</td>\n",
              "      <td>말하기</td>\n",
              "      <td>프로그램</td>\n",
              "      <td>등록</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>영어</td>\n",
              "      <td>0.5199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>언어</td>\n",
              "      <td>교육원</td>\n",
              "      <td>학년도</td>\n",
              "      <td>싱가포르</td>\n",
              "      <td>공대</td>\n",
              "      <td>위탁</td>\n",
              "      <td>과정</td>\n",
              "      <td>언어</td>\n",
              "      <td>교육원</td>\n",
              "      <td>한국어</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>싱가포르</td>\n",
              "      <td>0.6966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>교육</td>\n",
              "      <td>혁신</td>\n",
              "      <td>센터</td>\n",
              "      <td>융합</td>\n",
              "      <td>수업</td>\n",
              "      <td>운영</td>\n",
              "      <td>사례</td>\n",
              "      <td>공유</td>\n",
              "      <td>융합</td>\n",
              "      <td>수업</td>\n",
              "      <td>...</td>\n",
              "      <td>발표</td>\n",
              "      <td>전시</td>\n",
              "      <td>안내</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>수업</td>\n",
              "      <td>0.5876</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>211</th>\n",
              "      <td>채용</td>\n",
              "      <td>이화여자대학교</td>\n",
              "      <td>산학</td>\n",
              "      <td>협력단</td>\n",
              "      <td>직원</td>\n",
              "      <td>사업</td>\n",
              "      <td>관리</td>\n",
              "      <td>정산</td>\n",
              "      <td>채용</td>\n",
              "      <td>공고</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>관리</td>\n",
              "      <td>0.7370</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>212</th>\n",
              "      <td>조교</td>\n",
              "      <td>모집</td>\n",
              "      <td>건축학</td>\n",
              "      <td>전공</td>\n",
              "      <td>조교</td>\n",
              "      <td>모집</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>건축학</td>\n",
              "      <td>0.7515</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213</th>\n",
              "      <td>정책과학</td>\n",
              "      <td>대학원</td>\n",
              "      <td>학년도</td>\n",
              "      <td>학기</td>\n",
              "      <td>학생</td>\n",
              "      <td>조교</td>\n",
              "      <td>모집</td>\n",
              "      <td>마감</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>학기</td>\n",
              "      <td>0.7438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>조교</td>\n",
              "      <td>모집</td>\n",
              "      <td>학기</td>\n",
              "      <td>수학과</td>\n",
              "      <td>조교</td>\n",
              "      <td>모집</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>학기</td>\n",
              "      <td>0.8285</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>교육</td>\n",
              "      <td>혁신</td>\n",
              "      <td>센터</td>\n",
              "      <td>맞춤</td>\n",
              "      <td>튜터링</td>\n",
              "      <td>튜터</td>\n",
              "      <td>학생</td>\n",
              "      <td>모집</td>\n",
              "      <td>안내</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>교육</td>\n",
              "      <td>0.5133</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>216 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd97afa5-7b1d-407f-9fe2-fa14652c3648')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fd97afa5-7b1d-407f-9fe2-fa14652c3648 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fd97afa5-7b1d-407f-9fe2-fa14652c3648');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-83637006-9f16-4da1-a2c4-fe53ce41478c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83637006-9f16-4da1-a2c4-fe53ce41478c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-83637006-9f16-4da1-a2c4-fe53ce41478c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "# df와 bert_keyword를 수평으로 연결\n",
        "result_df = pd.concat([df_X,df_keyword], axis=1)\n",
        "\n",
        "# 결과 출력\n",
        "display(result_df)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# 21번째 열의 값을 가져옵니다. (컴퓨터에서는 20번째 열로 인식)\n",
        "target_column = result_df.columns[-1]  # 마지막 열의 이름\n",
        "values = result_df[target_column]\n",
        "\n",
        "# Continuous 값으로 변환합니다.\n",
        "continuous_values = pd.to_numeric(values, errors='coerce')\n",
        "\n",
        "# 그래프를 생성합니다.\n",
        "plt.figure(figsize=(12, 8))\n",
        "\n",
        "# KDE 플롯\n",
        "sns.kdeplot(continuous_values, fill=True)\n",
        "\n",
        "plt.title(f'Kernel Density Estimate (KDE) of importance value')\n",
        "plt.xlabel(\"importance\")\n",
        "plt.ylabel('Density')\n",
        "plt.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "uwtFAxZw-E6v",
        "outputId": "8d758511-0291-4b72-bb19-283af6bdd9f1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA/AAAAK9CAYAAACD7ocIAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACjNklEQVR4nOzdd3iV5eHG8ftk770hZDLDlL0RZAkqWrVaK2pdtdpqra2l1q21tXW1VXCjAg62yhCUKXsT9k4IWcyEJGS/vz8s+RlJIAlJnpyc7+e6znWR97znnPuEk5Nz533e57FZlmUJAAAAAAA0aU6mAwAAAAAAgEujwAMAAAAAYAco8AAAAAAA2AEKPAAAAAAAdoACDwAAAACAHaDAAwAAAABgByjwAAAAAADYAQo8AAAAAAB2gAIPAAAAAIAdoMADgB0YMmSIhgwZYjpGvXnmmWdks9lMx6g3d955p2JjY03HaBBXX3217r33XtMxLrBr1y65uLhox44d9X7f+/fv14gRI+Tv7y+bzaY5c+ZUud+RI0dks9k0efLkes+ApsFms+mZZ54xHQMAKlDgATiEyZMny2azaePGjZW25+TkqFevXvLw8NDChQsNpas/sbGxstlsstlscnJyUkBAgDp16qT77rtP69atMx3vov72t79VW5TqatmyZRXfj6oun332WY3vKz09Xc8884y2bt1arxkv17Rp0/T66683yH2vWrVKixYt0uOPP16x7fz3dMaMGZX2LS4u1tixY+Xk5KQPPvhA0v//3J2/eHh4KCoqSiNHjtS///1vnT179oLHPP/HneoumZmZkqQOHTpozJgxeuqpp+r9ed9xxx1KTk7Wiy++qE8++UQ9evSo98doKt566y3+AAEAdsTFdAAAMCU3N1cjRozQ9u3bNXv2bI0aNcp0pHrRtWtX/eEPf5AknT17Vrt379b06dP17rvv6ve//71effVVwwmlv/71r/rzn/9cadvf/vY33XjjjRo3bly9P97vfvc79ezZ84Ltffv2rfF9pKen69lnn1VsbKy6du1a6bp3331X5eXllxuzTqZNm6YdO3bokUceqff7/uc//6lhw4YpMTHxovuVlJToxhtv1Pz58/Xuu+/qV7/6VaXrn3vuOcXFxamkpESZmZlatmyZHnnkEb366qv68ssv1blz5wvuc+LEifLx8blge0BAQMW/f/3rX+vqq6/WwYMHlZCQULcn+RPnzp3TmjVr9MQTT+ihhx666L4xMTE6d+6cXF1d6+WxTXjrrbcUEhKiO++803QUAEANUOABOKSzZ89q5MiR2rp1q2bNmqXRo0df9n0WFhbKzc1NTk5mBze1aNFCv/zlLytt+8c//qFf/OIXeu2119S6dWs98MADhtL9wMXFRS4ujfcraODAgbrxxhsb7P7tucBVJzs7W/PmzdOkSZMuul9JSYluvvlmff3113r77bd19913X7DP6NGjKx3FnjBhgpYsWaKxY8fq2muv1e7du+Xp6VnpNjfeeKNCQkIu+thXXXWVAgMD9dFHH+m5556rxbOr3vHjxyVV/kNBdc6PKrBHBQUF8vLyMh0DAFBLDKEH4HDy8vI0atQobd68WTNnztSYMWMqXX/s2DH96le/Unh4uNzd3ZWUlFQxJPi888OIP/vsM/31r39VixYt5OXlpdzcXN15553y8fHRsWPHNG7cOPn4+Cg0NFSPPfaYysrKKt1PeXm5Xn/9dSUlJcnDw0Ph4eG6//77dfr06Xp9zp6envrkk08UFBSkF198UZZl1TpDbGysxo4dq++//77itIP4+Hh9/PHHlfYrKSnRs88+q9atW8vDw0PBwcEaMGCAFi9eXLHPT8+Bt9lsys/P10cffVQxVPrOO+/U0qVLZbPZNHv27Aue07Rp02Sz2bRmzZp6+R4tXrxYAwYMUEBAgHx8fNS2bVv95S9/kfTD//f5I/h33XVXRcbzQ49/eg78+XOj//Wvf+nNN99UfHy8vLy8NGLECB09elSWZen5559Xy5Yt5enpqeuuu06nTp2qlGfu3LkaM2aMoqKi5O7uroSEBD3//POVXkNDhgzRvHnzlJKSUpHpxzmKior09NNPKzExUe7u7oqOjtaf/vQnFRUVXfL7MW/ePJWWluqqq66qdp/S0lLdcsstmjt3riZOnFirc+WHDh2qJ598UikpKZoyZUqNb/djrq6uGjJkiObOnVuj/bds2aLRo0fLz89PPj4+GjZsmNauXVtx/TPPPKOYmBhJ0h//+McLvp8/VdU58Od//lNTUzV27Fj5+PioRYsWevPNNyVJycnJGjp0qLy9vRUTE6Np06ZVus/zpx2sWLFC999/v4KDg+Xn56fx48dX+b7w1ltvKSkpSe7u7oqKitKDDz6oM2fOVNpnyJAh6tixozZt2qRBgwbJy8tLf/nLXxQbG6udO3dq+fLlFa+f83NtnDp1So899pg6deokHx8f+fn5afTo0dq2bVul+z7/XvjFF1/oxRdfVMuWLeXh4aFhw4bpwIEDF+Rdt26drr76agUGBsrb21udO3fWG2+8UWmfPXv26MYbb1RQUJA8PDzUo0cPffnll9X+P0g/vO8EBQXprrvuuuC63NxceXh46LHHHpP0w+keTz31lLp37y5/f395e3tr4MCBWrp06UUfQ6p+vovq5vWYMmWKunfvLk9PTwUFBemWW27R0aNHL/k4AFAdjsADcCj5+fkaPXq0NmzYoBkzZmjs2LGVrs/KylKfPn1ks9n00EMPKTQ0VAsWLNDdd9+t3NzcC4YpP//883Jzc9Njjz2moqIiubm5SZLKyso0cuRI9e7dW//617/07bff6pVXXlFCQkKlo9/333+/Jk+erLvuuku/+93vdPjwYf33v//Vli1btGrVqno9suvj46Prr79e77//vnbt2qWkpKRaZzhw4IBuvPFG3X333brjjjv0wQcf6M4771T37t0r7u+ZZ57RSy+9pHvuuUe9evVSbm6uNm7cqM2bN2v48OFVZvvkk08q9r/vvvskSQkJCerTp4+io6M1depUXX/99ZVuM3XqVCUkJNRoGPzZs2d14sSJC7YHBwfLZrNp586dGjt2rDp37qznnntO7u7uOnDggFatWiVJat++vZ577jk99dRTuu+++zRw4EBJUr9+/S76uFOnTlVxcbF++9vf6tSpU3r55Zd18803a+jQoVq2bJkef/xxHThwQP/5z3/02GOPVfpD0eTJk+Xj46NHH31UPj4+WrJkiZ566inl5ubqn//8pyTpiSeeUE5OjtLS0vTaa69JUsWw8/Lycl177bX6/vvvdd9996l9+/ZKTk7Wa6+9pn379l1yvoHVq1crODi4otD+VGlpqW699VbNnj1bb775pu6///6L3l9Vbr/9dv3lL3/RokWLLij/P/2DhvTDyI2fHhnv3r275s6dq9zcXPn5+VX7WDt37tTAgQPl5+enP/3pT3J1ddXbb7+tIUOGaPny5erdu7duuOEGBQQE6Pe//71uvfVWXX311VUO47+UsrIyjR49WoMGDdLLL7+sqVOn6qGHHpK3t7eeeOIJ3Xbbbbrhhhs0adIkjR8/Xn379lVcXFyl+3jooYcUEBCgZ555Rnv37tXEiROVkpJSUZilH37Wnn32WV111VV64IEHKvbbsGHDBT+7J0+e1OjRo3XLLbfol7/8pcLDwzVkyBD99re/lY+Pj5544glJUnh4uCTp0KFDmjNnjm666SbFxcUpKytLb7/9tgYPHqxdu3YpKiqqUt6///3vcnJy0mOPPaacnBy9/PLLuu222yrNvbF48WKNHTtWkZGRevjhhxUREaHdu3fr66+/1sMPP1zx/9S/f3+1aNFCf/7zn+Xt7a0vvvhC48aN08yZMy94HzjP1dVV119/vWbNmqW333674r1YkubMmaOioiLdcsstkn4o9O+9955uvfVW3XvvvTp79qzef/99jRw5UuvXr7/gFJm6evHFF/Xkk0/q5ptv1j333KPjx4/rP//5jwYNGqQtW7bUaJQHAFzAAgAH8OGHH1qSrJiYGMvV1dWaM2dOlfvdfffdVmRkpHXixIlK22+55RbL39/fKigosCzLspYuXWpJsuLj4yu2nXfHHXdYkqznnnuu0vZu3bpZ3bt3r/h65cqVliRr6tSplfZbuHDhBdsHDx5sDR48+JLPMyYmxhozZky117/22muWJGvu3Lm1zhATE2NJslasWFGxLTs723J3d7f+8Ic/VGzr0qXLRTNYlmU9/fTT1k9/BXl7e1t33HHHBftOmDDBcnd3t86cOVPpcV1cXKynn376oo9z/v+puktGRkal78vx48erva8NGzZYkqwPP/zwguvuuOMOKyYmpuLrw4cPW5Ks0NDQSrknTJhgSbK6dOlilZSUVGy/9dZbLTc3N6uwsLBi209fV5ZlWffff7/l5eVVab8xY8ZUeuzzPvnkE8vJyclauXJlpe2TJk2yJFmrVq2q9rlalmUNGDCg0uv1vPPf0/OvhzfffLPa+zj/c7dhw4Zq9/H397e6detW8fX510ZVl7Zt215w+2nTplmSrHXr1l30+YwbN85yc3OzDh48WLEtPT3d8vX1tQYNGlSx7fz/3T//+c+L3t+P9/3xa+L8z//f/va3im2nT5+2PD09LZvNZn322WcV2/fs2WNJqvQ6Pv896969u1VcXFyx/eWXX670s5udnW25ublZI0aMsMrKyir2++9//2tJsj744IOKbYMHD7YkWZMmTbrgOSQlJVX53lJYWFjpfs8/X3d390rvbedfD+3bt7eKiooqtr/x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YXr11Vf1t7/9TU888YSWLl2qq6666qL56tuyZct08uRJzZo1S4MGDarYfvjw4Qv2rS5XQkKCtm3bpmHDhtUpe7t27TRz5syL7hMfH69vvvlGgwcP1siRI7Vy5cpqjzhW5ZNPPpGkastaTRw+fFhOTk5q06ZNtfuEhobKy8tLe/fuveC6PXv2yMnJ6ZJ/0Ghs+/fv15VXXlnxdV5enjIyMnT11VdLUsXkgnv37q10WkBxcbEOHz5c4/ew6l4bM2bM0JVXXqn333+/0vYzZ87U6Y8lCQkJkn74I2J12c4/D1dX1zq/Bw8aNEiRkZH6/PPPNWDAAC1ZsqRigr7zZsyYofj4eM2aNavS83/66acvef+BgYEXzPIv6YIRDwkJCbIsS3FxcRd9bQJAbXEOPACHNGzYMH366ac6cOCARo0apdzcXDk7O+tnP/uZZs6cWXGk+sfOrw9dX26++WaVlZXp+eefv+C60tLSKj8k1tW5c+d0++2369SpU3riiScqPrQ2RIaTJ09W+trHx0eJiYmXXLrM29u72scLCQnR6NGjNWXKFE2dOlWjRo2q1yOuVc14fn4m6vO5vb29Jale/1+qc/6I3Y+PXhYXF+utt966YF9vb+8qh9TffPPNOnbsmN59990Lrjt37pzy8/MvmqFv3746ffp0ledn/1inTp00b9485eXlafjw4Rc9R/nHlixZoueff15xcXG67bbbanSbqmzatElJSUmV5hr4KWdnZ40YMUJz586tGIIu/XAe/7Rp0zRgwICLzmBvwjvvvFNpaPfEiRNVWlqq0aNHS5Kuuuoqubm56d///nel18n777+vnJycC5bHrE51P3fOzs4XHD2fPn16jf9/f+qKK65QXFycXn/99Qse7/zjhIWFaciQIXr77beVkZFxwX3U5D3YyclJN954o7766it98sknKi0tveCPfVX9fK1bt65GS1ImJCQoJydH27dvr9iWkZFxwVKXN9xwg5ydnfXss89e8H20LOuC90kAqCmOwANwWNdff73effdd/epXv9K1116rhQsX6u9//7uWLl2q3r17695771WHDh106tQpbd68Wd9++22VRa+uBg8erPvvv18vvfSStm7dqhEjRsjV1VX79+/X9OnT9cYbb+jGG2+s9f0eO3asYl3tvLw87dq1S9OnT1dmZqb+8Ic/VFruqyEydOjQQUOGDFH37t0VFBSkjRs3asaMGXrooYcuervu3bvr22+/1auvvqqoqCjFxcVVTPom/TCM/nyWqv7gcDErV65UYWHhBds7d+5csXTcihUrNGbMGMXExCg7O1tvvfWWWrZsqQEDBkj64YN7QECAJk2aJF9fX3l7e6t37971ds7sj/Xr10+BgYG644479Lvf/U42m02ffPJJlcORu3fvrs8//1yPPvqoevbsKR8fH11zzTW6/fbb9cUXX+jXv/61li5dqv79+6usrEx79uzRF198oW+++UY9evSoNsOYMWPk4uKib7/9tmJpv+r07dtXs2bN0jXXXFMxquXH50kvWLBAe/bsUWlpqbKysrRkyRItXrxYMTEx+vLLL+Xh4XHBfc6YMaPKYcbDhw+vWOqspKREy5cv129+85uL5pOkF154oWLI/29+8xu5uLjo7bffVlFRkV5++eVL3r6xFRcXa9iwYbr55pu1d+9evfXWWxowYICuvfZaST+MKpgwYYKeffZZjRo1Stdee23Ffj179qzxBI/du3fXxIkT9cILLygxMVFhYWEaOnSoxo4dq+eee0533XWX+vXrp+TkZE2dOrXS0f7acHJy0sSJE3XNNdeoa9euuuuuuxQZGak9e/Zo586d+uabbyRJb775pgYMGKBOnTrp3nvvVXx8vLKysrRmzRqlpaVdsA59VX7+85/rP//5j55++ml16tSpYsTReWPHjtWsWbN0/fXXa8yYMTp8+LAmTZqkDh06VMwTUp1bbrlFjz/+uK6//nr97ne/U0FBgSZOnKg2bdpUmgAvISFBL7zwgiZMmKAjR45o3Lhx8vX11eHDhzV79mzdd999FevSA0CtNPKs9wBgxMWWs/rXv/5lSbLGjh1rlZSUWFlZWdaDDz5oRUdHW66urlZERIQ1bNgw65133qm4zfmlk6ZPn37B/d1xxx2Wt7f3BdurWjrNsizrnXfesbp37255enpavr6+VqdOnaw//elPVnp6esU+tVlGTv9bcstms1l+fn5WUlKSde+99150ma2aZKhuibqfZnvhhResXr16WQEBAZanp6fVrl0768UXX6y0JFZV34s9e/ZYgwYNsjw9PS1JFywpV1RUZAUGBlr+/v7WuXPnLvm9sKxLLyN3fnmo7777zrruuuusqKgoy83NzYqKirJuvfVWa9++fZXub+7cuVaHDh0sFxeXSsuHVbeM3E+XIqvudVPV63PVqlVWnz59LE9PTysqKsr605/+VLFM1tKlSyv2y8vLs37xi19YAQEBFcu7nVdcXGz94x//sJKSkix3d3crMDDQ6t69u/Xss89aOTk5l/z+XXvttdawYcNq9Bwsy7I+//xzy8nJyerZs6eVm5tb8bzOX9zc3KyIiAhr+PDh1htvvGHl5uZecB8XW0bup899wYIFliRr//79l3wulmVZmzdvtkaOHGn5+PhYXl5e1pVXXmmtXr260j71sYxcVT//gwcPtpKSki7Y/tOfq/Pfs+XLl1v33XefFRgYaPn4+Fi33XabdfLkyQtu/9///tdq166d5erqaoWHh1sPPPDABcu0VffYlmVZmZmZ1pgxYyxfX19LUsXPcmFhofWHP/zBioyMtDw9Pa3+/ftba9asueDnvbrXQ1XfG8uyrO+//94aPny45evra3l7e1udO3e2/vOf/1Ta5+DBg9b48eOtiIgIy9XV1WrRooU1duxYa8aMGVU+h58qLy+3oqOjLUnWCy+8UOX1f/vb36yYmBjL3d3d6tatm/X1119XuUTcj98nzlu0aJHVsWNHy83NzWrbtq01ZcqUat/fZ86caQ0YMMDy9va2vL29rXbt2lkPPvigtXfv3ho9FwD4KZtlNcLMKQAAXKbS0lJFRUXpmmuuueC8XDSMlStXasiQIdqzZ0+tzm1vLOPGjZPNZrtg+LI9mzx5su666y5t2LDhoiMkAACOiXPgAQB2Yc6cOTp+/LjGjx9vOorDGDhwoEaMGNEkh5jv3r1bX3/9da1PpwAAwJ5xDjwAoElbt26dtm/frueff17dunXT4MGDTUdyKAsWLDAdoUrt27dXaWmp6RgAADQqjsADAJq0iRMn6oEHHlBYWJg+/vhj03EAAACM4Rx4AAAAAADsAEfgAQAAAACwAxR4AAAAAADsgMNNYldeXq709HT5+vrKZrOZjgMAAAAAaOYsy9LZs2cVFRUlJ6e6H0d3uAKfnp6u6Oho0zEAAAAAAA7m6NGjatmyZZ1v73AF3tfXV9IP3zg/Pz/DaQAAAAAAzV1ubq6io6Mr+mhdOVyBPz9s3s/PjwIPAAAAAGg0l3saN5PYAQAAAABgByjwAAAAAADYAQo8AAAAAAB2gAIPAAAAAIAdoMADAAAAAGAHKPAAAAAAANgBCjwAAAAAAHaAAg8AAAAAgB2gwAMAAAAAYAco8AAAAAAA2AEKPAAAAAAAdoACDwAAAACAHaDAAwAAAABgByjwAAAAAADYAQo8AAAAAAB2gAIPAAAAAIAdoMADAAAAAGAHKPAAAAAAANgBCjwAAAAAAHaAAg8AAAAAgB2gwAMAAAAAYAco8AAAAAAA2AEKPAAAAAAAdoACDwAAAACAHaDAAwAAAABgByjwAACgSSotK1fa6QKdyi9WSVm56TgAABjnYjoAAACAJJ0tLNGqAye05egZbU09o21pZ1RY8v/F3cPFSX6eruodF6SRHSM0pG2YfNz5KAMAcBz81gMAAEblFZVq8qrDemflIeWeK1Wwt5sSwnx0Q7eWig7yVEmppYKSUhUUl+lMQYmSj53RV9sz5ObspP6Jwbqtd4yGtQ+TzWYz/VQAAGhQFHgAAGBEflGpPlpzRO+sOKT8olJd2TZMYzpFKszP46K3u1WtlJ1bqI0pp7X20End8/FG9Y4L0hNj2qtzy4DGCQ8AgAE2y7Is0yEaU25urvz9/ZWTkyM/Pz/TcQAAcEg7juXovk82Kju3SEPahmlc1ygF+7jX+n4sy9LWo2c0bX2q0k6f03Vdo/SnUe3UIsCzAVIDAFA39dVDOQIPAAAa1dytx/T4jO2KCvTUKzd1ueQR94ux2Wzq1ipQnVsGaNnebM3YlKZvd2XpXzd10ehOkfWYGgAA85iFHgAANIrSsnK9OG+XHv5sq3rGBenpsUmXVd5/zNnJpmHtw/XKzV3UqaW/Hpi6Wc9/vYvZ6wEAzQpH4AEAQIM7V1ym+z7ZqFUHTmh83xiNSopokEnnvNxc9LuhrdUmPFOTVx/R1qNn9OYvrlCEf/38oQAAAJM4Ag8AABpUaVm5Hpy2WesPn9KE0e01umNkg84Yb7PZNLpjpJ4a20FHTuRrzL9Xamd6ToM9HgAAjYUCDwAAGoxlWfrL7GQt33dcj1zVRh1b+DfaY7cJ99WL13dSgJerbn1nrbYePdNojw0AQEOgwAMAgAbzr0V79cXGNN0/KF5dowMa/fH9PV31l6vbK9LfU7e9u1Ybjpxq9AwAANQXCjwAAGgQk1cd1ptLD+q23q00sHWosRxebi768+h2ig3x1u3vr9P3+08YywIAwOWgwAMAgHq3dG+2nv1ql67uFKmxnaNMx5GHq7P+NLKd2kX46leTN2jVAUo8AMD+UOABAEC9OpFXpMe+2KYu0QG6rXcr03EquLk46dHhbdUhylf3fbxRu9JzTUcCAKBWKPAAAKDeWJalP07fptJyS/cPipdTA842Xxeuzk56eFgbhft56M4P1+vYmXOmIwEAUGMUeAAAUG+mrE3R0r3Hdd+geAV4uZmOUyUPV2f9cWRbSdIdH6xXTkGJ4UQAANSM0QI/ceJEde7cWX5+fvLz81Pfvn21YMGCavefPHmybDZbpYuHh0cjJgYAANXZn3VWL8zbrREdwnVFq0DTcS4qwMtNj49qp6ycQt378UYVlZaZjgQAwCUZLfAtW7bU3//+d23atEkbN27U0KFDdd1112nnzp3V3sbPz08ZGRkVl5SUlEZMDAAAqlJUWqbffrpFob7uuq13jOk4NRIV4KnHRrbV1qNn9OeZybIsy3QkAAAuysXkg19zzTWVvn7xxRc1ceJErV27VklJSVXexmazKSIiosaPUVRUpKKiooqvc3OZsAYAgPr27+/26+DxPD13XUe5udjPGXptwn1136B4/XfpAXVrFaDxfWNNRwIAoFpN5jdsWVmZPvvsM+Xn56tv377V7peXl6eYmBhFR0df8mi9JL300kvy9/evuERHR9d3dAAAHNrhE/l6e/khXdslSrHB3qbj1Fr/xBCN6hihZ7/apU0pp0zHAQCgWsYLfHJysnx8fOTu7q5f//rXmj17tjp06FDlvm3bttUHH3yguXPnasqUKSovL1e/fv2UlpZW7f1PmDBBOTk5FZejR4821FMBAMAhPffVTgV6u+naLi1MR6mz23q3UmKYjx6YslnHzxZd+gYAABhgswyf8FVcXKzU1FTl5ORoxowZeu+997R8+fJqS/yPlZSUqH379rr11lv1/PPP1+jxcnNz5e/vr5ycHPn5+V1ufAAAHNqSPVn61eSN+v1VbdQrLsh0nMtyuqBYT8xOVptwX029p7dcnI0f5wAANBP11UON/2Zyc3NTYmKiunfvrpdeekldunTRG2+8UaPburq6qlu3bjpw4EADpwQAAD9VVFqmZ7/apU4t/NUztmnPOl8TgV5u+t3Q1tpw5JT+sXCP6TgAAFzAeIH/qfLy8kqTzl1MWVmZkpOTFRkZ2cCpAADAT73//WGlnT6n8X1jZLPZTMepF+0i/fSLXjF6d+VhLd933HQcAAAqMVrgJ0yYoBUrVujIkSNKTk7WhAkTtGzZMt12222SpPHjx2vChAkV+z/33HNatGiRDh06pM2bN+uXv/ylUlJSdM8995h6CgAAOKTMnEL957sDGtkhXC0DvUzHqVejO0Woc0t//eGLrTqZx/nwAICmw2iBz87O1vjx49W2bVsNGzZMGzZs0DfffKPhw4dLklJTU5WRkVGx/+nTp3Xvvfeqffv2uvrqq5Wbm6vVq1fX6Hx5AABQf/6+YLfcXJz0s+4tTUepd042m349OEFFpeV6fOZ21ocHADQZxiexa2xMYgcAwOXZl3VWI19boV8NiNNV7cNNx2kwG4+c0iuL9+nF6zvqtt4xpuMAAOxYs5nEDgAA2JfXv92nEF93DWkTajpKg+oRG6Rh7cL0/Fe7dCA7z3QcAAAo8AAAoOZ2Z+RqfnKmru/awiGWWftlnxgF+bjr4c+2qLi03HQcAICDa/6/eQEAQL1549t9Cvdz18A2IaajNAoPV2c9OCRBuzNyNWn5QdNxAAAOjgIPAABqZGd6jhbuzNL13VrIxclxPkLEh/ro2i4t9O/v9mtPZq7pOAAAB+Y4v30BAMBleX3xfkX4e2hAYvM+970qN1zRQhH+Hvrj9O0qLWMoPQDADAo8AAC4pOS0HC3enaUburWQs5PNdJxG5+rspPsHxWtneo7eXXnYdBwAgIOiwAMAgEt67dt9ivL3UL8Exzj3vSqJYb66ulOkXlu8j1npAQBGUOABAMBF7UrP1ZI92RrnoEfff+ym7tEK9nHTH2dsU1m5ZToOAMDBUOABAMBFvf/9IYX4uKlvQrDpKMa5uTjpvkHx2pp6Rp+sOWI6DgDAwVDgAQBAtbJyCzV3a7pGJkU41MzzF9Muwk/D2ofpn9/sVWZOoek4AAAHwm9iAABQrY9WH5Grs5OGtgszHaVJ+XnPVnJxdtJzX+80HQUA4EAo8AAAoEoFxaWasi5FV7YNlZebi+k4TYqPu4tu7xOj+cmZWro323QcAICDoMADAIAqzdiUprzCUo3qGGk6SpPULyFYnVr468k5O3SuuMx0HACAA6DAAwCAC5SVW3pv5WH1igtSqK+76ThNks1m0139Y5WVW6j/Lt1vOg4AwAFQ4AEAwAW+3Z2l1FMFGtMpynSUJi3S31PXdmmht5cf0v6ss6bjAACaOQo8AAC4wLsrDqldhK8Sw3xMR2nyrusapTBfd/11zg5ZFmvDAwAaDgUeAABUsu3oGW1MOa2rOfe9RlydnXR731itO3xK85MzTccBADRjFHgAAFDJlLUpCvV1V/eYQNNR7EbX6AD1iAnUC/N2MaEdAKDBUOABAECFnIISfbUtXUPbhsnJyWY6jl35ZZ8Yncgr0sRlB0xHAQA0UxR4AABQYdaWNJWUWxrSNtR0FLsT7uehMZ0iNWn5IR09VWA6DgCgGaLAAwAASZJlWZqyNkU9YwMV4OVmOo5duq5rC/l6uOj5r3eZjgIAaIYo8AAAQJK0/vApHTyer2Htwk1HsVsers76Re9WWrQrSyv2HTcdBwDQzFDgAQCAJGnquhRF+XsoKcrPdBS71jc+WO0jffXsVztVUlZuOg4AoBmhwAMAAJ3IK9L85EwNbRcum43J6y6HzWbT7X1ideh4vj5bn2o6DgCgGaHAAwAAzdiUJptNGtQmxHSUZiEuxFuD2oTq1cX7lHOuxHQcAEAzQYEHAMDBlZdbmro2Rb3jguXr4Wo6TrNxc49oFRSX6a2lLCsHAKgfFHgAABzc9wdO6Ojpc7qqPZPX1acgbzeN7RylD1YdZlk5AEC9oMADAODgPl2fquhAT7UJ9zEdpdkZ2zlSvh6u+vuCPaajAACaAQo8AAAO7HR+sb7dnaXBbcKYvK4BeLg66+YeLTUvOUObUk6ZjgMAsHMUeAAAHNhX29NVVm6pf2Kw6SjN1sDWoYoL8dZzX+2SZVmm4wAA7BgFHgAABzZ9Y5q6RQcqwMvNdJRmy8lm0229W2lbWo7mJ2eajgMAsGMUeAAAHNTezLNKPpajwW1CTUdp9pKi/NU1OkAvf7NHJWXlpuMAAOwUBR4AAAc1Y9NR+Xm4qFurANNRHMItPaOVerJAn204ajoKAMBOUeABAHBAJWXlmrXlmPolhsjFmY8DjSEm2FsDW4fo9W/3Kb+o1HQcAIAd4jc2AAAOaMW+4zqZV8zw+UZ2Y/do5Z4r0XsrD5uOAgCwQxR4AAAc0PSNRxUb7KXYYG/TURxKqK+7hneI0NsrDupEXpHpOAAAO0OBBwDAwZzKL9a3u7M1iKPvRozrGiWbpP8uOWA6CgDAzlDgAQBwMF9uPSZLUv+EENNRHJKvh6uu6RKlKWtTlHIy33QcAIAdocADAOBgZmxK0xWtAuTn6Wo6isMa1TFCvh4uem3xPtNRAAB2hAIPAIADOZCdpx3puRqQyPB5k9xdnDWuWwvN3ZqufVlnTccBANgJCjwAAA5k7tZj8nZzVtfoANNRHN7QtmEK9XXXq4v2mo4CALATFHgAAByEZVmas+WYesYGyc2FjwCmuTg76YYrWmrhziwlp+WYjgMAsAP89gYAwEFsOXpGR0+fU/9EJq9rKgYmhqhFgKf+xVF4AEANUOABAHAQc7ccU5C3mzpE+pmOgv9xcrLpxu4ttXzfca0/fMp0HABAE0eBBwDAAZSUleur7RnqGx8sJyeb6Tj4kV5xQYoN9tI/v9kjy7JMxwEANGEUeAAAHMD3B07oVH4xw+ebICebTTf1iNaGI6e1Yv8J03EAAE0YBR4AAAcwd8sxtQjwVGywl+koqEK36AC1CffRq4v2chQeAFAtCjwAAM1cQXGpvtmZpX4JwbLZGD7fFNlsNv3sipbalpajZfuOm44DAGiiKPAAADRzi3dl6VxJGcPnm7hOLfzVNsJXry3ax1F4AECVKPAAADRzc7YcU5twH4X7eZiOgos4fxR++7EcLdvLUXgAwIUo8AAANGOn84u1cv8J9Uvg6Ls96Bjlp3YRvnp1MUfhAQAXosADANCMLdyZqXLLUu+4INNRUAPnj8InH8vR0r3ZpuMAAJoYCjwAAM3YV9vSlRTlrwAvN9NRUENJUX5qH+Gr1xbv5yg8AKASCjwAAM3U8bNFWnvopHrHc/TdnthsNv2s+w9H4Zfs4Sg8AOD/UeABAGimFu7IkM1mU69YCry96RDppw6RfnqNc+EBAD9CgQcAoJn6clu6OrXwk6+Hq+koqCWbzabru7XQjvRcLWddeADA/1DgAQBohjJzCrXxyGn1iQ82HQV1lBTlpzbhPvr3d5wLDwD4AQUeAIBmaF5yhlycbeoRw/B5e2Wz2TSuawttTj2jNYdOmo4DAGgCKPAAADRDX21LV+eWAfJ2dzEdBZeha3SA4kK89Z/vDpiOAgBoAijwAAA0M2mnC7T16Bn1Zfi83Tt/FH7NoZPalHLKdBwAgGEUeAAAmpl52zPk5uykK1oFmo6CetAjNlAtAz31nyUchQcAR0eBBwCgmflyW7q6tgqQp5uz6SioB07/Owq/bO9x7TiWYzoOAMAgCjwAAM3IkRP52pmey/D5ZqZPfLAi/D307+/2m44CADCIAg8AQDMyLzlD7i5O6tYqwHQU1CNnJ5uu7RKlRbuytD/rrOk4AABDKPAAADQj87ZnqFurALm7MHy+uRmYGKJgbzdNWn7QdBQAgCEUeAAAmomUk/nalZGrPnEMn2+OXJyddHWnSM3Zmq5jZ86ZjgMAMIACDwBAM3F++HxXhs83W0PbhcnL1VnvrTxkOgoAwAAKPAAAzQTD55s/D1dnjUgK16frU3Uqv9h0HABAI6PAAwDQDKSeLNDO9Fz1Zvh8szciKUKWJU1efcR0FABAI6PAAwDQDFQMn48OMB0FDczPw1VXtgvT5NWHlV9UajoOAKARGS3wEydOVOfOneXn5yc/Pz/17dtXCxYsuOhtpk+frnbt2snDw0OdOnXS/PnzGyktAABN17zt6eoaHSAPV4bPO4IxnSKVX1SmT9enmo4CAGhERgt8y5Yt9fe//12bNm3Sxo0bNXToUF133XXauXNnlfuvXr1at956q+6++25t2bJF48aN07hx47Rjx45GTg4AQNORerJAOxg+71BCfNzVPzFY7648pOLSctNxAACNxGZZlmU6xI8FBQXpn//8p+6+++4Lrvv5z3+u/Px8ff311xXb+vTpo65du2rSpEk1uv/c3Fz5+/srJydHfn5+9ZYbAABTJi0/qNcW79OkX3bnCLwDSTtdoD/O2K5/3thZN/WINh0HAHAR9dVDm8w58GVlZfrss8+Un5+vvn37VrnPmjVrdNVVV1XaNnLkSK1Zs6ba+y0qKlJubm6lCwAAzcm87RnqwvB5h9My0EtXtArQuysPqYkdjwEANBDjBT45OVk+Pj5yd3fXr3/9a82ePVsdOnSoct/MzEyFh4dX2hYeHq7MzMxq7/+ll16Sv79/xSU6mr9QAwCaj6OnCpR8LEd94oJMR4EBYzpHaV9WnlbsP2E6CgCgERgv8G3bttXWrVu1bt06PfDAA7rjjju0a9euerv/CRMmKCcnp+Jy9OjRertvAABMW7AjQ27OTurWKtB0FBjQPsJXCaHeemfFQdNRAACNwMV0ADc3NyUmJkqSunfvrg0bNuiNN97Q22+/fcG+ERERysrKqrQtKytLERER1d6/u7u73N3d6zc0AABNxLzkDHWJ9mf4vIOy2Wwa0ylS/15yQDvTc5QU5W86EgCgARk/Av9T5eXlKioqqvK6vn376rvvvqu0bfHixdWeMw8AQHN27Mw5bTuaw+zzDq5XXLBCfd317opDpqMAABqY0QI/YcIErVixQkeOHFFycrImTJigZcuW6bbbbpMkjR8/XhMmTKjY/+GHH9bChQv1yiuvaM+ePXrmmWe0ceNGPfTQQ6aeAgAAxizckSlXZ5u6tQowHQUGOTvZNCopQl9tz1D6mXOm4wAAGpDRAp+dna3x48erbdu2GjZsmDZs2KBvvvlGw4cPlySlpqYqIyOjYv9+/fpp2rRpeuedd9SlSxfNmDFDc+bMUceOHU09BQAAjJmfnKHOLQLk5Wb8jDgYdmXbMHm4OGny6iOmowAAGlCTWwe+obEOPACgOcjMKVSfl77TA4MTNKhNqOk4aAI+XZ+qJXuytWbCUPl6uJqOAwD4kWa3DjwAAKi5b3ZmysXJpitimH0ePxiZFKHCkjJ9tp4VdwCguaLAAwBgh+YnZ6hjC3/5uDN8Hj8I8nZTv4Rgfbj6sErLyk3HAQA0AAo8AAB25vjZIq0/fEq94oJMR0ETM6pjpNLPFGrxrqxL7wwAsDsUeAAA7Mw3OzNls0k9GD6Pn4gL8Vb7SF+9//1h01EAAA2AAg8AgJ2Zn5yhjlH+TFSGKo1OitTGlNPannbGdBQAQD2jwAMAYEdO5hVp3aFT6snweVSje0ygwnzdOQoPAM0QBR4AADuyeFeWLFkMn0e1nJxsGpkUoXnbM5SVW2g6DgCgHlHgAQCwI/OTM9Q+0k8BXm6mo6AJG9I2VK7OTvpkTYrpKACAekSBBwDATpwpKNbqgyfVM5bh87g4LzcXDW4bqinrUlRYUmY6DgCgnlDgAQCwE4t3Zams3GL5ONTIqKQI5RSUaM6WY6ajAADqCQUeAAA7MT85Q+0ifRXI8HnUQLifh7rHBOr97w/LsizTcQAA9YACDwCAHcgtLNHK/SfUi+HzqIWRSRHan52ntYdOmY4CAKgHFHgAAOzAd7uzVFpucf47aiUpyk8tAz310ZojpqMAAOoBBR4AADswf3um2oT7KNjH3XQU2BGbzabhHcK1eGeW0s+cMx0HAHCZKPAAADRxZwtLtHzfcfWKDTYdBXZoUOtQubs6aeo6lpQDAHtHgQcAoIlbsidbxWXl6h3P8HnUnoerswa1DtW0daksKQcAdo4CDwBAE7cgOUOJYT4KYfg86mhEh3CdLijRvO0ZpqMAAC4DBR4AgCYsv6hUS/ceZ/Z5XJbIAE91aemvj1YfMR0FAHAZKPAAADRhy/YeV1FpuXrFUeBxeUZ0iND2YznaknradBQAQB1R4AEAaMLmJ2coPsRb4X4epqPAznWNDlC4nztH4QHAjlHgAQBoos4Vl2nJnmz15Og76oGTk01XtQ/X19szdCKvyHQcAEAdUOABAGiilu3N1rmSMvWJY/k41I8hbcLkZLPpi41HTUcBANQBBR4AgCbq6+0ZigvxVoQ/w+dRP3w8XNQnPkhT16aqrNwyHQcAUEsUeAAAmqBzxWX6bk8Wk9eh3g3vEK5jZ85pxb7jpqMAAGqJAg8AQBO0dG+2CkvKGT6PepcQ6qO4EG99sjbFdBQAQC1R4AEAaILmMXweDcRms2lY+zAt3ZOttNMFpuMAAGqBAg8AQBNzfvh8b4bPo4H0TwiRp5uzPl2fajoKAKAWKPAAADQxFcPn4xk+j4bh4eqsAYkh+mz9URWXlpuOAwCoIQo8AABNzNfb0xUf4q1wP4bPo+Fc1T5cJ/OL9c3OTNNRAAA1RIEHAKAJKSgu1ZLd2cw+jwYXHeSl9hG+msJkdgBgNyjwAAA0IUv3HFdhKcPn0TiGtQ/XusOntD/rrOkoAIAaoMADANCEMHwejalXXJD8PV316fqjpqMAAGqAAg8AQBNRUFyqpXuymX0ejcbV2UkDW4do5uY0FZaUmY4DALgECjwAAE3Ekj3ZKiwtV2+Gz6MRDW0bppxzJUxmBwB2gAIPAEAT8dW2dCWGMnwejSsywFMdIv00bR1rwgNAU0eBBwCgCcgtLNHSPcfVJz7EdBQ4oKHtwrTu8CkdOp5nOgoA4CIo8AAANAGLd2apuKxcfeI5/x2Nr2dskHzdXfTZBiazA4CmjAIPAEAT8OW2dLWP9FWwj7vpKHBAbi5OGtA6RNM3HlVRKZPZAUBTRYEHAMCwU/nFWnXgBGu/w6ih7cJ0uqBEi3dlmY4CAKgGBR4AAMMW7shUuWWpdxwFHua0DPRSuwhffbqeyewAoKmiwAMAYNiX29KVFOUvf09X01Hg4K5sG6ZVB04q5WS+6SgAgCpQ4AEAMCg7t1DrDp1UX4bPownoEx8sb3dnfc5kdgDQJFHgAQAwaF5yhpydbOoZy+zzMM/NxUn9E0I0fVOaSsvKTccBAPwEBR4AAIO+3Jauzi395ePhYjoKIEka0jZMx88Wafm+46ajAAB+ggIPAIAhR08VaEvqGfVNCDEdBagQF+Kt2GAvfbGRYfQA0NRQ4AEAMGRecobcnJ3UvVWg6ShAJYPbhOnb3dk6frbIdBQAwI9Q4AEAMGT2lmO6IiZAnm7OpqMAlQxIDJGTTZqz5ZjpKACAH6HAAwBgwJ7MXO3NPKv+iQyfR9Pj4+GinrFB+mxDqizLMh0HAPA/FHgAAAyYsyVdvu4u6toywHQUoEqD24Tq4PF8bU49YzoKAOB/KPAAADSy8nJLc7ceU+/4ILk486sYTVPHFv4K9XHTdCazA4Amg08NAAA0svVHTikjp1ADEkNNRwGq5WSzaVCbUH25LV35RaWm4wAARIEHAKDRzdlyTGG+7moT7mM6CnBRg9uE6VxxmeYnZ5iOAgAQBR4AgEZVWFKmedsz1C8hRDabzXQc4KJCfd3VsYW/Pt/AMHoAaAoo8AAANKJle7N1tqhUA5h9HnZicJtQbUw5rSMn8k1HAQCHR4EHAKARzdlyTPGh3moR6Gk6ClAjPWOD5OXmrFmb00xHAQCHR4EHAKCR5BSU6Ls92eqfwNF32A83Fyf1jQ/WjE1pKi9nTXgAMIkCDwBAI1mwI0Nl5Zb6JgSbjgLUyqA2oUrPKdTaQydNRwEAh0aBBwCgkczafEwdo/wV6OVmOgpQK63DfBTp76HpmxhGDwAmUeABAGgEqScLtP7IKQ1sw9rvsD82m02DWodqwY4M5bEmPAAYQ4EHAKARzNicJi83Z/WMDTQdBaiTga1DVFRSzprwAGAQBR4AgAZWXm5pxqaj6hMfLHcXZ9NxgDoJ9nFXp5b+mr6RNeEBwBQKPAAADWzNoZNKP1OowQyfh50b1DpUG46cVspJ1oQHABMo8AAANLDpG48qyt9DrcN8TEcBLkuP2EB5uTlr5uZjpqMAgEOiwAMA0IByC0u0cEemBrYJlc1mMx0HuCzuLs7qHResGZuOsiY8ABhAgQcAoAHN356h4rJyDWrN8Hk0D4PbhCr9TKHWHzllOgoAOBwKPAAADeiLjUfVqYW/grxZ+x3NQ5twH4X7uWs2w+gBoNFR4AEAaCCHjudpc+oZDWLyOjQjNptN/RNDNC85Q4UlZabjAIBDocADANBAZmxKk7ebs3rEBJmOAtSrgYmhyisq1eJdWaajAIBDocADANAAysotzdycpr4JwXJz4dctmpcIfw+1CffRrM1ppqMAgEPhEwUAAA1g2d5sZeUWaUjbMNNRgAYxIDFEK/ad0PGzRaajAIDDMFrgX3rpJfXs2VO+vr4KCwvTuHHjtHfv3oveZvLkybLZbJUuHh4ejZQYAICambouVXEh3ooP8TYdBWgQfeNDZLNJX21LNx0FAByG0QK/fPlyPfjgg1q7dq0WL16skpISjRgxQvn5+Re9nZ+fnzIyMiouKSkpjZQYAIBLSz9zTsv2ZmtouzDWfkez5ePhom6tAhhGDwCNyMXkgy9cuLDS15MnT1ZYWJg2bdqkQYMGVXs7m82miIiIho4HAECdfLbhqNxdnNU/IcR0FKBBDUwM1avf7tP+rLNqHe5rOg4ANHtN6hz4nJwcSVJQ0MVn683Ly1NMTIyio6N13XXXaefOndXuW1RUpNzc3EoXAAAaSmlZuT5bn6p+CcHydHM2HQdoUF1bBcjX3UWztrAmPAA0hiZT4MvLy/XII4+of//+6tixY7X7tW3bVh988IHmzp2rKVOmqLy8XP369VNaWtXDt1566SX5+/tXXKKjoxvqKQAAoKV7jyv7bJGGtQ83HQVocK7OTuodH6zZm4+pvNwyHQcAmj2bZVlN4t32gQce0IIFC/T999+rZcuWNb5dSUmJ2rdvr1tvvVXPP//8BdcXFRWpqOj/Z0fNzc1VdHS0cnJy5OfnVy/ZAQA4784P1+voqQK9MK6T6ShAo9iXdVZPf7lT0+7prX6JnDYCAFXJzc2Vv7//ZffQJnEE/qGHHtLXX3+tpUuX1qq8S5Krq6u6deumAwcOVHm9u7u7/Pz8Kl0AAGgIaacLtHzvcQ1tx9F3OI7WYT6K8PPQnK0MoweAhma0wFuWpYceekizZ8/WkiVLFBcXV+v7KCsrU3JysiIjIxsgIQAANff5hqPycHVWv4Rg01GARmOz2dQvMVjzkzNVWFJmOg4ANGtGC/yDDz6oKVOmaNq0afL19VVmZqYyMzN17ty5in3Gjx+vCRMmVHz93HPPadGiRTp06JA2b96sX/7yl0pJSdE999xj4ikAACBJKikr12cbjqp/Yog8XJm8Do5lQEKI8opKtXRPtukoANCsGS3wEydOVE5OjoYMGaLIyMiKy+eff16xT2pqqjIyMiq+Pn36tO699161b99eV199tXJzc7V69Wp16NDBxFMAAECS9N3uLB0/W6Sr2oeZjgI0usgATyWEems2s9EDQINqMpPYNZb6mjwAAIAfu3nSGuUWlujpa5JMRwGMmJ+coc82pGrjE8Pl7+VqOg4ANCnNahI7AADs2c70HK0/ckqjkiJMRwGM6ZcQrLJyS/N3ZFx6ZwBAnVDgAQC4TJNXHVGIj5t6xAaZjgIYE+Dlpo5R/prDMHoAaDAUeAAALsPJvCLN3Zqu4e3D5exkMx0HMKp/YojWHT6l9DPnLr0zAKDWKPAAAFyGaetSZbOJtd8BST1jg+Tu4qQvt6WbjgIAzRIFHgCAOiouLdfHa1M0IDFEPh4upuMAxnm6OeuKVoGavZlh9ADQECjwAADU0YIdGTp+tkgjmbwOqNA/MUR7s85qT2au6SgA0OxQ4AEAqKMPVh1Wpxb+ig7yMh0FaDK6tPSXr4eL5mxhGD0A1DcKPAAAdbAl9bS2Hc3h6DvwEy7OTuoVG6Qvtx2TZVmm4wBAs0KBBwCgDt5beVgRfh7qFh1gOgrQ5PRLDFH6mUJtTj1tOgoANCsUeAAAaunwiXwt2JGhMZ0j5cTSccAF2kX4KtjbTXO3MoweAOoTBR4AgFp6Z8VB+Xu6alDrUNNRgCbJyWZTn/hgzdueodKyctNxAKDZoMADAFALWbmFmrEpTaM6RsrNhV+jQHX6JQTrZH6xVh88aToKADQbfPIAAKAW3v/+sNycnXRV+zDTUYAmLS7EW5H+HvpyG8PoAaC+UOABAKihnIISTVmbouEdwuXl5mI6DtCk2Ww29U0I1sIdmSosKTMdBwCaBQo8AAA19PGaIyotszSqY6TpKIBd6JcQoryiUi3bm206CgA0CxR4AABq4FxxmT5YdVhD2obK39PVdBzALrQI8FRciDez0QNAPaHAAwBQA59vSFXOuRKN7czRd6A2+sYHa8mebJ0tLDEdBQDsHgUeAIBLKCwp06Tlh9QvIUShvh6m4wB2pW9CsIpKy7V4V5bpKABg9yjwAABcwqfrU5V9tlA3dGthOgpgd0J83NU+wpdh9ABQDyjwAABcREFxqf679IAGtQ5VZICn6TiAXeqTEKzvD5zQqfxi01EAwK5R4AEAuIiP16Qop6BEN1zB0XegrnrHBcuyLC3ckWk6CgDYNQo8AADVOFtYoonLDmpI2zDOfQcug7+nqzq28NeX2xhGDwCXgwIPAEA13v/+sAqKS3U9574Dl61PXLDWHTqp7NxC01EAwG5R4AEAqMLp/GK9t/KwhrcPV5C3m+k4gN3rGRskZyeb5idnmI4CAHaLAg8AQBXeWXlIJWXlurYrR9+B+uDj4aLOLf311XYKPADUFQUeAICfyMot1IerDmtkUoT8PV1NxwGajT7xwdqUclrpZ86ZjgIAdokCDwDAT7y8cI/cnJ10bZco01GAZqV7TKDcnJ00j6PwAFAnFHgAAH4kOS1HMzcf043do+Xt7mI6DtCseLm5qGt0ALPRA0AdUeABAPgfy7L07Fc7FR3oqaHtwkzHAZqlvgnBSj6WoyMn8k1HAQC7Q4EHAOB/5idnamPKaf2yT4ycnWym4wDNUrdWAfJwddI8ZqMHgFqjwAMAIKmwpEwvzt+lK1oFqHPLANNxgGbL3cVZV7QK1JdbGUYPALVFgQcAQNL73x9WVm6RbusdYzoK0Oz1TQjW3qyz2p911nQUALArFHgAgMPLzi3Um0sPaESHcEUFeJqOAzR7nVsEyMvNmWH0AFBLFHgAgMN79qtdcnV20g1XtDQdBXAIbi5O6t4qUF+znBwA1AoFHgDg0JbsydK85Azd3idGPiwbBzSaPgnBOpCdp30MoweAGqPAAwAcVn5Rqf46e4c6t/RXv4Rg03EAh9K5hb+83Zz1NWvCA0CNUeABAA7r1cX7dDK/WL/qHyebjWXjgMbk4uykHrFB+mp7hizLMh0HAOwCBR4A4JC2p53Rh6sO62dXtFS4n4fpOIBD6hMfpMMn8rUnk2H0AFATFHgAgMMpLSvX4zO3q1WQl67uFGk6DuCwOkb5y8fdRfOYzA4AaoQCDwBwOO99f1h7M8/qnoHxcnZi6Dxgiouzk3rGBuqrbekMoweAGqDAAwAcyq70XP3rm726ulOkEkJ9TMcBHF6f+GClnCrQzvRc01EAoMmjwAMAHEZhSZke/myLWgZ66uYe0abjAJDUIcpPvh4umpfMMHoAuBQKPADAYfxj4R4dOZmv3wxJlKszvwKBpsDFyUk9Y4P0NcPoAeCS+PQCAHAIK/Yd14erjugXvVopOsjLdBwAP9InPlhHT59T8rEc01EAoEmjwAMAmr3T+cX6w/Rt6tzSXyOSIkzHAfATHSL95McwegC4JAo8AKBZsyxLj8/crsLiMt0/KEFONmadB5oaZyebesYGad72DIbRA8BFUOABAM3aOysOadGuLN03OF5B3m6m4wCoRu/4YKWdPqcdx5iNHgCqQ4EHADRbqw+c0D8W7tG4rlHqERNkOg6Ai2AYPQBcGgUeANAspZ85p4c+3aKkKH/d1J0l44CmztnJph6xQZq3ndnoAaA6FHgAQLNTVFqmB6ZukrNNemhoopycOO8dsAe944J09PQ57UxnGD0AVIUCDwBodp7/epd2pefq4avayM/D1XQcADWUFOUvXw8Xfb2dYfQAUBUKPACgWflo9RFNWZuqO/rFKiHUx3QcALXg7GRTjxiG0QNAdSjwAIBm47vdWXr2q526umOEhrULNx0HQB30iWcYPQBUhwIPAGgWdhzL0YPTNqt7TKBu6x1jOg6AOuoQ5Sdfd2ajB4CqUOABAHYv/cw53TV5g1oEeOrBK5m0DrBnLk5O6hEbqHnbMxhGDwA/QYEHANi13MIS3fXhBknSYyPayt3F2XAiAJerd1ywUk8VMIweAH6CAg8AsFsFxaW668MNSjtToD+NbKsALzfTkQDUg6QWfvL1cNF8htEDQCUUeACAXSoqLdP9n2zSzvQcPT6ynVoGepmOBKCeuDg5qXsrhtEDwE9R4AEAdqe0rFy/+3SL1h46qT8Mb6vW4b6mIwGoZ73jg5RyqkB7Ms+ajgIATQYFHgBgV8rLLf1xxnZ9uztbjwxro44t/E1HAtAAOkb5y9vdWQsYRg8AFSjwAAC7UV5u6Yk5yZqz5ZgeHJKgK2ICTUcC0EBcnP83jJ4CDwAVKPAAALtQVm7p8Znb9dn6o7p/cIL6JoSYjgSggfWOC9bB4/nan8UwegCQKPAAADtQWlauP3yxVTM3p+nBKxM1uE2o6UgAGkGnlv7ydHXmKDwA/A8FHgDQpJWUlev3n2/Vl9vS9dCVrdU/kSPvgKNwdXZS95hAlpMDgP+hwAMAmqyi0jL9dtpmzd+RqYeHtVHfhGDTkQA0sl5xQdqXlacD2XmmowCAcRR4AECTlFdUqjs/2KAle47r0avaqFdckOlIAAzo0jJAnq7OWriDo/AAQIEHADQ5J/OKdMvba7Qt7Yz+PLods80DDszNxUndWgVwHjwAiAIPAGhijp05p59NWq2jp8/pybEd1D7Sz3QkAIb1igvS7oyzOnIi33QUADCqTgX+0KFD9Z0DAADtzTyrG95apYKiMj1zTZJig71NRwLQBHSNDpC7i5PmM4wegIOrU4FPTEzUlVdeqSlTpqiwsLC+MwEAHNDqgyd048TV8nR11tPXJCnC38N0JABNhLuLs7pGB2j+dgo8AMdWpwK/efNmde7cWY8++qgiIiJ0//33a/369bW+n5deekk9e/aUr6+vwsLCNG7cOO3du/eSt5s+fbratWsnDw8PderUSfPnz6/L0wAANBFztx7T+PfXKy7EW0+O7aAgbzfTkQA0Mb3jgrQjPVdHTxWYjgIAxtSpwHft2lVvvPGG0tPT9cEHHygjI0MDBgxQx44d9eqrr+r48eM1up/ly5frwQcf1Nq1a7V48WKVlJRoxIgRys+v/vym1atX69Zbb9Xdd9+tLVu2aNy4cRo3bpx27NhRl6cCADDIsiy9vfygHv5sq/olBOuPI9vKy83FdCwATVDX6EC5Otu0cEem6SgAYIzNsizrcu+kqKhIb731liZMmKDi4mK5ubnp5ptv1j/+8Q9FRkbW+H6OHz+usLAwLV++XIMGDapyn5///OfKz8/X119/XbGtT58+6tq1qyZNmnTJx8jNzZW/v79ycnLk58fESABgSmlZuZ79apc+WZui67u10E3dW8pms5mOBaAJ+9eivSq3LM3+TX/TUQCgVuqrh17WLPQbN27Ub37zG0VGRurVV1/VY489poMHD2rx4sVKT0/XddddV6v7y8nJkSQFBVW/1u+aNWt01VVXVdo2cuRIrVmzpsr9i4qKlJubW+kCADArv6hU93y8UVPXpeiegXG6uUc05R3AJfWOC9KW1DPKyDlnOgoAGFGnAv/qq6+qU6dO6tevn9LT0/Xxxx8rJSVFL7zwguLi4jRw4EBNnjxZmzdvrvF9lpeX65FHHlH//v3VsWPHavfLzMxUeHh4pW3h4eHKzKx6ONVLL70kf3//ikt0dHSNMwEA6l9mTqFunLRa6w6d0uOj2mlYu/BL3wgAJF3RKlAuTjZ9wzB6AA6qTgV+4sSJ+sUvfqGUlBTNmTNHY8eOlZNT5bsKCwvT+++/X+P7fPDBB7Vjxw599tlndYlUrQkTJignJ6ficvTo0Xq9fwBAze3OyNW4N1fp+NkiPXNtkjq3DDAdCYAd8XZ3UccW/pqfTIEH4JjqNFPQ4sWL1apVqwtKu2VZOnr0qFq1aiU3NzfdcccdNbq/hx56SF9//bVWrFihli1bXnTfiIgIZWVlVdqWlZWliIiIKvd3d3eXu7t7jXIAABrOsr3Z+s3UzQr389BjI5hpHkDd9IoN0rsrD+n42SKF+vIZD4BjqdMR+ISEBJ04ceKC7adOnVJcXFyN78eyLD300EOaPXu2lixZUqPb9u3bV999912lbYsXL1bfvn1r/LgAgMb1ydoU3T15o9pH+OkplokDcBm6xwbKZpO+2clReACOp04FvrqJ6/Py8uTh4VHj+3nwwQc1ZcoUTZs2Tb6+vsrMzFRmZqbOnfv/iUnGjx+vCRMmVHz98MMPa+HChXrllVe0Z88ePfPMM9q4caMeeuihujwVAEADKiu39MLXu/TknB0a3iFcjw5vIw9XZ9OxANgxPw9XJUX5a8GODNNRAKDR1WoI/aOPPipJstlseuqpp+Tl5VVxXVlZmdatW6euXbvW+P4mTpwoSRoyZEil7R9++KHuvPNOSVJqamqlofr9+vXTtGnT9Ne//lV/+ctf1Lp1a82ZM+eiE98BABrfueIyPfL5Fi3elaU7+sZoVMeaLysKABfTMzZIH60+otP5xQpkRA8AB1KrAr9lyxZJPxyBT05Olpvb/79hurm5qUuXLnrsscdqfH81WYJ+2bJlF2y76aabdNNNN9X4cQAAjetEXpHunrxBezLP6vfD26hHTPXLgwJAbfWMDdSHqw5r8a4s3dyTFYYAOI5aFfilS5dKku666y698cYbl7UAPQCgeTqQnac7P1yv/KJSPTW2g+JDfUxHAtDMBHi5qV2Er+YlZ1DgATiUOp0D/+GHH1LeAQAXWHfopG6YuEqS9Oy1HSnvABpMr7ggrTpwQjnnSkxHAYBGU+Mj8DfccIMmT54sPz8/3XDDDRfdd9asWZcdDABgX77clq4/fLFVbcN99chVbeTtXqeVSgGgRnrGBumjNSlasidL13e7+DLEANBc1PjTlb+/v2w2W8W/AQCQfpjP5L2Vh/Xi/N0akBii+wfFy8W5TgO8AKDGgn3c1TrMRwuSMynwABxGjQv8hx9+WOW/AQCOq6zc0vNf79Lk1Uc0rmuUbu4RXfHHXgBoaD1jgzRzc5ryi0oZ9QPAIdTpEMm5c+dUUFBQ8XVKSopef/11LVq0qN6CAQCatsKSMj04bbM+XnNEv+ofp5/3bEV5B9CoesUFqai0XMv2HjcdBQAaRZ0K/HXXXaePP/5YknTmzBn16tVLr7zyiq677rqKtd0BAM1XzrkS3f7+Oi3dk63fD2+j4R3CTUcC4IDC/TwUF+KlBTsyTEcBgEZRpwK/efNmDRw4UJI0Y8YMRUREKCUlRR9//LH+/e9/12tAAEDTkplTqJsmrdaejLP6y9XtWeMdgFE9YoK0ZE+2CkvKTEcBgAZXpwJfUFAgX19fSdKiRYt0ww03yMnJSX369FFKSkq9BgQANB0HsvN0w1urdCq/WE9fk6Q24b6mIwFwcL3jglVQXKaV+0+YjgIADa5OBT4xMVFz5szR0aNH9c0332jEiBGSpOzsbNaHB4Bmakvqaf1s4mo5O9n0zDVJahHoaToSAKhFoKdaBnoyjB6AQ6hTgX/qqaf02GOPKTY2Vr1791bfvn0l/XA0vlu3bvUaEABg3sr9x/WLd9cpwt9DT12TpGAfd9ORAKBCz9ggLd6VpeLSctNRAKBB1anA33jjjUpNTdXGjRu1cOHCiu3Dhg3Ta6+9Vm/hAADmzdueobs+3KD2kb6aMLqdfFiqCUAT0ysuSGcLS7Xm0EnTUQCgQdX5U1hERIQiIiIqbevVq9dlBwIANB3T1qXqidnJ6p8YovsHx8vFqU5/9wWABhUT5KVwP3ct3JGhwW1CTccBgAZTpwKfn5+vv//97/ruu++UnZ2t8vLKw5UOHTpUL+EAAOa8teyAXl64VyOTIjS+b4ycWOMdQBNls9nUMzZI3+zM0gvjLDk78X4FoHmqU4G/5557tHz5ct1+++2KjIyUjQ91ANBsWJalfyzcq0nLD+pnV7TQz65oyfs8gCavd1yQvt6eofWHT6lvQrDpOADQIOpU4BcsWKB58+apf//+9Z0HAGBQebmlJ+fu0NR1qbq9T4yu7hRpOhIA1Eh8qI+Cfdz0zc5MCjyAZqtOJzMGBgYqKCiovrMAAAwqKSvX7z/fqk/Xp+q+QfGUdwB2xclmU8+YIC3YkaHycst0HABoEHUq8M8//7yeeuopFRQU1HceAIABhSVl+s2UzZqXnKHfDm2tK9uGmY4EALXWKy5IWblF2pp2xnQUAGgQdRpC/8orr+jgwYMKDw9XbGysXF1dK12/efPmegkHAGh4BcWluvfjjdpw+LQeHd5G3VoFmo4EAHXSNtxX/p6uWrgjU1fwXgagGapTgR83blw9xwAAmJBbWKK7PtygXem5enxUW3WI8jcdCQDqzMnJph4xgVqQnKEJo9sxASeAZqdOBf7pp5+u7xwAgEZ2Or9Yt7+/TodP5mvC6HZqHe5rOhIAXLZecUH6bk+2dmXkKok/SgJoZup0DrwknTlzRu+9954mTJigU6dOSfph6PyxY8fqLRwAoGFkny3Uz99Zo6Onz+mvYzpQ3gE0Gx2i/OTt7qyFOzJNRwGAelenAr99+3a1adNG//jHP/Svf/1LZ86ckSTNmjVLEyZMqM98AIB6duzMOd08aY1O5BXryTEdFBvsbToSANQbFycnXdEqUPOTM0xHAYB6V6cC/+ijj+rOO+/U/v375eHhUbH96quv1ooVK+otHACgfh05ka+bJq5WQXGZnhrbQS0CPU1HAoB61ysuSAeP5+tA9lnTUQCgXtWpwG/YsEH333//BdtbtGihzEyGKwFAU7Q/66xuenuNJOmpsR0U7udxiVsAgH3q3CJAnq4MowfQ/NSpwLu7uys3N/eC7fv27VNoaOhlhwIA1K8dx3J089tr5OnqrCfHdlCwj7vpSADQYNxcnNQ1OkDzkynwAJqXOhX4a6+9Vs8995xKSkokSTabTampqXr88cf1s5/9rF4DAgAuz8Yjp3TLO2sV5O2mJ8d0UICXm+lIANDgesYGaVdGrlJPFpiOAgD1pk4F/pVXXlFeXp5CQ0N17tw5DR48WImJifL19dWLL75Y3xkBAHW0Yt9x/fL9dWoV5KUnru4gH486rR4KAHanW6sAuTk7aeFOJrMD0HzU6ZOcv7+/Fi9erFWrVmnbtm3Ky8vTFVdcoauuuqq+8wEA6mjhjkz99tPN6tTCXw8PayM3lzqvHAoAdsfD1VmdW/prwY5M3TcowXQcAKgXtS7w5eXlmjx5smbNmqUjR47IZrMpLi5OERERsixLNputIXICAGph5qY0/WnGdvWMC9SDQxLl4kx5B+B4esYGaeLyg8rMKVSEPxN3ArB/tfpEZ1mWrr32Wt1zzz06duyYOnXqpKSkJKWkpOjOO+/U9ddf31A5AQA19P73h/WH6ds0qE2Ifntla8o7AId1RUygnJ1sWrSLyewANA+1OgI/efJkrVixQt99952uvPLKStctWbJE48aN08cff6zx48fXa0gAwKVZlqVXFu3Tf5ce0DWdI3Vrr1aMigLg0HzcXdQxyk/zkzM1vm+s6TgAcNlqdVjm008/1V/+8pcLyrskDR06VH/+8581derUegsHAKiZsnJLT8zZof8uPaBf9GqlX/SOobwDgH4YRr/+8Emdyi82HQUALlutCvz27ds1atSoaq8fPXq0tm3bdtmhAAA1V1Rapt9+ulmfrU/VfYPidU2XKNORAKDJ6BEbJElazDB6AM1ArQr8qVOnFB4eXu314eHhOn369GWHAgDUTE5Bica/v17f7srWI1e10ZVtw0xHAoAmxd/TVe0ifhhGDwD2rlYFvqysTC4u1Z827+zsrNLS0ssOBQC4tPQz53TjpNXalZ6rv1zdXj3/d5QJAFBZz9hArTpwQrmFJaajAMBlqdUkdpZl6c4775S7u3uV1xcVFdVLKADAxe3OyNUdH6yXJD19bZJaBHgaTgQATVfP2CB9tCZFS3Zna1y3FqbjAECd1arA33HHHZfchxnoAaBhrdh3XL+Zulmhvu7608i2CvByMx0JAJq0YB93tQ7z0cIdGRR4AHatVgX+ww8/bKgcAIAa+Gj1ET331S51bumv3w5tLU83Z9ORAMAu9IgN0uzNaSooLpWXW60+AgNAk1Grc+ABAGaUlpXryTk79PSXOzUyKVyPjWhLeQeAWugdF6TC0nIt33vcdBQAqDMKPAA0cTnnSnTnhxs0bX2q7hkYp9v7xsrJiTXeAaA2wv08FBvspQU7MkxHAYA6Y/wQADRhuzNydf8nm3Qqv1gTRrdTUpS/6UgAYLd6xAZp4Y5MFZWWyd2FUUwA7A9H4AGgiZq9JU3Xv7lKTjbphXEdKe8AcJl6xQYpr6hUqw6cMB0FAOqEI/AA0MQUl5brxXm79NGaFA1qHaJfDYjjSBEA1IOWgZ5qEeCpBcmZGtou3HQcAKg1CjwANCEpJ/P1u8+2aOexXP2qf5yuah8mm43z3QGgPthsNvWMDdSiXVn6W1m5XJ0ZjArAvvCuBQBNgGVZmrU5TaPfWKnMnEI9fU2ShncIp7wDQD3rGRuknHMlWnfolOkoAFBrHIEHAMNyC0v019nJ+nJbhga1DtEd/WJZoxgAGkhciLfCfN21YEeGBrQOMR0HAGqFI/AAYNDK/cc16vUV+nZ3th66MlEPDEmkvANAA7LZbD/MRr8zU2Xlluk4AFArFHgAMCCnoESPTd+q299fryAvN/39hk7qn8iRIABoDL3jgnQyr1ibU0+bjgIAtcJhHgBoZAt3ZOivc3aooLhM9w6M15VtQznXHQAaUWKYj4K83bQgOVM9Y4NMxwGAGuMIPAA0kkPH83Tnh+v16ymbFRvsrX/e2EVD2zHLPAA0NiebTT1iArVgR4Ysi2H0AOwHR+ABoIGdLSzRf5cc0PvfH1aQt5t+f1Ub9YwNpLgDgEG94oK0aFeWtqflqEt0gOk4AFAjFHgAaCClZeWasSlN/1q0T2cLS3R9txYa2zlKbi4MfgIA09pF+MnXw0ULdmRS4AHYDQo8ANSz8nJLC3Zk6p+L9ujIiQL1SwjWrb1aKcTH3XQ0AMD/ODv9bxh9coYeH9WWUVEA7AIFHgDqiWVZWrbvuP71zV7tTM9V1+gA/e36BMWFeJuOBgCoQq+4IC3de1x7Ms+qfaSf6TgAcEkUeAC4TOXllhbtytR/lhzQzvRctY3w1dNjO6gdHwYBoEnrGOUvbzdnLdiRSYEHYBco8ABQRyVl5Zq3PUP/XXpAB7Lz1DHKT09c3V5JUX4MxQQAO+Di7KQrWv0wjP7R4W1MxwGAS6LAA0AtnS0s0ecbjur97w8rI6dQ3aID9Oy1SWoT7ms6GgCglnrFBemVxft0IDtPiWE+puMAwEVR4AGghjJyzmnyqiOaui5VhSVl6pcYrIeHtVZMMOe4A4C96twyQB6uTlq4I0MPDW1tOg4AXBQFHgAuYWd6jt5dcUhfbc+Qu4uThrUL06iOkQrydjMdDQBwmdxcnNQ1OkDzkzMp8ACaPAo8AFTBsiyt2H9Ck5Yd1JpDJxXq665f9GqlK9uGydPN2XQ8AEA96hUbrH8v2a/UkwVqFexlOg4AVIsCDwA/UlZuacGODL219KB2ZeQqIdRbvxuaqF5xwXJ2YmI6AGiOurUKkJuzkxbuzNB9gxJMxwGAalHgAUBSaVm5Zm0+pjeXHlDKqQJ1auHPjPIA4CA8XJ3VJdpf85Ip8ACaNgo8AIdWXm7p6+QMvbpor46cLFCvuCDdOyheCaHMRAwAjqRnbJDeWnZQGTnnFOnvaToOAFSJAg/AIVmWpSV7svXPb/ZqT+ZZXdEqQPcPTlAsM8oDgEO6olWgXJxsWrgjU3f1jzMdBwCqRIEH4HCOnMjXM1/t1LK9x5UU5cca7gAAebu7qFMLfy1IpsADaLoo8AAcRmFJmd5aekATlx9UgJebHh3eRj1iAjnHHQAgSeoZF6R3VxxS9tlChfl6mI4DABegwANwCGsPndRj07cpK7dQYzpFaVy3KLm7sBwcAOD/9YgJ1Hs26ZudWbq9T4zpOABwASfTAQCgIZWUlevlhXt06ztr5evhon/c0Fk/7xlNeQcAXMDXw1VJUf5akJxhOgoAVIkj8ACarcMn8vW7T7doV0auft4zWtd0jpITa7kDAC6iV1yQJq86olP5xQrydjMdBwAqMXoEfsWKFbrmmmsUFRUlm82mOXPmXHT/ZcuWyWazXXDJzMxsnMAA7MaX29J19RsrdSKvSM9em6TruragvAMALqlHTKAsWVq8i8+XAJoeowU+Pz9fXbp00Ztvvlmr2+3du1cZGRkVl7CwsAZKCMDeWJalN77dr999ukXdYwL1t+s7saY7AKDGArzc1C7CT/OTKfAAmh6jQ+hHjx6t0aNH1/p2YWFhCggIqP9AAOxaUWmZHp+xXXO2puvmHtEa1zWKGeYBALXWKy5IU9amKKegRP5erqbjAEAFu5zErmvXroqMjNTw4cO1atWqi+5bVFSk3NzcShcAzc+p/GLd9u46zUvO0G+HJur6bi0o7wCAOukZG6TSckvf7s4yHQUAKrGrAh8ZGalJkyZp5syZmjlzpqKjozVkyBBt3ry52tu89NJL8vf3r7hER0c3YmIAjeH42SLdOGm19mfn6a9jOqhfQojpSAAAOxbk7aa2Eb6az2z0AJoYm2VZlukQkmSz2TR79myNGzeuVrcbPHiwWrVqpU8++aTK64uKilRUVFTxdW5urqKjo5WTkyM/P7/LiQygCTiRV6Rb3lmrk3lFenJMB0UGeJqOBABoBuYnZ+izDana/ORw+XowjB7A5cnNzZW/v/9l91C7OgJflV69eunAgQPVXu/u7i4/P79KFwDNw/lh8yfOFumvlHcAQD3qFRekkjJLS/Zkm44CABXsvsBv3bpVkZGRpmMAaGRnCop123trlZlbqCfGtFcU5R0AUI9CfNyVGObDMHoATYrRWejz8vIqHT0/fPiwtm7dqqCgILVq1UoTJkzQsWPH9PHHH0uSXn/9dcXFxSkpKUmFhYV67733tGTJEi1atMjUUwBgQEFxqW5/f72OnT6nv47poJaBXqYjAQCaoV6xQZq5OU35RaXydjf6sRkAJBk+Ar9x40Z169ZN3bp1kyQ9+uij6tatm5566ilJUkZGhlJTUyv2Ly4u1h/+8Ad16tRJgwcP1rZt2/Ttt99q2LBhRvIDaHzl5ZZ+//lW7c8+qz+Pbq/oIMo7AKBh9IoLUlFpuZbuZRg9gKahyUxi11jqa/IAAGb865u9enPpAT06oo16xASZjgMAaOb+MjtZHSL99OZtV5iOAsCOMYkdAIczd+sx/XfpAd3SqxXlHQDQKHrFBem7PVk6V1xmOgoAUOAB2Ictqaf1x+nbNah1iK7pzMSVAIDG0TsuSIUl5VrGMHoATQAFHkCTl5VbqHs+3qi4EG/dMzBeNpvNdCQAgIOI9PdUbLAXs9EDaBIo8ACatPOT1pWXW3rkqtZydeZtCwDQuHrFBevb3dkqLGEYPQCz+CQMoEl77/tDWn3wpB4YkqgALzfTcQAADqhPXJDOlZRp2d7jpqMAcHAUeABN1o5jOXp54V6N7RypTi38TccBADioyABPtQry0gKG0QMwjAIPoEkqKC7Vbz/douggL/28R7TpOAAAB9c7Lkjf7s5iGD0AoyjwAJqk57/erfQz5/TglYly4bx3AIBhveODlV9cphX7GEYPwBw+FQNochbvytKn61N1e58YtQjwNB0HAAC1CPBUdKAns9EDMIoCD6BJySsq1V/nJOuKVgEa2i7MdBwAACqcn42+qJRh9ADMoMADaFJeWbRXZwpKdGe/ONZ7BwA0KX3ig5RXVKqV+06YjgLAQVHgATQZyWk5+mj1Ed3YvaVCfd1NxwEAoJKWgV5qyTB6AAZR4AE0CWXllibM2q7oIC+N6hhhOg4AAFXqHRekRbuyGEYPwAgKPIAm4eM1R7QzPVd394+TixNvTQCApql3XLDyikr1/X6G0QNofHxKBmBcRs45/fObvRrWPlytw31NxwEAoFrRQV6KDvTUvO0MowfQ+CjwAIx7/utdcndx0i09o01HAQDgknrFBWvRriwVljCMHkDjosADMGpTyinNT87Uz3u2kre7i+k4AABcUsVs9AyjB9DIKPAAjLEsSy/M263YYC8NbB1iOg4AADXSMtBLrYI89fX2dNNRADgYCjwAYxbsyNSW1DO6rXeMnFjzHQBgR3rHBWsxw+gBNDIKPAAjikvL9fcFe9Q1OkAdW/ibjgMAQK30jg9WQXGZlu87bjoKAAdCgQdgxJS1KUo7XaBf9GplOgoAALXWIsBTMcFemscwegCNiAIPoNHlnCvRG9/t1+A2YYoO8jIdBwCAOukVG6TFu7IZRg+g0VDgATS6t5YdUGFJmW7q0dJ0FAAA6qxPfLDOlZRp2V6G0QNoHBR4AI0qK7dQH35/RGM6RyrQy810HAAA6iwqwFOxDKMH0Igo8AAa1cRlB+XqYtOYTpGmowAAcNl6xwXr293ZOlfMMHoADY8CD6DRZOcW6tP1qbq6Y6S83FxMxwEA4LKdH0a/ZE+26SgAHAAFHkCjmbj8oFycbRrVMcJ0FAAA6kWEv4fiQ7z1FcPoATQCCjyARpGdW6hp61I1mqPvAIBmpk98sJbuyVZeUanpKACaOQo8gEYxafkhuTjZNCqJo+8AgOalT3ywikrL9d3uLNNRADRzFHgADS77bKGmrkvRqI4R8nbn6DsAoHkJ9XVX63AffbmVYfQAGhYFHkCDe+d/R99Hd2TmeQBA89QnLljL9x1XzrkS01EANGMUeAAN6vjZIk1Zm6KRHH0HADRjfeKDVVZuadHOTNNRADRjFHgADeqj1Uckmzj6DgBo1oK83dQu0ldfb88wHQVAM0aBB9BgCopL9fHaI7qybZh8OPoOAGjm+sQH6/v9J3Qqv9h0FADNFAUeQIP5YsNR5RWWcvQdAOAQescFy5KlhTsYRg+gYVDgATSI0rJyvbvysPrEByvU1910HAAAGpy/p6uSovz11TZmowfQMCjwABrEwp2ZOnbmnMZ2jjIdBQCARtMnPljrDp9U9tlC01EANEMUeAD1zrIsvb38kDq18FdciLfpOAAANJpesUGy2Wyaz2R2ABoABR5AvVt3+JSSj+Xo6k6c+w4AcCw+Hi7q0tJfcxlGD6ABUOAB1Lu3lx9UqyAvdWnpbzoKAACNrm9CiLakntHRUwWmowBoZijwAOrV/qyzWrr3uMZ0ipTNZjMdBwCARtcjJlDuLk76ajtH4QHULwo8gHr1warDCvJ2U7+EYNNRAAAwwsPVWd1aBWjuVgo8gPpFgQdQb3IKSjR78zENaxcmF2feXgAAjqtfQoj2Zp7V/qyzpqMAaEb4hA2g3nyx8ajKLEvD2oebjgIAgFFdowPk7easL5nMDkA9osADqBdl5ZY+WnNEveOC5e/pajoOAABGuTo7qUdskOZuTZdlWabjAGgmKPAA6sWyvdlKO31OI5MiTEcBAKBJ6JcQrNRTBdqelmM6CoBmggIPoF5MXn1EiaHeSgzzMR0FAIAmISnKX/6ergyjB1BvKPAALtvB43lauf+ERnD0HQCACs5ONvWOC9JX29JVVs4wegCXjwIP4LJ9vPqI/D1d1SeepeMAAPix/okhyj5bpPWHT5mOAqAZoMADuCxnC0s0fVOarmwbJleWjgMAoJLWYT4K83VnGD2AesGnbQCXZdbmYyosKdNV7cNMRwEAoMmx2WzqmxCsedvTVVRaZjoOADtHgQdQZ5Zl6eM1R9QzNkjBPu6m4wAA0CQNSAxRbmGplu09bjoKADtHgQdQZxuOnNbB4/m6qn246SgAADRZLQO9FBfipTlbjpmOAsDOUeAB1Nm0dSmK8PNQhyg/01EAAGjS+iWE6Lvd2cotLDEdBYAdo8ADqJPT+cWan5ypK9uFyclmMx0HAIAmrV9CiErKyrVwR6bpKADsGAUeQJ3M2nJM5ZalwW1CTUcBAKDJC/J2U4coP4bRA7gsFHgAtWZZlqauS1GP2ED5e7qajgMAgF3onxCiNQdPKjOn0HQUAHaKAg+g1tYfPqVDx/M1rB2T1wEAUFO94oLk4mzTV6wJD6COKPAAam3a+lRF+nsoicnrAACoMW93F3VrFajZDKMHUEcUeAC1cjq/WAuSM3Vl2zDZmLwOAIBaGZAQol0ZudqfddZ0FAB2iAIPoFZmbk5j8joAAOqoa6sAebs7a85WjsIDqD0KPIAa+2HyulT1jA2SH5PXAQBQa67OTuodF6zZW46pvNwyHQeAnaHAA6ixTSmndfhEvoa2CzMdBQAAuzUwMUTpZwq14cgp01EA2BkKPIAa+3zDUYX7uasDk9cBAFBnbSJ8Fe7nrlmbGUYPoHYo8ABqJK+oVF9vz9Cg1qFyYvI6AADqzMlmU/+EEM1LzlBhSZnpOADsCAUeQI3M256uwpIyDWLyOgAALtuA1iHKKyrV4l1ZpqMAsCMUeAA18vmGo+rc0l8hPu6mowAAYPci/T3VJtxHMzenmY4CwI5Q4AFc0oHss9qcekaD2zB5HQAA9WVAYohW7juh42eLTEcBYCco8AAuafrGNPm6u6hHbKDpKAAANBt940Nks0lfbks3HQWAnaDAA7iokrJyzdiUpv6JIXJ15i0DAID64uPhoitaBWrmJobRA6gZo5/GV6xYoWuuuUZRUVGy2WyaM2fOJW+zbNkyXXHFFXJ3d1diYqImT57c4DkBR7Z0T7ZO5hdrSFsmrwMAoL4NaB2iXRm52pOZazoKADtgtMDn5+erS5cuevPNN2u0/+HDhzVmzBhdeeWV2rp1qx555BHdc889+uabbxo4KeC4Pt9wVPGh3ooJ9jYdBQCAZqdbdIB83V00mzXhAdSAi8kHHz16tEaPHl3j/SdNmqS4uDi98sorkqT27dvr+++/12uvvaaRI0c2VEzAYWXnFmrZ3uMa3y/GdBQAAJolF2cn9U0I1uwtx/SnUe3k7GQzHQlAE2ZXJ7SuWbNGV111VaVtI0eO1Jo1a6q9TVFRkXJzcytdANTM7C3H5OQk9UsIMR0FAIBma2DrUGWfLdL3B06YjgKgibOrAp+Zmanw8PBK28LDw5Wbm6tz585VeZuXXnpJ/v7+FZfo6OjGiArYPcuyNGNTmnrEBMnH3ehgHQAAmrWEUG+1DPTU9I1HTUcB0MTZVYGviwkTJignJ6ficvQob4xATSQfy9H+7DwNasPkdQAANCSbzabBbUK1aGeWcgpKTMcB0ITZVYGPiIhQVlZWpW1ZWVny8/OTp6dnlbdxd3eXn59fpQuAS5uxKU1B3m7q3MLfdBQAAJq9AYkhKi0v15fbWRMeQPXsqsD37dtX3333XaVtixcvVt++fQ0lApqnotIyzdlyTP0TguXEZDoAADS4AC83dY0O0PQNjBYFUD2jBT4vL09bt27V1q1bJf2wTNzWrVuVmpoq6Yfh7+PHj6/Y/9e//rUOHTqkP/3pT9qzZ4/eeustffHFF/r9739vIj7QbH23O1u5haUMnwcAoBENbhOm7cdytC/rrOkoAJooowV+48aN6tatm7p16yZJevTRR9WtWzc99dRTkqSMjIyKMi9JcXFxmjdvnhYvXqwuXbrolVde0XvvvccSckA9m7EpTYlhPmoZ6GU6CgAADuOKVgHy9XDRjE1ppqMAaKJslmVZpkM0ptzcXPn7+ysnJ4fz4YEqZJ8tVN+/LdEd/WI0vEOE6TgAADiUj1Yf0YaUU1o7YZhcne3qbFcAF1FfPZR3BQCVzN2SLicnqS9rvwMA0OgGtw3Vybxirdh33HQUAE0QBR5ABcuyNH3TUXWPCWTtdwAADIgN9lZssBdrwgOoEgUeQIUdx3K1LytPg1ozeR0AAKYMbhOqb3dn61R+sekoAJoYCjyACjM3pynQy1WdWwaYjgIAgMPql/jDaWyztxwznARAU0OBByBJKi4t15ytx9QvIUTOrP0OAIAxfh6u6hEbqM/Wp8rB5psGcAkUeACSpGV7s3WmoIS13wEAaAKubBum/dl52nL0jOkoAJoQCjwAST8Mn48N9lKrINZ+BwDAtI4t/BXq667P1zOZHYD/R4EHoNP5xfpud7YGMnkdAABNgpPNpiFtQvXltnTlFZWajgOgiaDAA9BX29NVblnqn8ja7wAANBWD24SqqLRMX21LNx0FQBNBgQegmZvS1DU6QP6erqajAACA/wn2cVfX6AB9uj7VdBQATQQFHnBwB7LztC0th7XfAQBogoa0DdP2tBztzsg1HQVAE0CBBxzcrM1p8nZ3VrdWgaajAACAn+jWKkABnq76fAOT2QGgwAMOrazc0qzNx9Q3PlhuLrwdAADQ1Lg4OWlQm1DN2pymwpIy03EAGMYndsCBrT10Upm5hcw+DwBAEzakbahyC0u1cEem6SgADKPAAw5s5qY0Rfp7qHWYj+koAACgGpH+nkqK8tO0dUxmBzg6CjzgoPKLSjV/R4YGJIbIZrOZjgMAAC5iWLswrT9ySvuzzpqOAsAgCjzgoBbuyFRhSTnD5wEAsAM9Y4Pk7+mqqRyFBxwaBR5wUDM2pSkpyk+hvu6mowAAgEtwcXbSkLahmrkpTQXFpabjADCEAg84oGNnzmntoZMakBhiOgoAAKihoW3DlFdUqq+3ZZiOAsAQCjzggOZsOSY3Fyf1jgs2HQUAANRQmJ+HukQHaMraFNNRABhCgQccjGVZmrEpTT1jg+Tp5mw6DgAAqIVh7cO0/ViOktNyTEcBYAAFHnAw29JydPhEvga2Zvg8AAD25oroQIX4uGnqOo7CA46IAg84mFmb0xTk7aaOUf6mowAAgFpycrLpyrZhmrP1mHILS0zHAdDIKPCAAykqLdPcrenqnxAsJyfWfgcAwB4NaRum4tJyzdlyzHQUAI2MAg84kKV7jivnXAlrvwMAYMeCvN3UIyZIH69JkWVZpuMAaEQUeMCBzNqcpvhQb0UHeZmOAgAALsOIpHAdyM7TmoMnTUcB0Igo8ICDOJVfrCV7sjWQtd8BALB7HSL9FB3oqcmrj5iOAqARUeABBzF36w/nyfWjwAMAYPdsNpuGd4jQt7uzlHa6wHQcAI2EAg84iBmb0tStVYD8PFxNRwEAAPVgYOsQebo6a8raVNNRADQSCjzgAPZk5mpneq4GMXkdAADNhoerswa3CdWn61NVWFJmOg6ARkCBBxzAzE1p8vNwUdfoANNRAABAPRqRFKHccyX6cmu66SgAGgEFHmjmSsvKNWvLMfVLDJGLMz/yAAA0J+F+HurWKkAfrj7MknKAA+DTPNDMrdh/XCfzijW4DcPnAQBojoZ3iNDujLPamHLadBQADYwCDzRzMzalKSbYS7HB3qajAACABtC5pb8i/T30EUvKAc0eBR5oxs4UFGvxriwmrwMAoBlzstk0okO4FuzIVPqZc6bjAGhAFHigGftqe4bKyi31Swg2HQUAADSgwW3C5O7ipI/WHDEdBUADosADzdj0jUfVLTpQAV5upqMAAIAG5OnmrKHtwjRtbaryi0pNxwHQQCjwQDN1IPustqflaGCbENNRAABAIxiVFKH84lJN33jUdBQADYQCDzRT0zemydfDRVe0CjQdBQAANIJgH3f1iQ/W+98fVlk5S8oBzREFHmiGSsrKNWNzmvonhsiVtd8BAHAYV3eK1NHT57R4V6bpKAAaAJ/sgWZo+d4f1n4fwtrvAAA4lIRQH7WP8NW7Kw+bjgKgAVDggWboi41HFR/irRjWfgcAwOGM7hSpTSmntSX1tOkoAOoZBR5oZo6fLdJ3e7I1mKPvAAA4pO6tAhXp76H3OAoPNDsUeKCZmbPlmJxsUr8EZp8HAMAROTnZNCopQgt2ZOjoqQLTcQDUIwo80IxYlqXPNx5Vj5gg+Xi4mI4DAAAMGdQmVN5uLnr/e47CA80JBR5oRral5ehAdp6GtGX4PAAAjszD1VkjkiL02fpUncwrMh0HQD2hwAPNyBcbjyrEx00do/xNRwEAAIaNTAqXJWny6iOmowCoJxR4oJk4V1ymL7ema2DrUDk52UzHAQAAhvl6uGpouzBNXn1EeUWlpuMAqAcUeKCZWLgzQ3lFpcw+DwAAKozpFKlzxWX6dF2q6SgA6gEFHmgmPl13VElRfgr38zAdBQAANBHBPu7qnxiid1ceUlFpmek4AC4TBR5oBg4ez9P6I6d0Zdsw01EAAEATc02XKB0/W6TZm4+ZjgLgMlHggWbg8w1H5evuop6xQaajAACAJqZFgKd6xgZp0vKDKiu3TMcBcBko8ICdKyot0/SNRzWwdYjcXPiRBgAAF7q2a5SOnCzQwh2ZpqMAuAx82gfs3OJdWTpdUKKh7cJNRwEAAE1UQqiPOrXw17+X7Fc5R+EBu0WBB+zcp+tT1TbCVy0CPU1HAQAATdgNV7TQ3syzWrQry3QUAHVEgQfsWMrJfK06cJLJ6wAAwCW1i/BTxyg/vf7tPo7CA3aKAg/Ysc83HJW3m7P6xDN5HQAAuLQbrmipPZlntXg3R+EBe0SBB+xUSVm5vth4VP0TQ+Tu4mw6DgAAsAPtI/2UFOWnN77dL8viKDxgbyjwgJ36bne2TuQVa2g7hs8DAICau6FbC+3KyNW3u7NNRwFQSxR4wE59uj5ViaHeign2Nh0FAADYkQ5R/uoQ+cO58ByFB+wLBR6wQykn87Vi33ENa8/ScQAAoPZuuKKFdqbn6juOwgN2hQIP2KFp61Ll7e6ivgnBpqMAAAA71CHST+0jffUaM9IDdoUCD9iZwpIyfbbhqAa1CWXyOgAAUCc2m003dY/WzvRcLdiRaToOgBqiwAN2Zt72DOWcK9FV7Zm8DgAA1F37SD91jQ7QvxbtVWlZuek4AGqAAg/YmY/XHlHnlv6K9Pc0HQUAANi5m3tE6/CJfM3cnGY6CoAaoMADdiQ5LUfbjuZoOJPXAQCAehAX4q2+8cF6bfF+FZaUmY4D4BIo8IAd+WTtEYX4uKlbq0DTUQAAQDNxU4+Wyj5bqClrU0xHAXAJFHjATuQUlGju1nQNbRcuZyeb6TgAAKCZiPT31JC2Yfrv0gM6W1hiOg6Ai6DAA3Zi+qajKiu3dGXbUNNRAABAM3NDtxYqKCrTeysPm44C4CIo8IAdKC+3NGVtinrFBSnAy810HAAA0MwE+7hrRFK43l15SMfPFpmOA6AaFHjADizbl60jJws0okOE6SgAAKCZuq5LCznZbHp18T7TUQBUo0kU+DfffFOxsbHy8PBQ7969tf7/2rv7sKjqxP//rxnuhnsQEBARBUXxDspCEUstW1zNzP380rLU3Kxtq/1obu1qaZbV+turz5pt26aZ5bqtq1uateqa5mat9ylaeIcpImqAoNyj3M35/lGxst4sjMCB4fm4rnMpZ86ZeQ1vZi5enHPes3v3VbddunSpLBZLncVmszVjWqD5Ldl6QjEh3ooN9TE7CgAAcFI+Nlf95MYIrfwyS0dyis2OA+AKTC/wK1eu1PTp0zVnzhylpqYqPj5eKSkpOnv27FX38fPzU3Z2du1y8iQzZsJ5peeUaNuxc/px73BZLExeBwAAms4dcaEK9bPppbWHZRiG2XEA/AfTC/z8+fP18MMPa/LkyerZs6cWLlwoLy8vvfPOO1fdx2KxKCwsrHYJDeUzseG83t12Qu283dU/up3ZUQAAgJNzdbFqfGInbT2Wry1H88yOA+A/mFrgKysrtXfvXg0bNqx2ndVq1bBhw7Rjx46r7ldaWqqoqChFRkZq9OjROnjw4FW3raioUHFxcZ0FaC3OlVZodeoZ3dEzVK5W0//eBgAA2oB+UYHq1cFPL609pOoau9lxAFzC1EaQn5+vmpqay46gh4aGKicn54r7dO/eXe+8844++ugjvffee7Lb7Ro4cKBOnz59xe3nzZsnf3//2iUyMrLRnwfQVJbvypLFIt3eo73ZUQAAQBthsVh0f/8oZeSV6a9fnjI7DoBLtLpDeklJSZo4caISEhI0ePBgrV69WiEhIVq0aNEVt585c6aKiopql1OneBNC61BZbdefdmRqUNdg+drczI4DAADakC7B3ro1NkTzN6ar+GKV2XEAfM/UAh8cHCwXFxfl5ubWWZ+bm6uwsPp9XJabm5tuuOEGHTt27Iq3e3h4yM/Pr84CtAZrv/5W+aWV+nHvcLOjAACANmjsTZG6UFWjBZu+MTsKgO+ZWuDd3d3Vr18/bd68uXad3W7X5s2blZSUVK/7qKmpUVpamsLDKTlwHoZh6O1/nVBCpL8iAj3NjgMAANqgdt7u+skNHfWn7Zk6nM08UkBLYPop9NOnT9fixYv1pz/9SYcPH9bPf/5zlZWVafLkyZKkiRMnaubMmbXbz507Vxs3blRGRoZSU1P1wAMP6OTJk5oyZYpZTwFodLtOnNeh7GIN78UfpgAAgHl+3DtM4QE2zVpzgI+VA1oAV7MDjBs3Tnl5eXruueeUk5OjhIQEbdiwoXZiu6ysLFkvmX27oKBADz/8sHJychQYGKh+/fpp+/bt6tmzp1lPAWh0b245rqggL/Xt6G92FAAA0Ia5ulg1KamzXl5/WKtTz+h/+nU0OxLQplmMNvantOLiYvn7+6uoqIjr4dEiHThTpDtf36onhnZVctdgs+MAAADo9X9+o/ScEv3zqSHy92RyXaChGquHmn4KPYC6Fn5+XKF+HhoQHWR2FAAAAEnS/f2jVF5Zo/kb082OArRpFHigBcnML9P6tGyN7BMuF6vF7DgAAACSvp/Q7sYI/XnnSR04U2R2HKDNosADLchb/8qQr81Ng2Pbmx0FAACgjuG9w9Qx0FMzV6epusZudhygTaLAAy3E2eKLen/PKQ3vHSZ3V16aAACgZXG1WvXwLdE6cKZI72w7YXYcoE2iJQAtxDvbMuVqteqOuFCzowAAAFxR1/a+Gt47TPM3HtXJc2VmxwHaHAo80AIUXajSn3dk6o6eofL2MP3THQEAAK5q7E2R8vN0069XpfHZ8EAzo8ADLcCy7ZmqrLFreO8ws6MAAABck83NRVNuidbOjHNa+eUps+MAbQoFHjBZ8cUqLf5Xhm7rEapAL3ez4wAAAPxXfSL8NTg2RC+vO6zc4otmxwHaDAo8YLJ3tp7QxSq77orvYHYUAACAenugf5RcrBY9+yGn0gPNhQIPmKiovEpv/+uEhsW1Vztvjr4DAIDWw8fmqocGddGnh8/q/T2nzY4DtAkUeMBES7ZmqKrGrlEcfQcAAK3QTZ3baUj3ED3/94PKOldudhzA6VHgAZMUlFVqydYTuqNnqAK49h0AALRSEwd0lq/NVU/+bb9q7JxKDzQlCjxgksX/ylCNYWhUX46+AwCA1svT3UWPDo5R6skCLfz8uNlxAKdGgQdMcK60Qu9uy9SPeobJz9PN7DgAAADXpUeYn0bFd9D8TUd14EyR2XEAp0WBB0yw6IsMSdKdfcNNTgIAANA47unXUZGBnpq6Yp8uVNaYHQdwShR4oJmdLijX0m2ZGtEnTL42jr4DAADn4Opi1eNDu+p0wQU999EBs+MATokCDzSzVz5Jl7eHi+7k2ncAAOBkOgZ6aXJyF72/97Q+2MtHywGNjQIPNKO000X6aP+3+p9+HWVzczE7DgAAQKMbHBuiwbEhmvVhmo7mlpgdB3AqFHigmRiGoZfWHVJkoKeGxLY3Ow4AAECTmZzcWSG+HnrsL6kqr6w2Ow7gNCjwQDP555Gz2nXivO5L7CQXq8XsOAAAAE3Gw9VFU2+P1anz5Zr14QEZBp8PDzQGCjzQDKpr7Hp5/WH1ifBXQmSA2XEAAACaXESgpx4a1EWr953RX3ZlmR0HcAoUeKAZrNxzSifyyjS+fydZLBx9BwAAbcMt3UL0o56hmvPxQe3KOGd2HKDVo8ADTazoQpXmbzyqW7oFq3OQt9lxAAAAmtWEpCj1CPPVo+/t1emCcrPjAK0aBR5oYr/bmK7yyhqNu7mT2VEAAACanavVqv+9vZvcXKx6eNkeJrUDrgMFHmhCaaeL9OcdJ/X/9euodt7uZscBAAAwhZ/NTdPviNWJ/DI99f5XTGoHOIgCDzSRGruhZz9MU6cgL6X0CjM7DgAAgKmigrz188FdtT4tR69t/sbsOECrRIEHmshfd2fp6zNF+mlyFz42DgAAQFJil3Yad1OkFnz6jf6255TZcYBWx9XsAIAzyi+t0G83HNHQ7iGKDfU1Ow4AAECLMTqhg/JLKzRzVZra+3poSPf2ZkcCWg2OwANNYN76w5Ih3ZvIxHUAAACXslgsmpzcRQmRAfr5e6lKO11kdiSg1aDAA41s+7F8rUo9o3E3R8rP5mZ2HAAAgBbHxWrRE7d1VUSgpx5culunzvPxckB9UOCBRlRysUpPvf+VenXw09AenA4GAABwNTY3Fz39o+5yc7HqgSW7dLb4otmRgBaPAg80ohfXHlJBeZV+dmu0rBYmrgMAALgWP083zRzeQ6UXqzX+7V06V1phdiSgRaPAA43ksyNn9bc9p3X/gE4K8bWZHQcAAKBVaO9n07Mj4pRfUqH7396lwvJKsyMBLRYFHmgEReVV+vWqr5UQ6a/bmEkVAACgQcIDPPXMiDidKbygiUt2q/hildmRgBaJAg80gjkfH1BZRbWmDIqWhVPnAQAAGiyynZdm/jhOx/NL9eA7u1VCiQcuQ4EHrtP6tGyt2f+tJg3srCAfD7PjAAAAtFpdgr01Y3ic0nNKdP9iTqcH/hMFHrgOJ8+V6VcffK3+XdppUNdgs+MAAAC0el3b++jZkT2Vea5MYxft0NkSZqcHfkCBBxx0sapGP38vVT42Vz1yK6fOAwAANJYuwd567s5eyi+t1NiFO3Sm8ILZkYAWgQIPOGju2kP65myJpt7eTV7urmbHAQAAcCoRgZ567s6eKq+s0T1vbtfxvFKzIwGmo8ADDliz74yW78rSgwO7qHOQt9lxAAAAnFKon03P3dlTVqtFY/64TbtPnDc7EmAqCjzQQMfOlmjm6jTd0i1YQ7uHmB0HAADAqQX5eOj5Ub0UGeil+9/eqY/2nzE7EmAaCjzQAIXllZqybI+CfNz10+QuXPcOAADQDLw9XDVjeA8NiA7S1BX79cZnx2QYhtmxgGbHhbtAPVVU1+iRZXt1rrRSL47uLZubi9mRAAAA2gxXF6t+PjhGIb4eeuWTdGXklerlMX34nQxtCgUeqAfDMDRjVZr2nSrQsyN6KtTPZnYkAACANsdiseiefpEK87Pp7X+dUHpOiRZNvEkRAZ5mRwOaBafQA/Xw+j+P6cN9Z/SzW2PUPczX7DgAAABt2i3dQvT8Xb2UW1KhO3//L20/nm92JKBZUOCB/+Kj/Wc0f9NR3dOvo5K7BpsdBwAAAPrus+Jfuru3OgZ6acLbu7Xo8+Oy27kuHs6NAg9cwz+P5OqXf/tKt8YGa8wNEWbHAQAAwCX8bG769fAeGtk3XPP+cUQPvrtbeSUVZscCmgwFHriKz4/m6Wd/3qsbOgXo4VuimXEeAACgBXKxWnRfYifNGN5DX58u0vAFX2hL+lmzYwFNggIPXMH2Y/l6ZNke9Ynw1//e1k2uVl4qAAAALVl8ZIDm/aSPItt56sF3v9SLaw/pYlWN2bGARkUrAf7Droxz+umfvlRcuK+mDYuVqwsvEwAAgNYgwMtdT6f00IQBUVq2I1PDX/tCezLPmx0LaDQ0E+AS247la/LSL9Wtva+eHNZdbpR3AACAVsVqsWhEn3DNG9NXbi5W3bNwh174+0GVV1abHQ24brQT4Htr9p3RpHd2KzbUR7/8UazcXXl5AAAAtFYRgZ56/s5eur9/lP6yM0spr3JtPFo/GgraPMMwtOjz45q2cr8GdQ3WL3/UXR6uLmbHAgAAwHWyWi0a2Tdc////9JGfp5sefPdLPbJsj06dLzc7GuAQi2EYberDEouLi+Xv76+ioiL5+fmZHQcmq7EbenHtIS3dnqkxN0Tonn4dmW0eAADACRmGoZ0Z5/TeriyVV1Tr8aFd9fCt0bK5ceAGTa+xeigFHm1WYXmlpq3cry+O5unBgV10R89QsyMBAACgiV2orNHqfaf1jwM5CvX10FMp3XV3QoSsVg7ioOlQ4B1EgYckfX26UI++t1clF6r12NCuSogMMDsSAAAAmtG3hRe08stT2p15Xj3CfPXMiDjdGhtidiw4KQq8gyjwbZthGPrLriy98PeD6tTOS1Nvj1WIr4fZsQAAAGCSo7klWr47S+k5JRoQHaRpw7ppQHSQ2bHgZCjwDqLAt13nyyr13EcHtPbrbN3RM1QTBkTxMXEAAACQYRjam1WgVXtPK/NcuW7uHKipt8cquWsQ8yOhUVDgHUSBb5vWp2Vr9poDqqi2a3JyZw2MCTY7EgAAAFoYwzCUmlWoD/ed1vG8MiVEBuhnt0brR73C5MI18rgOFHgHUeDblvzSCs1ec0D/OJCjmzsH6qfJXRTg5W52LAAAALRghmHoq9OF+vtX2TqUXayOgZ6anNxFY2/qKF+bm9nx0ApR4B1EgW8bKqvtem/nSS3YfFQypAcHdtaAaE6BAgAAQMNk5JXqHwdytCPjnDzdXPSTGyN0X2InxYXTJVB/FHgHUeCdm2EY2nQoV79Zf1hZ58s1pHt7jb0pUv6e/KUUAAAAjjtfVqlNh3L1+dGzKiivUnykv+7vH6WRfcLl7eFqdjy0cBR4B1HgnZNhGNp94rzmbzqqXSfOq0+Ev+7v30lRQd5mRwMAAIATqbbblXqyUP88kquvTxfJ5uailF6hGnNjRyXHBMmVSZJxBRR4B1HgnYthGNqSnqc/fHZMe08WqFM7L917c6QSIgM4XR4AAABNKq/korYeO6etx/L1beEFBfm4a1TfDhreO0w3d27HxHeoRYF3EAXeOVyorNHar7/Vkq0ndCSnRN1CfXR3fIRu6ERxBwAAQPMyDEMn8su09Vi+dp84r3NllWrn7a6UXqH6Ua8wJUUHyebmYnZMmIgC7yAKfOuWnlOi5btOanXqGZVUVCu+o7/uiu+guHA/ijsAAABMZzcMZeSVateJ8/oy87xyiytkc7VqQEyQbuvRXkNi26tTkJfZMdHMKPAOosC3PqfOl2t9WrbWfZ2tr88UKcDTTYO7h2ho9/YK9bOZHQ8AAAC4IsMwdLrggr46Xaj9pwp1JKdENXZDHQM9NTAmSANjgpUUE8TvtG0ABd5BFPiWzzAMHc4u0edH8/SPtO9Ku7uLVQmRARoYE6R+UYFMDgIAAIBWp7yyWgfPFOtgdrEOZxcr63y5JKlTOy/1iwrUjVGB6tcpUN3DfLl+3slQ4B1EgW+Zvi28oC8zz+uLo/n64ps85ZVUyMPVqviOAeof3U43dgrkuiEAAAA4laILVTr0bbGOni3RsdwSnThXrhq7IU83F/Xs4Kc+Ef7qE+Gv3hH+ig7xlhsHsVotCryDKPDmK6uo1pGcYn19ukh7TxZoz8kC5RRdlCRFBXmpT4S/4jsGqHuYL29SAAAAaDMqqmt0PK9MGXmlysgvU2Z+mbK//z3Z1WpRdIi3eoT5qXuYr2JCfBQT4q1OQV7ycOVAV0vXWD3UtREzOeyNN97QK6+8opycHMXHx+v1119XYmLiVbd///33NXv2bGVmZqpbt2767W9/qxEjRjRjYtTHhcoaZeSXKiOvTBl5ZTqaW6ID3xYp61y5DEmuLhbFBPvopqhAxYb6qlt7HwV4uZsdGwAAADCFh6uLeob7qWf4vwteWUW1Tp4v1+nz5TpVUK703BJtPpyrssoaSZLVInUM9FJUkJc6tfv3EhHoqXB/TwX7uDPZsxMx/Qj8ypUrNXHiRC1cuFD9+/fXggUL9P777ys9PV3t27e/bPvt27fr1ltv1bx583TnnXdq+fLl+u1vf6vU1FT17t37vz4eR+AbR43d0LnSCp0tqVBu8UXlFlfo28ILOl1QrtMFF3S64IJyii/Wbu/v6aaIAE91CvJS5yAvdWrnrY6BnhxhBwAAABrIMAwVXahSdtFFfVt0QdmFF3W25KLySiqUW1yhC1U1tdu6uVgU5mdThwBPtfezKcTHQ+39PBTi46F2Pu4K8nZXO293BXl7yNOdI/lNxWlOoe/fv79uvvlm/eEPf5Ak2e12RUZG6he/+IVmzJhx2fbjxo1TWVmZ1q5dW7tuwIABSkhI0MKFC//r41HgJbvd0MXqGl2orNGFqhpdrKpRWUWNyiqqVVpRrbLKapVcrFbxhSoVf/9vYXmVzpVV6HxZpQrKKlV4oUr2S35yrBapnbe7gn08apcwfw918P/uL38+thZxsgcAAADg1AzDUElFtfJLKnSurFLnSit1rqyi9nf4wvIqFZZX1h7Bv5SHq1X+nm7y93RTgJeb/D3d5WtzvWRxk7e7i7zcXeXt4Sovdxd5ubvI5uYiz+//tbla5fH9v0w8/W9OcQp9ZWWl9u7dq5kzZ9aus1qtGjZsmHbs2HHFfXbs2KHp06fXWZeSkqI1a9ZccfuKigpVVFTUfl1UVCTpu29gS/flifP63xWpKrl4+YvLTO6uVgV4uMrfy00BXu7y93SVn81N1tqZMmukqnLl5JcrJ7/A1KwAAABAW+cqKcQmhdhcpEAXSTZVVdtVUlGlkos1Kq2oUvGFapVXVCr/fJly7K1rmrQRvcP04pjeLXougB/65/UePze1wOfn56umpkahoaF11oeGhurIkSNX3CcnJ+eK2+fk5Fxx+3nz5umFF164bH1kZKSDqQEAAAAALcUiSYummJ2ifkpKSuTv7+/w/k5/XvPMmTPrHLG32+06f/68goKCmMyhmRQXFysyMlKnTp1qs5ctODPG13kxts6LsXVejK3zYmydF2PrvC4dW19fX5WUlKhDhw7XdZ+mFvjg4GC5uLgoNze3zvrc3FyFhYVdcZ+wsLAGbe/h4SEPD4866wICAhwPDYf5+fnxpuTEGF/nxdg6L8bWeTG2zouxdV6MrfP6YWyv58j7D0ydVcDd3V39+vXT5s2ba9fZ7XZt3rxZSUlJV9wnKSmpzvaStGnTpqtuDwAAAACAMzD9FPrp06dr0qRJuummm5SYmKgFCxaorKxMkydPliRNnDhRERERmjdvniRp6tSpGjx4sH73u99p5MiRWrFihfbs2aO33nrLzKcBAAAAAECTMr3Ajxs3Tnl5eXruueeUk5OjhIQEbdiwoXaiuqysLFmt/z5RYODAgVq+fLlmzZqlZ555Rt26ddOaNWvq9RnwMIeHh4fmzJlz2aUMcA6Mr/NibJ0XY+u8GFvnxdg6L8bWeTXF2Jr+OfAAAAAAAOC/M/UaeAAAAAAAUD8UeAAAAAAAWgEKPAAAAAAArQAFHgAAAACAVoACj0bxxhtvqHPnzrLZbOrfv792795dr/1WrFghi8Wiu+++u2kDwmENGdulS5fKYrHUWWw2WzOmRUM09HVbWFioxx9/XOHh4fLw8FBsbKzWr1/fTGnRUA0Z3yFDhlz22rVYLBo5cmQzJkZ9NPR1u2DBAnXv3l2enp6KjIzUk08+qYsXLzZTWjRUQ8a3qqpKc+fOVUxMjGw2m+Lj47Vhw4ZmTIv6+OKLLzRq1Ch16NBBFotFa9as+a/7bNmyRTfeeKM8PDzUtWtXLV26tMlzouEaOrbZ2dkaP368YmNjZbVaNW3aNIcelwKP67Zy5UpNnz5dc+bMUWpqquLj45WSkqKzZ89ec7/MzEw99dRTuuWWW5opKRrKkbH18/NTdnZ27XLy5MlmTIz6aujYVlZW6o477lBmZqY++OADpaena/HixYqIiGjm5KiPho7v6tWr67xuDxw4IBcXF91zzz3NnBzX0tBxXb58uWbMmKE5c+bo8OHDWrJkiVauXKlnnnmmmZOjPho6vrNmzdKiRYv0+uuv69ChQ3r00Uc1ZswY7du3r5mT41rKysoUHx+vN954o17bnzhxQiNHjtTQoUO1f/9+TZs2TVOmTNEnn3zSxEnRUA0d24qKCoWEhGjWrFmKj493/IEN4DolJiYajz/+eO3XNTU1RocOHYx58+ZddZ/q6mpj4MCBxttvv21MmjTJGD16dDMkRUM1dGzfffddw9/fv5nS4Xo0dGzffPNNIzo62qisrGyuiLgOjrwvX+rVV181fH19jdLS0qaKCAc0dFwff/xx47bbbquzbvr06UZycnKT5oRjGjq+4eHhxh/+8Ic6637yk58Y999/f5PmhOMkGR9++OE1t/nVr35l9OrVq866cePGGSkpKU2YDNerPmN7qcGDBxtTp0516LE4Ao/rUllZqb1792rYsGG166xWq4YNG6YdO3Zcdb+5c+eqffv2euihh5ojJhzg6NiWlpYqKipKkZGRGj16tA4ePNgccdEAjoztxx9/rKSkJD3++OMKDQ1V79699Zvf/EY1NTXNFRv15Ohr91JLlizRvffeK29v76aKiQZyZFwHDhyovXv31p6GnZGRofXr12vEiBHNkhn158j4VlRUXHaZmqenp7Zu3dqkWdG0duzYUefnQJJSUlLq/f4N50eBx3XJz89XTU2NQkND66wPDQ1VTk7OFffZunWrlixZosWLFzdHRDjIkbHt3r273nnnHX300Ud67733ZLfbNXDgQJ0+fbo5IqOeHBnbjIwMffDBB6qpqdH69es1e/Zs/e53v9NLL73UHJHRAI6M76V2796tAwcOaMqUKU0VEQ5wZFzHjx+vuXPnatCgQXJzc1NMTIyGDBnCKfQtkCPjm5KSovnz5+ubb76R3W7Xpk2bai+HQeuVk5NzxZ+D4uJiXbhwwaRUaEko8GhWJSUlmjBhghYvXqzg4GCz46CRJSUlaeLEiUpISNDgwYO1evVqhYSEaNGiRWZHw3Wy2+1q37693nrrLfXr10/jxo3Ts88+q4ULF5odDY1syZIl6tOnjxITE82Oguu0ZcsW/eY3v9Ef//hHpaamavXq1Vq3bp1efPFFs6OhEbz22mvq1q2bevToIXd3dz3xxBOaPHmyrFZ+vQecmavZAdC6BQcHy8XFRbm5uXXW5+bmKiws7LLtjx8/rszMTI0aNap2nd1ulyS5uroqPT1dMTExTRsa9dLQsb0SNzc33XDDDTp27FhTRISDHBnb8PBwubm5ycXFpXZdXFyccnJyVFlZKXd39ybNjPq7ntduWVmZVqxYoblz5zZlRDjAkXGdPXu2JkyYUHs2RZ8+fVRWVqZHHnlEzz77LEWvBXFkfENCQrRmzRpdvHhR586dU4cOHTRjxgxFR0c3R2Q0kbCwsCv+HPj5+cnT09OkVGhJeOfGdXF3d1e/fv20efPm2nV2u12bN29WUlLSZdv36NFDaWlp2r9/f+1y11131c60GRkZ2ZzxcQ0NHdsrqampUVpamsLDw5sqJhzgyNgmJyfr2LFjtX9wk6SjR48qPDyc8t7CXM9r9/3331dFRYUeeOCBpo6JBnJkXMvLyy8r6T/8Ee67OZfQUlzP69ZmsykiIkLV1dVatWqVRo8e3dRx0YSSkpLq/BxI0qZNm+r9uxfaAIemvgMusWLFCsPDw8NYunSpcejQIeORRx4xAgICjJycHMMwDGPChAnGjBkzrro/s9C3XA0d2xdeeMH45JNPjOPHjxt79+417r33XsNmsxkHDx406yngKho6tllZWYavr6/xxBNPGOnp6cbatWuN9u3bGy+99JJZTwHX4Oj78qBBg4xx48Y1d1zUU0PHdc6cOYavr6/x17/+1cjIyDA2btxoxMTEGGPHjjXrKeAaGjq+O3fuNFatWmUcP37c+OKLL4zbbrvN6NKli1FQUGDSM8CVlJSUGPv27TP27dtnSDLmz59v7Nu3zzh58qRhGIYxY8YMY8KECbXbZ2RkGF5eXsbTTz9tHD582HjjjTcMFxcXY8OGDWY9BVxFQ8fWMIza7fv162eMHz/e2LdvX4N/T6bAo1G8/vrrRqdOnQx3d3cjMTHR2LlzZ+1tgwcPNiZNmnTVfSnwLVtDxnbatGm124aGhhojRowwUlNTTUiN+mjo63b79u1G//79DQ8PDyM6Otp4+eWXjerq6mZOjfpq6PgeOXLEkGRs3LixmZOiIRoyrlVVVcbzzz9vxMTEGDabzYiMjDQee+wxCl4L1pDx3bJlixEXF2d4eHgYQUFBxoQJE4wzZ86YkBrX8tlnnxmSLlt+GMtJkyYZgwcPvmyfhIQEw93d3YiOjjbefffdZs+N/86Rsb3S9lFRUQ16XMv3dwQAAAAAAFowroEHAAAAAKAVoMADAAAAANAKUOABAAAAAGgFKPAAAAAAALQCFHgAAAAAAFoBCjwAAAAAAK0ABR4AAAAAgFaAAg8AAAAAQCtAgQcAoAUaMmSIpk2bZnYMAADQglgMwzDMDgEAAOo6f/683Nzc5Ovra3aUy2zZskVDhw5VQUGBAgICzI4DAECb4Wp2AAAAcLl27dqZHeGKqqqqzI4AAECbxSn0AAC0QJeeQt+5c2e99NJLmjhxonx8fBQVFaWPP/5YeXl5Gj16tHx8fNS3b1/t2bOndv+lS5cqICBAa9asUbdu3WSz2ZSSkqJTp07VeZw333xTMTExcnd3V/fu3fXnP/+5zu0Wi0Vvvvmm7rrrLnl7e+vhhx/W0KFDJUmBgYGyWCx68MEHJUkbNmzQoEGDFBAQoKCgIN155506fvx47X1lZmbKYrFo9erVGjp0qLy8vBQfH68dO3bUecxt27ZpyJAh8vLyUmBgoFJSUlRQUCBJstvtmjdvnrp06SJPT0/Fx8frgw8+aJTvOQAALR0FHgCAVuDVV19VcnKy9u3bp5EjR2rChAmaOHGiHnjgAaWmpiomJkYTJ07UpVfGlZeX6+WXX9ayZcu0bds2FRYW6t577629/cMPP9TUqVP1y1/+UgcOHNDPfvYzTZ48WZ999lmdx37++ec1ZswYpaWl6YUXXtCqVaskSenp6crOztZrr70mSSorK9P06dO1Z88ebd68WVarVWPGjJHdbq9zf88++6yeeuop7d+/X7GxsbrvvvtUXV0tSdq/f79uv/129ezZUzt27NDWrVs1atQo1dTUSJLmzZunZcuWaeHChTp48KCefPJJPfDAA/r8888b/5sOAEALwzXwAAC0QEOGDFFCQoIWLFigzp0765Zbbqk9Op6Tk6Pw8HDNnj1bc+fOlSTt3LlTSUlJys7OVlhYmJYuXarJkydr586d6t+/vyTpyJEjiouL065du5SYmKjk5GT16tVLb731Vu3jjh07VmVlZVq3bp2k747AT5s2Ta+++mrtNvW9Bj4/P18hISFKS0tT7969lZmZqS5duujtt9/WQw89JEk6dOiQevXqpcOHD6tHjx4aP368srKytHXr1svur6KiQu3atdOnn36qpKSk2vVTpkxReXm5li9f7uB3GwCA1oEj8AAAtAJ9+/at/X9oaKgkqU+fPpetO3v2bO06V1dX3XzzzbVf9+jRQwEBATp8+LAk6fDhw0pOTq7zOMnJybW3/+Cmm26qV8ZvvvlG9913n6Kjo+Xn56fOnTtLkrKysq76XMLDw+vk/uEI/JUcO3ZM5eXluuOOO+Tj41O7LFu2rM6p+gAAOCsmsQMAoBVwc3Or/b/FYrnquv88Xb0xeHt712u7UaNGKSoqSosXL1aHDh1kt9vVu3dvVVZW1tnuWrk9PT2vev+lpaWSpHXr1ikiIqLObR4eHvXKCABAa8YReAAAnFR1dXWdie3S09NVWFiouLg4SVJcXJy2bdtWZ59t27apZ8+e17xfd3d3Saq9Ll2Szp07p/T0dM2aNUu333674uLiaieea4i+fftq8+bNV7ytZ8+e8vDwUFZWlrp27VpniYyMbPBjAQDQ2nAEHgAAJ+Xm5qZf/OIX+v3vfy9XV1c98cQTGjBggBITEyVJTz/9tMaOHasbbrhBw4YN09///netXr1an3766TXvNyoqShaLRWvXrtWIESPk6empwMBABQUF6a233lJ4eLiysrI0Y8aMBmeeOXOm+vTpo8cee0yPPvqo3N3d9dlnn+mee+5RcHCwnnrqKT355JOy2+0aNGiQioqKtG3bNvn5+WnSpEkOfZ8AAGgtOAIPAICT8vLy0q9//WuNHz9eycnJ8vHx0cqVK2tvv/vuu/Xaa6/p//7v/9SrVy8tWrRI7777roYMGXLN+42IiNALL7ygGTNmKDQ0VE888YSsVqtWrFihvXv3qnfv3nryySf1yiuvNDhzbGysNm7cqK+++kqJiYlKSkrSRx99JFfX7445vPjii5o9e7bmzZunuLg4DR8+XOvWrVOXLl0a/FgAALQ2zEIPAIATWrp0qaZNm6bCwkKzowAAgEbCEXgAAAAAAFoBCjwAAAAAAK0Ap9ADAAAAANAKcAQeAAAAAIBWgAIPAAAAAEArQIEHAAAAAKAVoMADAAAAANAKUOABAAAAAGgFKPAAAAAAALQCFHgAAAAAAFoBCjwAAAAAAK3A/wMq0og9DqnOXQAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SGXbHFWGpf1W"
      },
      "source": [
        "#4.voting에 사용할 분류기 3개 결정"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rM9bnjr7bj78"
      },
      "source": [
        "과정 설명:\n",
        "\n",
        "-로지스틱,knn,결정트리 사용\n",
        "\n",
        ":결정트리의 과적합 문제=>결정트리 깊이 제한=>과적합 해결X\n",
        "\n",
        "-결론: 로지스틱.knn,svm사용\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#중요도 df\n",
        "df_keyword['중요도']\n",
        "\n",
        "# 0.7을 넘기면 1(키워드로 적합하다)로 하기로 함(레이블링)=>오류나면 0.7로 수정하기\n",
        "#0.7로 과적합 계속 생겨서 0.72로 하니까 존나 3개 다 과적핪ㅂ\n",
        "# labels 리스트 생성\n",
        "labels = [1 if importance > 0.7 else 0 for importance in df_keyword['중요도']]\n",
        "print(labels)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f39Q4dqFZ6TC",
        "outputId": "d8ffcf1c-419a-4cfc-f6ac-eaf79edd0171"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#데이터 분리(train, validation, test)\n",
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# 학습 데이터와 테스트 데이터로 분리\n",
        "X_train, X_temp, y_train, y_temp = train_test_split(df_keyword['중요도'].values.reshape(-1, 1),\n",
        "                                                    labels, test_size=0.2, random_state=42)\n",
        "\n",
        "# 나머지를 테스트 데이터와 검증 데이터로 분리\n",
        "X_validation, X_test, y_validation, y_test = train_test_split(X_temp, y_temp, test_size=0.5, random_state=42)\n",
        "\n",
        "# 결과 출력\n",
        "print(\"학습 데이터 크기:\", len(X_train))\n",
        "print(\"검증 데이터 크기:\", len(X_validation))\n",
        "print(\"테스트 데이터 크기:\", len(X_test))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JWcQ68XVmngr",
        "outputId": "ef979dba-dee5-4407-e2e0-771e61391480"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "학습 데이터 크기: 172\n",
            "검증 데이터 크기: 22\n",
            "테스트 데이터 크기: 22\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.ensemble import VotingClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "#분류기 3개 꺼내오기\n",
        "\n",
        "# KNN 분류기\n",
        "knn_classifier = KNeighborsClassifier(n_neighbors=3)\n",
        "\n",
        "# 결정 트리 분류기\n",
        "tree_classifier = DecisionTreeClassifier(random_state=42)\n",
        "\n",
        "# 로지스틱 회귀 분류기\n",
        "logistic_classifier = LogisticRegression()"
      ],
      "metadata": {
        "id": "MmbT63uknB8r"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 모델 학습\n",
        "knn_classifier.fit(X_train, y_train)\n",
        "tree_classifier.fit(X_train, y_train)\n",
        "logistic_classifier.fit(X_train, y_train)\n",
        "\n",
        "# 예측\n",
        "knn_predictions_validation = knn_classifier.predict(X_validation)\n",
        "tree_predictions_validation = tree_classifier.predict(X_validation)\n",
        "logistic_predictions_validation = logistic_classifier.predict(X_validation)\n",
        "\n",
        "# 정확도 계산\n",
        "accuracy_knn = accuracy_score(y_validation, knn_predictions_validation)\n",
        "accuracy_tree = accuracy_score(y_validation, tree_predictions_validation)\n",
        "accuracy_logistic = accuracy_score(y_validation, logistic_predictions_validation)\n",
        "\n",
        "# 시각화1(결정트리과적합)\n",
        "classifiers = ['KNN', 'Decision Tree', 'Logistic Regression']\n",
        "accuracies = [accuracy_knn, accuracy_tree, accuracy_logistic]\n",
        "\n",
        "plt.bar(classifiers, accuracies, color=['blue', 'green', 'red'])\n",
        "plt.xlabel('classifier')\n",
        "plt.ylabel('accuracy')\n",
        "plt.title('first try: overfitting')\n",
        "plt.ylim(0, 1)  # 정확도 범위 설정 (0~1)\n",
        "plt.show()\n",
        "\n",
        "#과적합이 있는 결정트리만 다시 학습 후 시도\n",
        "tree_classifier = DecisionTreeClassifier(max_depth=2, random_state=42)\n",
        "tree_classifier.fit(X_train, y_train)\n",
        "tree_predictions_validation = tree_classifier.predict(X_validation)\n",
        "accuracy_tree = accuracy_score(y_validation, tree_predictions_validation)\n",
        "\n",
        "# 시각화2(결정트리 과적합)\n",
        "classifiers = ['KNN', 'Decision Tree', 'Logistic Regression']\n",
        "accuracies = [accuracy_knn, accuracy_tree, accuracy_logistic]\n",
        "\n",
        "plt.bar(classifiers, accuracies, color=['blue', 'green', 'red'])\n",
        "plt.xlabel('classifier')\n",
        "plt.ylabel('accuracy')\n",
        "plt.title('second try: overfitting')\n",
        "plt.ylim(0, 1)  # 정확도 범위 설정 (0~1)\n",
        "plt.show()\n",
        "\n",
        "#과적합이 있는 결정트리만 다시 학습 후 시도\n",
        "tree_classifier = DecisionTreeClassifier(max_depth=1, random_state=42)\n",
        "tree_classifier.fit(X_train, y_train)\n",
        "tree_predictions_validation = tree_classifier.predict(X_validation)\n",
        "accuracy_tree = accuracy_score(y_validation, tree_predictions_validation)\n",
        "\n",
        "# 시각화3(결정트리 과적합)\n",
        "classifiers = ['KNN', 'Decision Tree', 'Logistic Regression']\n",
        "accuracies= [accuracy_knn, accuracy_tree, accuracy_logistic]\n",
        "\n",
        "plt.bar(classifiers, accuracies, color=['blue', 'green', 'red'])\n",
        "plt.xlabel('classifier')\n",
        "plt.ylabel('accuracy')\n",
        "plt.title('final try: overfitting')\n",
        "plt.ylim(0, 1)  # 정확도 범위 설정 (0~1)\n",
        "plt.show()\n",
        "\n",
        "print(\"결론: 결정트리의 정확도는 과적합 되어있다\\n=>새로운 분류기인 support vector machine사용\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "vL2pZnTErQU5",
        "outputId": "2a24e90d-ed7e-4f5f-94b5-29caab9b23ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "결론: 결정트리의 정확도는 과적합 되어있다\n",
            "=>새로운 분류기인 support vector machine사용\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "결정트리의 과적합을 개선하기 힘들것이라 판단\n",
        "\n",
        "=>새로운 분류기인 support vector machine사용"
      ],
      "metadata": {
        "id": "1b-zNLHluqUL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.svm import SVC\n",
        "\n",
        "# Support Vector Machine 모델\n",
        "svm_model = SVC(random_state=42,probability=True)\n",
        "svm_model.fit(X_train, y_train)\n",
        "svm_predictions = svm_model.predict(X_validation)\n",
        "accuracy_svm = accuracy_score(y_validation, svm_predictions)\n",
        "\n",
        "# 갱신된 accuracies 리스트\n",
        "classifiers = ['KNN', 'svm', 'Logistic Regression']\n",
        "accuracies = [accuracy_knn, accuracy_svm, accuracy_logistic]\n",
        "\n",
        "# 막대 그래프로 시각화\n",
        "plt.bar(classifiers, accuracies, color=['blue', 'purple', 'red'])\n",
        "plt.xlabel('Classifier')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.title('accuracy(validation)')\n",
        "plt.ylim(0, 1)  # 정확도 범위 설정 (0~1)\n",
        "for i, accuracy in enumerate(accuracies):\n",
        "    plt.text(i, accuracy+0.01 , f'{accuracy:.2f}', ha='center')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "pgvpGheDuzCL",
        "outputId": "c3bf7504-946a-411a-b5b0-295bb419c926"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 예측\n",
        "knn_predictions_test = knn_classifier.predict(X_test)\n",
        "svm_predictions_test = svm_model.predict(X_test)\n",
        "logistic_predictions_test = logistic_classifier.predict(X_test)\n",
        "\n",
        "# 정확도 계산\n",
        "accuracy_knn = accuracy_score(y_test, knn_predictions_test)\n",
        "accuracy_svc = accuracy_score(y_test, svm_predictions_test)\n",
        "accuracy_logistic = accuracy_score(y_test, logistic_predictions_test)\n",
        "\n",
        "# 막대 그래프로 시각화\n",
        "plt.bar(classifiers, accuracies, color=['blue', 'purple', 'red'])\n",
        "plt.xlabel('Classifier')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.title('accuracy(test data)')\n",
        "plt.ylim(0, 1)  # 정확도 범위 설정 (0~1)\n",
        "for i, accuracy in enumerate(accuracies):\n",
        "    plt.text(i, accuracy + 0.01, f'{accuracy:.2f}', ha='center')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "ThUMmMGD2GsS",
        "outputId": "6a6f7b22-44b4-4737-e08d-afc02c374440"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 각 분류기에 대한 MSE 계산\n",
        "mse_knn = mean_squared_error(y_test, knn_predictions_test)\n",
        "mse_svm = mean_squared_error(y_test, svm_predictions_test)\n",
        "mse_logistic = mean_squared_error(y_test, logistic_predictions_test)\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "# df만들기\n",
        "mse_data = {\n",
        "    'Classifier': ['KNN', 'SVM', 'Logistic Regression'],\n",
        "    'MSE': [mse_knn, mse_svm, mse_logistic]\n",
        "}\n",
        "mse_df = pd.DataFrame(mse_data)\n",
        "\n",
        "# Styling function to highlight the minimum MSE value\n",
        "def highlight_min(s):\n",
        "    is_min = s == s.min()\n",
        "    return ['background-color: yellow' if v else '' for v in is_min]\n",
        "\n",
        "# Apply styling to the MSE DataFrame\n",
        "styled_mse_df = mse_df.style.apply(highlight_min, subset=['MSE'])\n",
        "\n",
        "# Display the styled DataFrame\n",
        "print(\"Mean Squared Errors:\")\n",
        "styled_mse_df\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 161
        },
        "id": "XHtTC-6Fw0Tw",
        "outputId": "7530b8c1-e0c0-4efe-af4c-f4befbe8e533"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Squared Errors:\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7c840ba11030>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_0b3b7_row0_col1, #T_0b3b7_row1_col1 {\n",
              "  background-color: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_0b3b7\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_0b3b7_level0_col0\" class=\"col_heading level0 col0\" >Classifier</th>\n",
              "      <th id=\"T_0b3b7_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_0b3b7_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_0b3b7_row0_col0\" class=\"data row0 col0\" >KNN</td>\n",
              "      <td id=\"T_0b3b7_row0_col1\" class=\"data row0 col1\" >0.045455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0b3b7_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_0b3b7_row1_col0\" class=\"data row1 col0\" >SVM</td>\n",
              "      <td id=\"T_0b3b7_row1_col1\" class=\"data row1 col1\" >0.045455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_0b3b7_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_0b3b7_row2_col0\" class=\"data row2 col0\" >Logistic Regression</td>\n",
              "      <td id=\"T_0b3b7_row2_col1\" class=\"data row2 col1\" >0.272727</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import precision_score, recall_score, f1_score\n",
        "\n",
        "# 정밀도 계산\n",
        "precision_knn = precision_score(y_test, knn_predictions_test)\n",
        "precision_svm = precision_score(y_test, svm_predictions_test)\n",
        "precision_logistic = precision_score(y_test, logistic_predictions_test)\n",
        "\n",
        "# 재현율 계산\n",
        "recall_knn = recall_score(y_test, knn_predictions_test)\n",
        "recall_svm = recall_score(y_test, svm_predictions_test)\n",
        "recall_logistic = recall_score(y_test, logistic_predictions_test)\n",
        "\n",
        "# F1 스코어 계산\n",
        "f1_knn = f1_score(y_test, knn_predictions_test)\n",
        "f1_svm = f1_score(y_test, svm_predictions_test)\n",
        "f1_logistic = f1_score(y_test, logistic_predictions_test)\n",
        "\n",
        "#df로 출력\n",
        "metrics_data = {\n",
        "    'Classifier': ['KNN', 'SVM', 'Logistic Regression'],\n",
        "    'Precision': [precision_knn, precision_svm, precision_logistic],\n",
        "    'Recall': [recall_knn, recall_svm, recall_logistic],\n",
        "    'F1 Score': [f1_knn, f1_svm, f1_logistic]\n",
        "}\n",
        "metrics_df = pd.DataFrame(metrics_data)\n",
        "print(metrics_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rv1W8vl8Stvq",
        "outputId": "5e707018-6d75-4057-e8fa-13036865d90b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            Classifier  Precision    Recall  F1 Score\n",
            "0                  KNN   1.000000  0.857143  0.923077\n",
            "1                  SVM   0.875000  1.000000  0.933333\n",
            "2  Logistic Regression   0.538462  1.000000  0.700000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#시각화\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 분류기 이름\n",
        "classifiers = ['KNN', 'SVM', 'Logistic Regression']\n",
        "\n",
        "# 각 분류기에 대한 정밀도, 재현율, F1 스코어 값 리스트\n",
        "precision_scores = [precision_knn, precision_svm, precision_logistic]\n",
        "recall_scores = [recall_knn, recall_svm, recall_logistic]\n",
        "f1_scores = [f1_knn, f1_svm, f1_logistic]\n",
        "\n",
        "# 그래프 설정\n",
        "bar_width = 0.2\n",
        "index = range(len(classifiers))\n",
        "\n",
        "# 정밀도, 재현율, F1 스코어 막대 그래프 그리기\n",
        "plt.bar(index, precision_scores, width=bar_width, label='Precision', color='blue')\n",
        "plt.bar([i + bar_width for i in index], recall_scores, width=bar_width, label='Recall', color='green')\n",
        "plt.bar([i + 2 * bar_width for i in index], f1_scores, width=bar_width, label='F1 Score', color='red')\n",
        "\n",
        "# X 축 설정\n",
        "plt.xlabel('Classifier')\n",
        "plt.xticks([i + bar_width for i in index], classifiers)\n",
        "\n",
        "# Y 축 설정\n",
        "plt.ylabel('Score')\n",
        "plt.title('Classifier Performance Scores on the Test Set')\n",
        "\n",
        "# 범례 추가\n",
        "plt.legend()\n",
        "\n",
        "# 그래프 출력\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "lk30kdtaTBAN",
        "outputId": "687d2467-dc6a-40dd-8259-080bc480950a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "knn은 높은 정확도를 가지되 비교적 낮은 재현율을 가진다\n",
        "\n",
        "svm의 경우에는 knn과 반대의 양상을 가진다. 높은 재현율을 가지고 있으나 비교적 낮은 재현율을 가지고 있으며 로지스틱도 마찬가지 이다.\n",
        "\n",
        "서로 상보적으로 재현율과 정확도를 채워줌으로써 soft voting의 경우 상당히 높은 분류 성능 지표를 가진다.(hard voting도 마찬가지이다)"
      ],
      "metadata": {
        "id": "4MIJmr4BYyce"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#나이브 베이즈 (Naive Bayes):\n",
        "#특징: 베이즈 이론을 기반으로 한 확률적 분류기.\n",
        "#사용 방법: 텍스트 분류, 스팸 필터링 등에 적합하며, 간단한 가정에 기반하여 빠르게 학습 가능.\n",
        "'''\n",
        "logistic_classifier = LogisticRegression()\n",
        "logistic_classifier.fit(X_train, y_train)\n",
        "logistic_predictions_validation = logistic_classifier.predict(X_validation)\n",
        "accuracy_logistic = accuracy_score(y_validation, logistic_predictions_validation)\n",
        "logistic_predictions_test = logistic_classifier.predict(X_test)\n",
        "accuracy_logistic = accuracy_score(y_test, logistic_predictions_test)\n",
        "mse_logistic = mean_squared_error(y_test, logistic_predictions_test)\n",
        "precision_logistic = precision_score(y_test, logistic_predictions_test)\n",
        "recall_logistic = recall_score(y_test, logistic_predictions_test)\n",
        "f1_logistic = f1_score(y_test, logistic_predictions_test)\n",
        "'''"
      ],
      "metadata": {
        "id": "E-vubu4DzEMo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 161
        },
        "outputId": "d3c91f7f-553a-410d-e29c-3d5f6fc05e5c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'\\nlogistic_classifier = LogisticRegression()\\nlogistic_classifier.fit(X_train, y_train)\\nlogistic_predictions_validation = logistic_classifier.predict(X_validation)\\naccuracy_logistic = accuracy_score(y_validation, logistic_predictions_validation)\\nlogistic_predictions_test = logistic_classifier.predict(X_test)\\naccuracy_logistic = accuracy_score(y_test, logistic_predictions_test)\\nmse_logistic = mean_squared_error(y_test, logistic_predictions_test)\\nprecision_logistic = precision_score(y_test, logistic_predictions_test)\\nrecall_logistic = recall_score(y_test, logistic_predictions_test)\\nf1_logistic = f1_score(y_test, logistic_predictions_test)\\n'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.naive_bayes import MultinomialNB\n",
        "from sklearn.metrics import accuracy_score, mean_squared_error, precision_score, recall_score, f1_score\n",
        "\n",
        "# 나이브 베이즈 분류기 생성\n",
        "naive_bayes_classifier = MultinomialNB()\n",
        "\n",
        "# 훈련 데이터로 모델 훈련\n",
        "naive_bayes_classifier.fit(X_train, y_train)\n",
        "\n",
        "# 검증 데이터에 대한 예측 및 성능 평가\n",
        "naive_bayes_predictions_validation = naive_bayes_classifier.predict(X_validation)\n",
        "accuracy_naive_bayes_validation = accuracy_score(y_validation, naive_bayes_predictions_validation)\n",
        "\n",
        "# 테스트 데이터에 대한 예측 및 성능 평가\n",
        "naive_bayes_predictions_test = naive_bayes_classifier.predict(X_test)\n",
        "accuracy_naive_bayes_test = accuracy_score(y_test, naive_bayes_predictions_test)\n",
        "mse_naive_bayes = mean_squared_error(y_test, naive_bayes_predictions_test)\n",
        "precision_naive_bayes = precision_score(y_test, naive_bayes_predictions_test)\n",
        "recall_naive_bayes = recall_score(y_test, naive_bayes_predictions_test)\n",
        "f1_naive_bayes = f1_score(y_test, naive_bayes_predictions_test)\n",
        "\n",
        "# 성능 지표 출력\n",
        "print(\"Validation Accuracy (Naive Bayes):\", accuracy_naive_bayes_validation)\n",
        "print(\"Test Accuracy (Naive Bayes):\", accuracy_naive_bayes_test)\n",
        "print(\"Mean Squared Error (Naive Bayes):\", mse_naive_bayes)\n",
        "print(\"Precision (Naive Bayes):\", precision_naive_bayes)\n",
        "print(\"Recall (Naive Bayes):\", recall_naive_bayes)\n",
        "print(\"F1 Score (Naive Bayes):\", f1_naive_bayes)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u43pgsWAalk7",
        "outputId": "5022f45d-748f-4e49-a7f4-7703e90f773d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Validation Accuracy (Naive Bayes): 0.6818181818181818\n",
            "Test Accuracy (Naive Bayes): 0.3181818181818182\n",
            "Mean Squared Error (Naive Bayes): 0.6818181818181818\n",
            "Precision (Naive Bayes): 0.3181818181818182\n",
            "Recall (Naive Bayes): 1.0\n",
            "F1 Score (Naive Bayes): 0.4827586206896552\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import GradientBoostingClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# Gradient Boosting 분류기 생성\n",
        "gradient_boosting_classifier = GradientBoostingClassifier()\n",
        "\n",
        "# 훈련 데이터로 모델 훈련\n",
        "gradient_boosting_classifier.fit(X_train, y_train)\n",
        "\n",
        "# 검증 데이터에 대한 예측 및 성능 평가\n",
        "gradient_boosting_predictions_validation = gradient_boosting_classifier.predict(X_validation)\n",
        "\n",
        "# 테스트 데이터에 대한 예측 및 성능 평가\n",
        "gradient_boosting_predictions_test = gradient_boosting_classifier.predict(X_test)\n",
        "\n",
        "# 성능 지표 출력\n",
        "print(\"Validation Accuracy (Gradient Boosting):\", accuracy_score(y_validation, gradient_boosting_predictions_validation))\n",
        "print(\"Test Accuracy (Gradient Boosting):\", accuracy_score(y_test, gradient_boosting_predictions_test))"
      ],
      "metadata": {
        "id": "1c9Emk8-bIn5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1f2e910c-0fad-4e62-f824-4b0db9a0311f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Validation Accuracy (Gradient Boosting): 1.0\n",
            "Test Accuracy (Gradient Boosting): 1.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "shap결과 해석\n"
      ],
      "metadata": {
        "id": "ImrW_tk70WoR"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "u3s-YJhapp5U"
      },
      "source": [
        "# 5.softvoting(with 3different classifier)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ka-_jigihxHJ"
      },
      "source": [
        "**softvoting**(classifier:logistic+knn+desicion tree)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**분류기:**\n",
        "\n",
        " KNN 분류기\n",
        "\n",
        "knn_classifier = KNeighborsClassifier(n_neighbors=3)\n",
        "\n",
        "로지스틱 회귀 분류기\n",
        "\n",
        "logistic_classifier = LogisticRegression()\n",
        "\n",
        "SVM\n",
        "\n",
        "svm_model = SVC(random_state=42)"
      ],
      "metadata": {
        "id": "IzBpFfIEWsBD"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "v842OMsQl4-M"
      },
      "outputs": [],
      "source": [
        "# Voting Classifier1:soft\n",
        "voting_classifier1 = VotingClassifier(\n",
        "    estimators=[\n",
        "        ('knn', knn_classifier),       # KNeighborsClassifier\n",
        "        ('svm', svm_model),      # DecisionTreeClassifier\n",
        "        ('logistic',logistic_classifier )   # LogisticRegression\n",
        "    ],\n",
        "    voting='soft',  # Soft Voting 설정\n",
        "    weights=[1, 1, 1]  # 각 분류기에 가중치 부여\n",
        ")\n",
        "# Fit the VotingClassifier\n",
        "voting_classifier1.fit(X_train, y_train)\n",
        "\n",
        "# 각 분류기의 예측 확률\n",
        "knn_predictions_proba = knn_classifier.predict_proba(X_test)\n",
        "svm_predictions_proba = svm_model.predict_proba(X_test)\n",
        "logistic_predictions_proba = logistic_classifier.predict_proba(X_test)\n",
        "\n",
        "# Soft Voting의 결과를 가져옵니다.\n",
        "soft_voting_predictions_proba = voting_classifier1.predict_proba(X_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rwcp7sZ3mqZ1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 759
        },
        "outputId": "30c6ca2b-106c-4d49-f973-bea37d1d9098"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    KNeighborsClassifier_0  KNeighborsClassifier_1  SupportVectorMachine_0  \\\n",
              "0                 0.000000                1.000000                0.023509   \n",
              "1                 0.000000                1.000000                0.000005   \n",
              "2                 1.000000                0.000000                0.938291   \n",
              "3                 1.000000                0.000000                0.999733   \n",
              "4                 1.000000                0.000000                0.999778   \n",
              "5                 1.000000                0.000000                0.984933   \n",
              "6                 0.666667                0.333333                0.445032   \n",
              "7                 1.000000                0.000000                0.589490   \n",
              "8                 1.000000                0.000000                0.999768   \n",
              "9                 0.000000                1.000000                0.038656   \n",
              "10                1.000000                0.000000                0.999557   \n",
              "11                1.000000                0.000000                0.995838   \n",
              "12                1.000000                0.000000                0.998743   \n",
              "13                0.000000                1.000000                0.002963   \n",
              "14                1.000000                0.000000                0.999124   \n",
              "15                0.000000                1.000000                0.110337   \n",
              "16                1.000000                0.000000                0.999163   \n",
              "17                1.000000                0.000000                0.999597   \n",
              "18                0.000000                1.000000                0.015182   \n",
              "19                1.000000                0.000000                0.999527   \n",
              "20                1.000000                0.000000                0.996241   \n",
              "21                1.000000                0.000000                0.975149   \n",
              "\n",
              "    SupportVectorMachine_1  LogisticRegression_0  LogisticRegression_1  \\\n",
              "0                 0.976491              0.221148              0.778852   \n",
              "1                 0.999995              0.287507              0.712493   \n",
              "2                 0.061709              0.424085              0.575915   \n",
              "3                 0.000267              0.492533              0.507467   \n",
              "4                 0.000222              0.524534              0.475466   \n",
              "5                 0.015067              0.690769              0.309231   \n",
              "6                 0.554968              0.400995              0.599005   \n",
              "7                 0.410510              0.405433              0.594567   \n",
              "8                 0.000232              0.498680              0.501320   \n",
              "9                 0.961344              0.202179              0.797821   \n",
              "10                0.000443              0.554438              0.445562   \n",
              "11                0.004162              0.631064              0.368936   \n",
              "12                0.001257              0.462248              0.537752   \n",
              "13                0.997037              0.350226              0.649774   \n",
              "14                0.000876              0.575714              0.424286   \n",
              "15                0.889663              0.154182              0.845818   \n",
              "16                0.000837              0.574337              0.425663   \n",
              "17                0.000403              0.551271              0.448729   \n",
              "18                0.984818              0.233382              0.766618   \n",
              "19                0.000473              0.556588              0.443412   \n",
              "20                0.003759              0.626640              0.373360   \n",
              "21                0.024851              0.431736              0.568264   \n",
              "\n",
              "    SoftVotingClassifier_0  SoftVotingClassifier_1  \n",
              "0                 0.081552                0.918448  \n",
              "1                 0.095837                0.904163  \n",
              "2                 0.787459                0.212541  \n",
              "3                 0.830755                0.169245  \n",
              "4                 0.841437                0.158563  \n",
              "5                 0.891901                0.108099  \n",
              "6                 0.504231                0.495769  \n",
              "7                 0.664974                0.335026  \n",
              "8                 0.832816                0.167184  \n",
              "9                 0.080278                0.919722  \n",
              "10                0.851332                0.148668  \n",
              "11                0.875634                0.124366  \n",
              "12                0.820330                0.179670  \n",
              "13                0.117730                0.882270  \n",
              "14                0.858279                0.141721  \n",
              "15                0.088173                0.911827  \n",
              "16                0.857833                0.142167  \n",
              "17                0.850290                0.149710  \n",
              "18                0.082855                0.917145  \n",
              "19                0.852039                0.147961  \n",
              "20                0.874294                0.125706  \n",
              "21                0.802295                0.197705  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f86f156d-e14a-4e16-b1d1-b7c08390c731\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>KNeighborsClassifier_0</th>\n",
              "      <th>KNeighborsClassifier_1</th>\n",
              "      <th>SupportVectorMachine_0</th>\n",
              "      <th>SupportVectorMachine_1</th>\n",
              "      <th>LogisticRegression_0</th>\n",
              "      <th>LogisticRegression_1</th>\n",
              "      <th>SoftVotingClassifier_0</th>\n",
              "      <th>SoftVotingClassifier_1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.023509</td>\n",
              "      <td>0.976491</td>\n",
              "      <td>0.221148</td>\n",
              "      <td>0.778852</td>\n",
              "      <td>0.081552</td>\n",
              "      <td>0.918448</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000005</td>\n",
              "      <td>0.999995</td>\n",
              "      <td>0.287507</td>\n",
              "      <td>0.712493</td>\n",
              "      <td>0.095837</td>\n",
              "      <td>0.904163</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.938291</td>\n",
              "      <td>0.061709</td>\n",
              "      <td>0.424085</td>\n",
              "      <td>0.575915</td>\n",
              "      <td>0.787459</td>\n",
              "      <td>0.212541</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.999733</td>\n",
              "      <td>0.000267</td>\n",
              "      <td>0.492533</td>\n",
              "      <td>0.507467</td>\n",
              "      <td>0.830755</td>\n",
              "      <td>0.169245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.999778</td>\n",
              "      <td>0.000222</td>\n",
              "      <td>0.524534</td>\n",
              "      <td>0.475466</td>\n",
              "      <td>0.841437</td>\n",
              "      <td>0.158563</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.984933</td>\n",
              "      <td>0.015067</td>\n",
              "      <td>0.690769</td>\n",
              "      <td>0.309231</td>\n",
              "      <td>0.891901</td>\n",
              "      <td>0.108099</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.666667</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>0.445032</td>\n",
              "      <td>0.554968</td>\n",
              "      <td>0.400995</td>\n",
              "      <td>0.599005</td>\n",
              "      <td>0.504231</td>\n",
              "      <td>0.495769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.589490</td>\n",
              "      <td>0.410510</td>\n",
              "      <td>0.405433</td>\n",
              "      <td>0.594567</td>\n",
              "      <td>0.664974</td>\n",
              "      <td>0.335026</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.999768</td>\n",
              "      <td>0.000232</td>\n",
              "      <td>0.498680</td>\n",
              "      <td>0.501320</td>\n",
              "      <td>0.832816</td>\n",
              "      <td>0.167184</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.038656</td>\n",
              "      <td>0.961344</td>\n",
              "      <td>0.202179</td>\n",
              "      <td>0.797821</td>\n",
              "      <td>0.080278</td>\n",
              "      <td>0.919722</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.999557</td>\n",
              "      <td>0.000443</td>\n",
              "      <td>0.554438</td>\n",
              "      <td>0.445562</td>\n",
              "      <td>0.851332</td>\n",
              "      <td>0.148668</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.995838</td>\n",
              "      <td>0.004162</td>\n",
              "      <td>0.631064</td>\n",
              "      <td>0.368936</td>\n",
              "      <td>0.875634</td>\n",
              "      <td>0.124366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.998743</td>\n",
              "      <td>0.001257</td>\n",
              "      <td>0.462248</td>\n",
              "      <td>0.537752</td>\n",
              "      <td>0.820330</td>\n",
              "      <td>0.179670</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.002963</td>\n",
              "      <td>0.997037</td>\n",
              "      <td>0.350226</td>\n",
              "      <td>0.649774</td>\n",
              "      <td>0.117730</td>\n",
              "      <td>0.882270</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.999124</td>\n",
              "      <td>0.000876</td>\n",
              "      <td>0.575714</td>\n",
              "      <td>0.424286</td>\n",
              "      <td>0.858279</td>\n",
              "      <td>0.141721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.110337</td>\n",
              "      <td>0.889663</td>\n",
              "      <td>0.154182</td>\n",
              "      <td>0.845818</td>\n",
              "      <td>0.088173</td>\n",
              "      <td>0.911827</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.999163</td>\n",
              "      <td>0.000837</td>\n",
              "      <td>0.574337</td>\n",
              "      <td>0.425663</td>\n",
              "      <td>0.857833</td>\n",
              "      <td>0.142167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.999597</td>\n",
              "      <td>0.000403</td>\n",
              "      <td>0.551271</td>\n",
              "      <td>0.448729</td>\n",
              "      <td>0.850290</td>\n",
              "      <td>0.149710</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.015182</td>\n",
              "      <td>0.984818</td>\n",
              "      <td>0.233382</td>\n",
              "      <td>0.766618</td>\n",
              "      <td>0.082855</td>\n",
              "      <td>0.917145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.999527</td>\n",
              "      <td>0.000473</td>\n",
              "      <td>0.556588</td>\n",
              "      <td>0.443412</td>\n",
              "      <td>0.852039</td>\n",
              "      <td>0.147961</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.996241</td>\n",
              "      <td>0.003759</td>\n",
              "      <td>0.626640</td>\n",
              "      <td>0.373360</td>\n",
              "      <td>0.874294</td>\n",
              "      <td>0.125706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.975149</td>\n",
              "      <td>0.024851</td>\n",
              "      <td>0.431736</td>\n",
              "      <td>0.568264</td>\n",
              "      <td>0.802295</td>\n",
              "      <td>0.197705</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f86f156d-e14a-4e16-b1d1-b7c08390c731')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f86f156d-e14a-4e16-b1d1-b7c08390c731 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f86f156d-e14a-4e16-b1d1-b7c08390c731');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-06656e87-1857-4550-927a-ff484476a8c2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06656e87-1857-4550-927a-ff484476a8c2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-06656e87-1857-4550-927a-ff484476a8c2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "\n",
        "#각 분류기의 예측 확률을 데이터프레임으로 변환\n",
        "knn_proba_df = pd.DataFrame(knn_predictions_proba, columns=['KNeighborsClassifier_0', 'KNeighborsClassifier_1'])\n",
        "svm_proba_df = pd.DataFrame(svm_predictions_proba, columns=['SupportVectorMachine_0', 'SupportVectorMachine_1'])\n",
        "logistic_proba_df = pd.DataFrame(logistic_predictions_proba, columns=['LogisticRegression_0', 'LogisticRegression_1'])\n",
        "voting_proba_df = pd.DataFrame(soft_voting_predictions_proba, columns=['SoftVotingClassifier_0', 'SoftVotingClassifier_1'])\n",
        "\n",
        "# 예측 확률 데이터프레임을 수평으로 결합\n",
        "combined_proba_df = pd.concat([knn_proba_df, svm_proba_df, logistic_proba_df, voting_proba_df], axis=1)\n",
        "\n",
        "# 결과 출력\n",
        "display(combined_proba_df)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Set up the matplotlib figure\n",
        "plt.figure(figsize=(12, 8))\n",
        "\n",
        "# Plotting the heatmap\n",
        "sns.heatmap(combined_proba_df, annot=True, cmap='viridis', fmt=\".3f\", linewidths=.5)\n",
        "\n",
        "# Adding labels and title\n",
        "plt.xlabel('Classes')\n",
        "plt.ylabel('Samples')\n",
        "plt.title('Predicted Probabilities')\n",
        "\n",
        "# Show the plot\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 628
        },
        "id": "pvRl0GIHaFBF",
        "outputId": "c00c8b7f-affe-45bf-c34a-d8ae112343eb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "결론\n",
        "\n",
        "\n",
        "knn_classifier = KNeighborsClassifier(n_neighbors=3)\n",
        "\n",
        "\n",
        "\n",
        "logistic_classifier = LogisticRegression()\n",
        "\n",
        "SVM\n",
        "\n",
        "svm_model = SVC(random_state=42)\n",
        "\n",
        "(1)KNN 분류기\n",
        "0또는 1이(true&false) 될 확률을 1.0 또는 0으로 판단 0과 1(true&false)을 예측하는 확률이 매우 극단적이라 판단\n",
        "\n",
        "(2)SVM(support vector machine)\n",
        "knn과 유사한 극단적 확률 예측값을 가짐. 몇몇개의 데이터에 한해서 균형된 예측값을 가짐\n",
        "\n",
        "(3)로지스틱 회귀 분류기\n",
        "위의 2가지의 분류기 보다 균형된 확률 예측값을 가짐\n",
        "\n",
        "(4)soft voting\n",
        "로지스틱의 대부분의 데이터가 0.5에서 많이 벗어나지 않는 확률 값을 가지는 한계를 극복함\n"
      ],
      "metadata": {
        "id": "YAK6wYVLbchB"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mmSAJ6wsp1V1"
      },
      "source": [
        "#etc: 시각자료(히트맵, 그래프),mse 등,성능평가"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "BN1wpA4enxbf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "4ef49097-a425-4456-afdc-94329baf3d95"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"39a3c2af-397d-4e09-b86f-da0d6a63e454\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"39a3c2af-397d-4e09-b86f-da0d6a63e454\")) {                    Plotly.newPlot(                        \"39a3c2af-397d-4e09-b86f-da0d6a63e454\",                        [{\"mode\":\"lines+markers\",\"name\":\"KNeighborsClassifier - Class 1 Probability\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"y\":[1.0,1.0,0.0,0.0,0.0,0.0,0.3333333333333333,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"KNeighborsClassifier Predicted Probabilities\"},\"xaxis\":{\"title\":{\"text\":\"test Index\"}},\"yaxis\":{\"title\":{\"text\":\"Probability\"}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('39a3c2af-397d-4e09-b86f-da0d6a63e454');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"e423a244-4cde-4e41-b4f2-acb24d48b16a\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e423a244-4cde-4e41-b4f2-acb24d48b16a\")) {                    Plotly.newPlot(                        \"e423a244-4cde-4e41-b4f2-acb24d48b16a\",                        [{\"mode\":\"lines+markers\",\"name\":\"SupportVectorClassifier - Class 1 Probability\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"y\":[0.9764911635938041,0.9999952474025195,0.06170879338388589,0.00026708202874785433,0.00022248793346443826,0.015067201979520922,0.5549684732412048,0.41051009354727414,0.00023249887693277684,0.9613436190541158,0.00044261688679906973,0.004161742426783115,0.0012565658162296575,0.997036878150965,0.0008759721971828535,0.889662576675289,0.0008373862447553584,0.0004027258703036288,0.9848181667930257,0.00047273593640735563,0.0037591410607692175,0.024851107653684094],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"SupportVectorClassifier Predicted Probabilities\"},\"xaxis\":{\"title\":{\"text\":\"test Index\"}},\"yaxis\":{\"title\":{\"text\":\"Probability\"}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('e423a244-4cde-4e41-b4f2-acb24d48b16a');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"313870c3-6384-4821-9f33-906352d16656\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"313870c3-6384-4821-9f33-906352d16656\")) {                    Plotly.newPlot(                        \"313870c3-6384-4821-9f33-906352d16656\",                        [{\"mode\":\"lines+markers\",\"name\":\"LogisticRegression - Class 1 Probability\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"y\":[0.7788522273450386,0.7124925054477863,0.5759148633148907,0.5074671504210496,0.4754657651327083,0.3092309748712949,0.5990052607500237,0.5945669563423488,0.5013195439533326,0.7978210510554745,0.4455623276677156,0.3689359145239222,0.5377522514431423,0.6497737073696356,0.4242858610695964,0.8458179326395634,0.4256630900895456,0.4487287001892991,0.7666178268102176,0.4434116995475139,0.37336034398455425,0.5682641631726317],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"LogisticRegression Predicted Probabilities\"},\"xaxis\":{\"title\":{\"text\":\"test Index\"}},\"yaxis\":{\"title\":{\"text\":\"Probability\"}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('313870c3-6384-4821-9f33-906352d16656');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"c18db6fe-2310-46c1-bbc2-a250d20e38d2\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c18db6fe-2310-46c1-bbc2-a250d20e38d2\")) {                    Plotly.newPlot(                        \"c18db6fe-2310-46c1-bbc2-a250d20e38d2\",                        [{\"mode\":\"lines+markers\",\"name\":\"SoftVotingClassifier - Class 1 Probability\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"y\":[0.9184477969796142,0.9041625842834353,0.2125412188995922,0.16924474414993249,0.15856275102205758,0.10809939228360528,0.4957690224415206,0.335025683296541,0.1671840142767551,0.9197215567031968,0.1486683148515049,0.12436588565023511,0.179669605753124,0.8822701951735334,0.14172061108892642,0.9118268364382841,0.142166825444767,0.14971047535320092,0.9171453312010812,0.14796147849464042,0.12570649501510783,0.19770509027543862],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"SoftVotingClassifier Predicted Probabilities\"},\"xaxis\":{\"title\":{\"text\":\"test Index\"}},\"yaxis\":{\"title\":{\"text\":\"Probability\"}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('c18db6fe-2310-46c1-bbc2-a250d20e38d2');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "#anntation(plotly)\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "def plot_probabilities_plotly(probabilities, classifier_name):\n",
        "    fig = go.Figure()\n",
        "\n",
        "    fig.add_trace(go.Scatter(x=list(range(len(probabilities))),\n",
        "                             y=probabilities[:, 1],\n",
        "                             mode='lines+markers',\n",
        "                             name=f'{classifier_name} - Class 1 Probability'))\n",
        "\n",
        "    fig.update_layout(title=f'{classifier_name} Predicted Probabilities',\n",
        "                      xaxis_title='test Index',\n",
        "                      yaxis_title='Probability')\n",
        "\n",
        "    fig.show()\n",
        "\n",
        "# 각 분류기의 예측 확률을 plotly로 시각화\n",
        "plot_probabilities_plotly(knn_predictions_proba, 'KNeighborsClassifier')\n",
        "plot_probabilities_plotly(svm_predictions_proba, 'SupportVectorClassifier')\n",
        "plot_probabilities_plotly(logistic_predictions_proba, 'LogisticRegression')\n",
        "plot_probabilities_plotly(soft_voting_predictions_proba, 'SoftVotingClassifier')\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import plotly.express as px\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "# 각 분류기의 예측 확률을 데이터프레임으로 변환\n",
        "proba_df = pd.DataFrame({\n",
        "    'KNN': knn_predictions_proba[:, 1],\n",
        "    'SVM': svm_predictions_proba[:, 1],\n",
        "    'Logistic': logistic_predictions_proba[:, 1],\n",
        "    'SoftVoting': soft_voting_predictions_proba[:, 1]\n",
        "})\n",
        "\n",
        "# Heatmap\n",
        "fig_heatmap = px.imshow(proba_df.T, labels=dict(color=\"Probability\"), x=proba_df.index, y=proba_df.columns)\n",
        "fig_heatmap.update_layout(title='Predicted Probabilities Heatmap')\n",
        "\n",
        "# Scatter Plot\n",
        "fig_scatter = px.scatter(proba_df, x='KNN', y='SVM', color='Logistic', size='SoftVoting',\n",
        "                         labels={'KNN': 'KNN Probability', 'SVM': 'SVM Probability', 'Logistic': 'Logistic Probability', 'SoftVoting': 'SoftVoting Probability'},\n",
        "                         title='Scatter Plot of Predicted Probabilities')\n",
        "\n",
        "# Line Plot\n",
        "fig_line = px.line(proba_df, labels={'index': 'Test Index', 'value': 'Probability'},\n",
        "                   title='Line Plot of Predicted Probabilities')\n",
        "\n",
        "\n",
        "# Show the plots\n",
        "fig_heatmap.show()\n",
        "fig_scatter.show()\n",
        "fig_line.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "SrcSy7mIdmFQ",
        "outputId": "65079223-e299-4bf0-ddb6-0fb916f500f9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"1d82b84f-9f4e-4195-a1f3-126909179bb2\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"1d82b84f-9f4e-4195-a1f3-126909179bb2\")) {                    Plotly.newPlot(                        \"1d82b84f-9f4e-4195-a1f3-126909179bb2\",                        [{\"coloraxis\":\"coloraxis\",\"name\":\"0\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"y\":[\"KNN\",\"SVM\",\"Logistic\",\"SoftVoting\"],\"z\":[[1.0,1.0,0.0,0.0,0.0,0.0,0.3333333333333333,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0],[0.9764911635938041,0.9999952474025195,0.06170879338388589,0.00026708202874785433,0.00022248793346443826,0.015067201979520922,0.5549684732412048,0.41051009354727414,0.00023249887693277684,0.9613436190541158,0.00044261688679906973,0.004161742426783115,0.0012565658162296575,0.997036878150965,0.0008759721971828535,0.889662576675289,0.0008373862447553584,0.0004027258703036288,0.9848181667930257,0.00047273593640735563,0.0037591410607692175,0.024851107653684094],[0.7788522273450386,0.7124925054477863,0.5759148633148907,0.5074671504210496,0.4754657651327083,0.3092309748712949,0.5990052607500237,0.5945669563423488,0.5013195439533326,0.7978210510554745,0.4455623276677156,0.3689359145239222,0.5377522514431423,0.6497737073696356,0.4242858610695964,0.8458179326395634,0.4256630900895456,0.4487287001892991,0.7666178268102176,0.4434116995475139,0.37336034398455425,0.5682641631726317],[0.9184477969796142,0.9041625842834353,0.2125412188995922,0.16924474414993249,0.15856275102205758,0.10809939228360528,0.4957690224415206,0.335025683296541,0.1671840142767551,0.9197215567031968,0.1486683148515049,0.12436588565023511,0.179669605753124,0.8822701951735334,0.14172061108892642,0.9118268364382841,0.142166825444767,0.14971047535320092,0.9171453312010812,0.14796147849464042,0.12570649501510783,0.19770509027543862]],\"type\":\"heatmap\",\"xaxis\":\"x\",\"yaxis\":\"y\",\"hovertemplate\":\"x: %{x}\\u003cbr\\u003ey: %{y}\\u003cbr\\u003eProbability: %{z}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"scaleanchor\":\"y\",\"constrain\":\"domain\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"autorange\":\"reversed\",\"constrain\":\"domain\"},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Probability\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"margin\":{\"t\":60},\"title\":{\"text\":\"Predicted Probabilities Heatmap\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('1d82b84f-9f4e-4195-a1f3-126909179bb2');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"b92a1661-6ef7-42f2-ad17-8a38fcc6fe2a\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"b92a1661-6ef7-42f2-ad17-8a38fcc6fe2a\")) {                    Plotly.newPlot(                        \"b92a1661-6ef7-42f2-ad17-8a38fcc6fe2a\",                        [{\"hovertemplate\":\"KNN Probability=%{x}\\u003cbr\\u003eSVM Probability=%{y}\\u003cbr\\u003eSoftVoting Probability=%{marker.size}\\u003cbr\\u003eLogistic Probability=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[0.7788522273450386,0.7124925054477863,0.5759148633148907,0.5074671504210496,0.4754657651327083,0.3092309748712949,0.5990052607500237,0.5945669563423488,0.5013195439533326,0.7978210510554745,0.4455623276677156,0.3689359145239222,0.5377522514431423,0.6497737073696356,0.4242858610695964,0.8458179326395634,0.4256630900895456,0.4487287001892991,0.7666178268102176,0.4434116995475139,0.37336034398455425,0.5682641631726317],\"coloraxis\":\"coloraxis\",\"size\":[0.9184477969796142,0.9041625842834353,0.2125412188995922,0.16924474414993249,0.15856275102205758,0.10809939228360528,0.4957690224415206,0.335025683296541,0.1671840142767551,0.9197215567031968,0.1486683148515049,0.12436588565023511,0.179669605753124,0.8822701951735334,0.14172061108892642,0.9118268364382841,0.142166825444767,0.14971047535320092,0.9171453312010812,0.14796147849464042,0.12570649501510783,0.19770509027543862],\"sizemode\":\"area\",\"sizeref\":0.002299303891757992,\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[1.0,1.0,0.0,0.0,0.0,0.0,0.3333333333333333,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0],\"xaxis\":\"x\",\"y\":[0.9764911635938041,0.9999952474025195,0.06170879338388589,0.00026708202874785433,0.00022248793346443826,0.015067201979520922,0.5549684732412048,0.41051009354727414,0.00023249887693277684,0.9613436190541158,0.00044261688679906973,0.004161742426783115,0.0012565658162296575,0.997036878150965,0.0008759721971828535,0.889662576675289,0.0008373862447553584,0.0004027258703036288,0.9848181667930257,0.00047273593640735563,0.0037591410607692175,0.024851107653684094],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"KNN Probability\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"SVM Probability\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Logistic Probability\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0,\"itemsizing\":\"constant\"},\"title\":{\"text\":\"Scatter Plot of Predicted Probabilities\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('b92a1661-6ef7-42f2-ad17-8a38fcc6fe2a');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"7d6da589-ce6c-4c13-86bd-9ad15691753c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7d6da589-ce6c-4c13-86bd-9ad15691753c\")) {                    Plotly.newPlot(                        \"7d6da589-ce6c-4c13-86bd-9ad15691753c\",                        [{\"hovertemplate\":\"variable=KNN\\u003cbr\\u003eTest Index=%{x}\\u003cbr\\u003eProbability=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"KNN\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"KNN\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"xaxis\":\"x\",\"y\":[1.0,1.0,0.0,0.0,0.0,0.0,0.3333333333333333,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"variable=SVM\\u003cbr\\u003eTest Index=%{x}\\u003cbr\\u003eProbability=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"SVM\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"SVM\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"xaxis\":\"x\",\"y\":[0.9764911635938041,0.9999952474025195,0.06170879338388589,0.00026708202874785433,0.00022248793346443826,0.015067201979520922,0.5549684732412048,0.41051009354727414,0.00023249887693277684,0.9613436190541158,0.00044261688679906973,0.004161742426783115,0.0012565658162296575,0.997036878150965,0.0008759721971828535,0.889662576675289,0.0008373862447553584,0.0004027258703036288,0.9848181667930257,0.00047273593640735563,0.0037591410607692175,0.024851107653684094],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"variable=Logistic\\u003cbr\\u003eTest Index=%{x}\\u003cbr\\u003eProbability=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Logistic\",\"line\":{\"color\":\"#00cc96\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Logistic\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"xaxis\":\"x\",\"y\":[0.7788522273450386,0.7124925054477863,0.5759148633148907,0.5074671504210496,0.4754657651327083,0.3092309748712949,0.5990052607500237,0.5945669563423488,0.5013195439533326,0.7978210510554745,0.4455623276677156,0.3689359145239222,0.5377522514431423,0.6497737073696356,0.4242858610695964,0.8458179326395634,0.4256630900895456,0.4487287001892991,0.7666178268102176,0.4434116995475139,0.37336034398455425,0.5682641631726317],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"variable=SoftVoting\\u003cbr\\u003eTest Index=%{x}\\u003cbr\\u003eProbability=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"SoftVoting\",\"line\":{\"color\":\"#ab63fa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"SoftVoting\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"xaxis\":\"x\",\"y\":[0.9184477969796142,0.9041625842834353,0.2125412188995922,0.16924474414993249,0.15856275102205758,0.10809939228360528,0.4957690224415206,0.335025683296541,0.1671840142767551,0.9197215567031968,0.1486683148515049,0.12436588565023511,0.179669605753124,0.8822701951735334,0.14172061108892642,0.9118268364382841,0.142166825444767,0.14971047535320092,0.9171453312010812,0.14796147849464042,0.12570649501510783,0.19770509027543862],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Test Index\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Probability\"}},\"legend\":{\"title\":{\"text\":\"variable\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Line Plot of Predicted Probabilities\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('7d6da589-ce6c-4c13-86bd-9ad15691753c');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import mean_squared_error\n",
        "\n",
        "# Soft Voting의 예측 확률을 가져옵니다.\n",
        "soft_voting_predictions_proba = voting_classifier1.predict_proba(X_test)\n",
        "\n",
        "# MSE 계산\n",
        "soft_voting_mse = mean_squared_error(y_test, soft_voting_predictions_proba[:, 1])\n",
        "print(f'Soft Voting의 MSE: {soft_voting_mse}')\n"
      ],
      "metadata": {
        "id": "9ZxjO78kugAI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a0bbd82c-cf78-4961-9166-7667918db1ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Soft Voting의 MSE: 0.034782198527252645\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ey2tiF-xqBS7"
      },
      "source": [
        "# 6.hardvoting(with 3different classifier)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1SsjBy-KnYCO"
      },
      "source": [
        "**hard voting**(classifier:logistic+knn+svm)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Voting Classifier2:hard\n",
        "voting_classifier2 = VotingClassifier(\n",
        "    estimators=[\n",
        "        ('knn', knn_classifier),       # KNeighborsClassifier\n",
        "        ('svm', svm_model),      # supportVector Machine\n",
        "        ('logistic',logistic_classifier )   # LogisticRegression\n",
        "    ],\n",
        "    voting='hard',  # Hard Voting 설정\n",
        "    weights=[1, 1, 1]  # 각 분류기에 가중치 부여\n",
        ")\n",
        "# Fit the VotingClassifier\n",
        "voting_classifier2.fit(X_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 108
        },
        "id": "xHwnd7a_iOaH",
        "outputId": "aa47bf8e-4f65-4994-9286-e1b615a9ed07"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "VotingClassifier(estimators=[('knn', KNeighborsClassifier(n_neighbors=3)),\n",
              "                             ('svm', SVC(probability=True, random_state=42)),\n",
              "                             ('logistic', LogisticRegression())],\n",
              "                 weights=[1, 1, 1])"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>VotingClassifier(estimators=[(&#x27;knn&#x27;, KNeighborsClassifier(n_neighbors=3)),\n",
              "                             (&#x27;svm&#x27;, SVC(probability=True, random_state=42)),\n",
              "                             (&#x27;logistic&#x27;, LogisticRegression())],\n",
              "                 weights=[1, 1, 1])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">VotingClassifier</label><div class=\"sk-toggleable__content\"><pre>VotingClassifier(estimators=[(&#x27;knn&#x27;, KNeighborsClassifier(n_neighbors=3)),\n",
              "                             (&#x27;svm&#x27;, SVC(probability=True, random_state=42)),\n",
              "                             (&#x27;logistic&#x27;, LogisticRegression())],\n",
              "                 weights=[1, 1, 1])</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>knn</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=3)</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>svm</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(probability=True, random_state=42)</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>logistic</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZWSQ-SgWnXtO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 739
        },
        "outputId": "d1452f60-573b-4138-98a4-cb9c5aafb845"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    knn  svm  Logistic  HardVoting\n",
              "0     1    1         1           1\n",
              "1     1    1         1           1\n",
              "2     0    0         1           0\n",
              "3     0    0         1           0\n",
              "4     0    0         0           0\n",
              "5     0    0         0           0\n",
              "6     0    1         1           1\n",
              "7     0    1         1           1\n",
              "8     0    0         1           0\n",
              "9     1    1         1           1\n",
              "10    0    0         0           0\n",
              "11    0    0         0           0\n",
              "12    0    0         1           0\n",
              "13    1    1         1           1\n",
              "14    0    0         0           0\n",
              "15    1    1         1           1\n",
              "16    0    0         0           0\n",
              "17    0    0         0           0\n",
              "18    1    1         1           1\n",
              "19    0    0         0           0\n",
              "20    0    0         0           0\n",
              "21    0    0         1           0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aad205ec-9023-4752-939d-b7427e9cf91d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>knn</th>\n",
              "      <th>svm</th>\n",
              "      <th>Logistic</th>\n",
              "      <th>HardVoting</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aad205ec-9023-4752-939d-b7427e9cf91d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-aad205ec-9023-4752-939d-b7427e9cf91d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-aad205ec-9023-4752-939d-b7427e9cf91d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-524122af-908e-484d-a13b-c9e955274c61\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-524122af-908e-484d-a13b-c9e955274c61')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-524122af-908e-484d-a13b-c9e955274c61 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Hard Voting Classifier 모델 학습\n",
        "voting_classifier2.fit(X_train, y_train)\n",
        "\n",
        "# 각 분류기의 예측을 가져옵니다.\n",
        "knn_predictions = knn_classifier.predict(X_test)\n",
        "svm_predictions = svm_model.predict(X_test)\n",
        "logistic_predictions = logistic_classifier.predict(X_test)\n",
        "\n",
        "# Hard Voting의 결과를 가져옵니다.\n",
        "hard_voting_predictions = voting_classifier2.predict(X_test)\n",
        "\n",
        "# 결과 출력\n",
        "result_df_hard_voting = pd.DataFrame({\n",
        "    'knn': knn_predictions,\n",
        "    'svm': svm_predictions,\n",
        "    'Logistic': logistic_predictions,\n",
        "    'HardVoting': hard_voting_predictions\n",
        "})\n",
        "display(result_df_hard_voting)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CPZOBw2gqMU9"
      },
      "source": [
        "#etc: 시각자료(히트맵, 그래프),mse 등"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "NvWlBaXCofgD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "f9818c89-90a3-44cb-cc30-052d28e805ec"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"bb101c9e-d6ca-4520-b511-ce4849196124\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"bb101c9e-d6ca-4520-b511-ce4849196124\")) {                    Plotly.newPlot(                        \"bb101c9e-d6ca-4520-b511-ce4849196124\",                        [{\"mode\":\"lines+markers\",\"name\":\"KNeighborsClassifier Predictions\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"y\":[1,1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"KNeighborsClassifier Predictions\"},\"xaxis\":{\"title\":{\"text\":\"test Index\"}},\"yaxis\":{\"title\":{\"text\":\"Predictions\"}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('bb101c9e-d6ca-4520-b511-ce4849196124');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"da7a3db7-3c3b-4526-bda5-747c42c5f951\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"da7a3db7-3c3b-4526-bda5-747c42c5f951\")) {                    Plotly.newPlot(                        \"da7a3db7-3c3b-4526-bda5-747c42c5f951\",                        [{\"mode\":\"lines+markers\",\"name\":\"SupportVectorMachine Predictions\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"y\":[1,1,0,0,0,0,1,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"SupportVectorMachine Predictions\"},\"xaxis\":{\"title\":{\"text\":\"test Index\"}},\"yaxis\":{\"title\":{\"text\":\"Predictions\"}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('da7a3db7-3c3b-4526-bda5-747c42c5f951');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"998b8629-8279-4097-a3f0-5b616f19c40f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"998b8629-8279-4097-a3f0-5b616f19c40f\")) {                    Plotly.newPlot(                        \"998b8629-8279-4097-a3f0-5b616f19c40f\",                        [{\"mode\":\"lines+markers\",\"name\":\"LogisticRegression Predictions\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"y\":[1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,1,0,0,1,0,0,1],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"LogisticRegression Predictions\"},\"xaxis\":{\"title\":{\"text\":\"test Index\"}},\"yaxis\":{\"title\":{\"text\":\"Predictions\"}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('998b8629-8279-4097-a3f0-5b616f19c40f');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"8447e906-f857-4ae1-8970-d215e220791d\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"8447e906-f857-4ae1-8970-d215e220791d\")) {                    Plotly.newPlot(                        \"8447e906-f857-4ae1-8970-d215e220791d\",                        [{\"mode\":\"lines+markers\",\"name\":\"HardVotingClassifier Predictions\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"y\":[1,1,0,0,0,0,1,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"HardVotingClassifier Predictions\"},\"xaxis\":{\"title\":{\"text\":\"test Index\"}},\"yaxis\":{\"title\":{\"text\":\"Predictions\"}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('8447e906-f857-4ae1-8970-d215e220791d');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "import plotly.graph_objects as go\n",
        "\n",
        "def plot_predictions_plotly(predictions, classifier_name):\n",
        "    fig = go.Figure()\n",
        "\n",
        "    fig.add_trace(go.Scatter(x=list(range(len(predictions))),\n",
        "                             y=predictions,\n",
        "                             mode='lines+markers',\n",
        "                             name=f'{classifier_name} Predictions'))\n",
        "\n",
        "    fig.update_layout(title=f'{classifier_name} Predictions',\n",
        "                      xaxis_title='test Index',\n",
        "                      yaxis_title='Predictions')\n",
        "\n",
        "    fig.show()\n",
        "\n",
        "# 각 분류기의 예측을 plotly로 시각화\n",
        "plot_predictions_plotly(knn_predictions, 'KNeighborsClassifier')\n",
        "plot_predictions_plotly(svm_predictions, 'SupportVectorMachine')\n",
        "plot_predictions_plotly(logistic_predictions, 'LogisticRegression')\n",
        "plot_predictions_plotly(hard_voting_predictions, 'HardVotingClassifier')\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#딱히 별의미없으나 일단 출력해봄\n",
        "\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Create a heatmap for predictions\n",
        "plt.figure(figsize=(12, 8))\n",
        "sns.heatmap(result_df_hard_voting.T, cmap='coolwarm', annot=True, fmt='d', cbar=False)\n",
        "plt.title('Predictions Heatmap')\n",
        "plt.xlabel('Sample Index')\n",
        "plt.ylabel('Classifier')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 476
        },
        "id": "8D-Avsh1tZMQ",
        "outputId": "05589ecd-2048-4f7b-d07c-57625d12c854"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a correlation_heatmap\n",
        "plt.figure(figsize=(12, 8))\n",
        "sns.heatmap(result_df_hard_voting.corr(), annot=True, cmap='coolwarm')\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 512
        },
        "id": "gFGZjG4nq10V",
        "outputId": "ad26e592-a448-400d-dd84-373741e113b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import plotly.express as px\n",
        "\n",
        "# Scatter Plot\n",
        "fig_scatter = px.scatter(result_df_hard_voting, x='knn', y='svm', color='Logistic', size='HardVoting',\n",
        "                         labels={'knn': 'KNN Probability', 'svm': 'SVM Probability', 'Logistic': 'Logistic Probability', 'HardVoting': 'HardVoting Probability'},\n",
        "                         title='Scatter Plot of Predicted Probabilities')\n",
        "\n",
        "# Show the plot\n",
        "fig_scatter.show()\n",
        "\n",
        "'''\n",
        "# Scatter Plot\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.scatter(result_df_hard_voting['knn'], result_df_hard_voting['svm'],result_df_hard_voting['Logistic'])\n",
        "plt.title('Scatter Plot')\n",
        "plt.xlabel('knn')\n",
        "plt.ylabel('svm')\n",
        "plt.show()\n",
        "'''\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 596
        },
        "id": "irG-hHcyq4X2",
        "outputId": "04304c68-8001-481d-c402-b22d182a87a2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"772bf729-54da-40f8-be85-fac7db46b457\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"772bf729-54da-40f8-be85-fac7db46b457\")) {                    Plotly.newPlot(                        \"772bf729-54da-40f8-be85-fac7db46b457\",                        [{\"hovertemplate\":\"KNN Probability=%{x}\\u003cbr\\u003eSVM Probability=%{y}\\u003cbr\\u003eHardVoting Probability=%{marker.size}\\u003cbr\\u003eLogistic Probability=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,1,0,0,1,0,0,1],\"coloraxis\":\"coloraxis\",\"size\":[1,1,0,0,0,0,1,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0],\"sizemode\":\"area\",\"sizeref\":0.0025,\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[1,1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,0],\"xaxis\":\"x\",\"y\":[1,1,0,0,0,0,1,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"KNN Probability\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"SVM Probability\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Logistic Probability\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0,\"itemsizing\":\"constant\"},\"title\":{\"text\":\"Scatter Plot of Predicted Probabilities\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('772bf729-54da-40f8-be85-fac7db46b457');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "\"\\n# Scatter Plot\\nplt.figure(figsize=(10, 6))\\nplt.scatter(result_df_hard_voting['knn'], result_df_hard_voting['svm'],result_df_hard_voting['Logistic'])\\nplt.title('Scatter Plot')\\nplt.xlabel('knn')\\nplt.ylabel('svm')\\nplt.show()\\n\""
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "result_df_hard_voting[['knn', 'svm', 'Logistic', 'HardVoting']].mean().plot(kind='bar')\n",
        "plt.title('Average Predictions for Each Classifier')\n",
        "plt.xlabel('Classifier')\n",
        "plt.ylabel('Average Prediction')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 486
        },
        "id": "6V58To60r4c8",
        "outputId": "053530e9-fa50-4eae-dfe7-cdd55ba4573d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Individual Bar Plots for Each Classifier\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# KNeighborsClassifier\n",
        "plt.subplot(221)\n",
        "result_df_hard_voting['knn'].value_counts().sort_index().plot(kind='bar', rot=0)\n",
        "plt.title('KNeighborsClassifier Predictions')\n",
        "plt.xlabel('Prediction')\n",
        "plt.ylabel('Count')\n",
        "\n",
        "# Support Vector Machine\n",
        "plt.subplot(222)\n",
        "result_df_hard_voting['svm'].value_counts().sort_index().plot(kind='bar', rot=0)\n",
        "plt.title('Support Vector Machine Predictions')\n",
        "plt.xlabel('Prediction')\n",
        "plt.ylabel('Count')\n",
        "\n",
        "# Logistic Regression\n",
        "plt.subplot(223)\n",
        "result_df_hard_voting['Logistic'].value_counts().sort_index().plot(kind='bar', rot=0)\n",
        "plt.title('Logistic Regression Predictions')\n",
        "plt.xlabel('Prediction')\n",
        "plt.ylabel('Count')\n",
        "\n",
        "# Hard Voting\n",
        "plt.subplot(224)\n",
        "result_df_hard_voting['HardVoting'].value_counts().sort_index().plot(kind='bar', rot=0)\n",
        "plt.title('Hard Voting Predictions')\n",
        "plt.xlabel('Prediction')\n",
        "plt.ylabel('Count')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "id": "XSBlLQL7s-m9",
        "outputId": "71b74021-6b8d-4700-86d0-63ed5a63a6b2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pash_ZWaqUr-"
      },
      "source": [
        "# classification_evaluation&shap of hard,soft"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 추가 import\n",
        "from sklearn.metrics import confusion_matrix\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Assuming you have already trained your models\n",
        "voting_classifier1.fit(X_train, y_train)\n",
        "voting_classifier2.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions\n",
        "soft_voting_predictions = voting_classifier1.predict(X_test)\n",
        "hard_voting_predictions = voting_classifier2.predict(X_test)\n",
        "\n",
        "# Import necessary metrics\n",
        "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n",
        "\n",
        "# Soft Voting의 성능 평가\n",
        "soft_voting_accuracy = accuracy_score(y_test, soft_voting_predictions)\n",
        "soft_voting_precision = precision_score(y_test, soft_voting_predictions)\n",
        "soft_voting_recall = recall_score(y_test, soft_voting_predictions)\n",
        "soft_voting_f1 = f1_score(y_test, soft_voting_predictions)\n",
        "\n",
        "# Hard Voting의 성능 평가\n",
        "hard_voting_accuracy = accuracy_score(y_test, hard_voting_predictions)\n",
        "hard_voting_precision = precision_score(y_test, hard_voting_predictions)\n",
        "hard_voting_recall = recall_score(y_test, hard_voting_predictions)\n",
        "hard_voting_f1 = f1_score(y_test, hard_voting_predictions)\n",
        "\n",
        "# 결과 출력\n",
        "print(\"Soft Voting 성능:\")\n",
        "print(f\"정확도: {soft_voting_accuracy:.4f}\")\n",
        "print(f\"정밀도: {soft_voting_precision:.4f}\")\n",
        "print(f\"재현율: {soft_voting_recall:.4f}\")\n",
        "print(f\"F1 점수: {soft_voting_f1:.4f}\")\n",
        "\n",
        "print(\"\\nHard Voting 성능:\")\n",
        "print(f\"정확도: {hard_voting_accuracy:.4f}\")\n",
        "print(f\"정밀도: {hard_voting_precision:.4f}\")\n",
        "print(f\"재현율: {hard_voting_recall:.4f}\")\n",
        "print(f\"F1 점수: {hard_voting_f1:.4f}\")\n",
        "\n",
        "# Visualize confusion matrices\n",
        "fig, axes = plt.subplots(1, 2, figsize=(12, 6))\n",
        "\n",
        "# Soft Voting Confusion Matrix\n",
        "soft_voting_conf_matrix = confusion_matrix(y_test, soft_voting_predictions)\n",
        "sns.heatmap(soft_voting_conf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\", ax=axes[0])\n",
        "axes[0].set_title('Soft Voting Confusion Matrix')\n",
        "axes[0].set_xlabel('Predicted Label')\n",
        "axes[0].set_ylabel('True Label')\n",
        "\n",
        "# Hard Voting Confusion Matrix\n",
        "hard_voting_conf_matrix = confusion_matrix(y_test, hard_voting_predictions)\n",
        "sns.heatmap(hard_voting_conf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\", ax=axes[1])\n",
        "axes[1].set_title('Hard Voting Confusion Matrix')\n",
        "axes[1].set_xlabel('Predicted Label')\n",
        "axes[1].set_ylabel('True Label')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "qifH8D2awXAQ",
        "outputId": "c6642aae-12f6-4b8b-9441-26b07461c4d8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Soft Voting 성능:\n",
            "정확도: 0.9545\n",
            "정밀도: 1.0000\n",
            "재현율: 0.8571\n",
            "F1 점수: 0.9231\n",
            "\n",
            "Hard Voting 성능:\n",
            "정확도: 0.9545\n",
            "정밀도: 0.8750\n",
            "재현율: 1.0000\n",
            "F1 점수: 0.9333\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Create a DataFrame for visualization\n",
        "df_visualize = pd.DataFrame({\n",
        "    'True Label': y_test,\n",
        "    'Soft Voting Prediction': soft_voting_predictions,\n",
        "    'Hard Voting Prediction': hard_voting_predictions\n",
        "})\n",
        "\n",
        "# Scatter Plot for Soft Voting\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.scatter(df_visualize.index, df_visualize['True Label'], label='True Label', marker='o', color='blue')\n",
        "plt.scatter(df_visualize.index, df_visualize['Soft Voting Prediction'], label='Soft Voting Prediction', marker='x', color='orange')\n",
        "plt.title('Individual Predictions - Soft Voting')\n",
        "plt.xlabel('Sample Index')\n",
        "plt.ylabel('Class')\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n",
        "# Scatter Plot for Hard Voting\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.scatter(df_visualize.index, df_visualize['True Label'], label='True Label', marker='o', color='blue')\n",
        "plt.scatter(df_visualize.index, df_visualize['Hard Voting Prediction'], label='Hard Voting Prediction', marker='x', color='green')\n",
        "plt.title('Individual Predictions - Hard Voting')\n",
        "plt.xlabel('Sample Index')\n",
        "plt.ylabel('Class')\n",
        "plt.legend()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "3uKY1V9bwp3Q",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 728
        },
        "outputId": "ba302156-f7ef-4602-cf57-ea6b708e3912"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "분류 결과를 보면 Soft Voting과 Hard Voting 모두 높은 성능을 보여주고 있습니다. 정확도, 정밀도, 재현율, 그리고 F1 점수 모두에서 유사한 결과를 얻었습니다. 이는 두 분류기가 테스트 데이터에서 비슷한 예측 성능을 나타내고 있다는 것을 의미합니다.\n",
        "\n",
        "높은 정확도 (0.9545): 테스트 세트에서 약 95.45%의 샘플에 대해 정확한 예측을 수행했습니다.\n",
        "\n",
        "높은 정밀도 (0.9167): 양성 예측 중 약 91.67%가 실제로 양성이었습니다.\n",
        "\n",
        "높은 재현율 (1.0000): 모든 실제 양성 사례를 100% 식별했습니다.\n",
        "\n",
        "높은 F1 점수 (0.9565): 정밀도와 재현율의 균형을 나타내는 지표로, 0.9565의 값은 모델의 성능이 균형 잡혀있다는 것을 보여줍니다.\n",
        "\n",
        "이러한 결과로 보아 Soft Voting과 Hard Voting은 모두 효과적으로 작동하며,어느 것을 선택해도 좋을 것으로 판단됩니다."
      ],
      "metadata": {
        "id": "Y5pEpkmMx_sV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install shap\n",
        "import shap\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already trained your models (knn_classifier, svm_model, logistic_classifier)\n",
        "# Make sure your models have predict_proba method for soft voting\n",
        "# If not, you might need to train soft voting with models that have predict_proba method\n",
        "\n",
        "# Define individual models used in the VotingClassifier\n",
        "knn_model = knn_classifier\n",
        "svm_model = svm_model\n",
        "logistic_model = logistic_classifier\n",
        "\n",
        "# Define a function to make predictions using the individual models\n",
        "def knn_predict(X):\n",
        "    return knn_model.predict(X)\n",
        "\n",
        "def svm_predict(X):\n",
        "    return svm_model.predict(X)\n",
        "\n",
        "def logistic_predict(X):\n",
        "    return logistic_model.predict_proba(X)[:, 1]  # Use predict_proba for logistic model\n",
        "\n",
        "# Define a SHAP explainer using KernelExplainer for each model\n",
        "explainer_knn = shap.KernelExplainer(knn_predict, X_train)\n",
        "explainer_svm = shap.KernelExplainer(svm_predict, X_train)\n",
        "explainer_logistic = shap.KernelExplainer(logistic_predict, X_train)\n",
        "\n",
        "# Calculate SHAP values for the test set for each model\n",
        "shap_values_knn = explainer_knn.shap_values(X_test)\n",
        "shap_values_svm = explainer_svm.shap_values(X_test)\n",
        "shap_values_logistic = explainer_logistic.shap_values(X_test)\n",
        "\n",
        "# Plot overall SHAP summary plot for each model\n",
        "plt.figure(figsize=(15, 10))\n",
        "\n",
        "# KNN model\n",
        "plt.subplot(3, 1, 1)\n",
        "shap.summary_plot(shap_values_knn, X_test, plot_type='bar', title='SHAP Summary Plot - KNN Model')\n",
        "\n",
        "# SVM model\n",
        "plt.subplot(3, 1, 2)\n",
        "shap.summary_plot(shap_values_svm, X_test, plot_type='bar', title='SHAP Summary Plot - SVM Model')\n",
        "\n",
        "# Logistic model\n",
        "plt.subplot(3, 1, 3)\n",
        "shap.summary_plot(shap_values_logistic, X_test, plot_type='bar', title='SHAP Summary Plot - Logistic Model')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "kid7Q6wp5g1g",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 716,
          "referenced_widgets": [
            "25900a9921d54744b0dfbb02a470db42",
            "53b7fd56efd645779a9722bed89e8568",
            "4c46f3203d394168a3bc4dac19dcda27",
            "d4408322bd904779b14be651b34198e7",
            "a64ad400a8634032807af75adf4b80b2",
            "8ff3bea0e169431abb57f9bdd67cf2f3",
            "5e0daba8c17e408cb579cc7d9637b2b2",
            "bc174532500d474d8f8bd9350f69a28e",
            "34cfb26ff2bb4ddfb23283858fb2cb2d",
            "faecc67e3cd74ce9bd6edd130185c67d",
            "1200bbabf5824734a14ddde47872666c",
            "918b578fe898469a976e35d921d69f45",
            "1d2f6d26eb4d4d8593dfeea49b02da44",
            "8ee9a81f876c41029aa2ab8790e0db07",
            "a5ea87003f07429795ad60fe723ea4cc",
            "62ce7ed50bac4f98b0f5d65a2b712896",
            "24b03308ced74c45a719bb9d353250ad",
            "5098728dece64a708dc1dd13ec7d503b",
            "bdab066a5c344e6ea76a1c5652df66eb",
            "fa019178d1044e66922f61f8cec8caed",
            "e3e0c2ab46e640679532e6ee916682b8",
            "e8facf569de5419092e6f479f6ed8181",
            "a1cc9b70be734d558cb14978abc137fe",
            "d95b963e1b0b417e8243c193db3e09fa",
            "9798e31ad50b4082854bee5636661e14",
            "76cbdb4c66ca4c7b87434cf8072b3976",
            "7c8abc4a3ac3400795b64ee3e9f648a7",
            "8ef1e8d5b67b4030bd5e3bcd9c8b3bb6",
            "0eba4240c43041c998687f4541a3af4a",
            "9f7f50253175400781903b641d7e7f66",
            "e528f4eb65a4488897400c197e5bfdba",
            "a8a92adc7b40412d8213763655ea1c4d",
            "0a477db453bb49ad8088c74794d68802"
          ]
        },
        "outputId": "6a9c833f-9bcb-4169-e739-e1ac34f3dd2c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: shap in /usr/local/lib/python3.10/dist-packages (0.43.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from shap) (1.23.5)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from shap) (1.11.4)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from shap) (1.2.2)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from shap) (1.5.3)\n",
            "Requirement already satisfied: tqdm>=4.27.0 in /usr/local/lib/python3.10/dist-packages (from shap) (4.66.1)\n",
            "Requirement already satisfied: packaging>20.9 in /usr/local/lib/python3.10/dist-packages (from shap) (23.2)\n",
            "Requirement already satisfied: slicer==0.0.7 in /usr/local/lib/python3.10/dist-packages (from shap) (0.0.7)\n",
            "Requirement already satisfied: numba in /usr/local/lib/python3.10/dist-packages (from shap) (0.58.1)\n",
            "Requirement already satisfied: cloudpickle in /usr/local/lib/python3.10/dist-packages (from shap) (2.2.1)\n",
            "Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba->shap) (0.41.1)\n",
            "Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas->shap) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->shap) (2023.3.post1)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->shap) (1.3.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->shap) (3.2.0)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas->shap) (1.16.0)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:shap:Using 172 background data samples could cause slower run times. Consider using shap.sample(data, K) or shap.kmeans(data, K) to summarize the background as K samples.\n",
            "WARNING:shap:Using 172 background data samples could cause slower run times. Consider using shap.sample(data, K) or shap.kmeans(data, K) to summarize the background as K samples.\n",
            "WARNING:shap:Using 172 background data samples could cause slower run times. Consider using shap.sample(data, K) or shap.kmeans(data, K) to summarize the background as K samples.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  0%|          | 0/22 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "25900a9921d54744b0dfbb02a470db42"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  0%|          | 0/22 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "918b578fe898469a976e35d921d69f45"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  0%|          | 0/22 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "a1cc9b70be734d558cb14978abc137fe"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x190 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x190 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x190 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import shap\n",
        "\n",
        "# Assuming you have already trained your models (knn_classifier, svm_model, logistic_classifier)\n",
        "# Make sure your models have predict_proba method for soft voting\n",
        "# If not, you might need to train soft voting with models that have predict_proba method\n",
        "\n",
        "# Define individual models used in the VotingClassifier\n",
        "knn_model = knn_classifier\n",
        "svm_model = svm_model\n",
        "logistic_model = logistic_classifier\n",
        "\n",
        "# Define a function to make predictions using the individual models\n",
        "def voting_predict(X):\n",
        "    knn_preds = knn_model.predict(X)\n",
        "    svm_preds = svm_model.predict(X)\n",
        "    logistic_preds = logistic_model.predict(X)\n",
        "    # Adjust the combination method based on your VotingClassifier settings\n",
        "    hard_voting_preds = np.array([1 if sum(p) > 1 else 0 for p in zip(knn_preds, svm_preds, logistic_preds)])\n",
        "    return hard_voting_preds\n",
        "\n",
        "# Define a SHAP explainer using KernelExplainer\n",
        "explainer = shap.KernelExplainer(voting_predict, X_train)\n",
        "\n",
        "# Calculate SHAP values for the test set\n",
        "shap_values = explainer.shap_values(X_test)\n",
        "\n",
        "# Plot SHAP summary plot for the combined model\n",
        "plt.figure(figsize=(10, 15))\n",
        "shap.summary_plot(shap_values, X_test, title='SHAP Summary Plot - Combined Model')\n",
        "\n",
        "# Plot SHAP summary plot for the combined model with a larger figure size\n"
      ],
      "metadata": {
        "id": "kblkxxMe14HT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 243,
          "referenced_widgets": [
            "0caeb1bd6e2446be8bfa2fbd663c7262",
            "35fb565d79124ef89ed89774c693ed5f",
            "9625ec62863c4042b33f60c7d875f314",
            "f2c076a5909542fcaf5de8f32954b055",
            "baf857f5ffa249a2af4f7660f876235d",
            "2bc4137cf9b846afb4c218c87fd6f411",
            "2fdbecc8f3b94644b7a1ad2b57403437",
            "2a2ee91a0e05429ca2ddca944b16197f",
            "44aee1aa3f0044a9b72fbb9db72324c2",
            "369fdb096ba1488b9a4f209284042eee",
            "ceae5537d0a2405bb0ae8606d145bde1"
          ]
        },
        "outputId": "7397622e-65fa-47dd-bf7e-a22918af311a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:shap:Using 172 background data samples could cause slower run times. Consider using shap.sample(data, K) or shap.kmeans(data, K) to summarize the background as K samples.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  0%|          | 0/22 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "0caeb1bd6e2446be8bfa2fbd663c7262"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x190 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def voting_predict(X):\n",
        "    knn_preds = knn_model.predict(X)\n",
        "    svm_preds = svm_model.predict(X)\n",
        "    logistic_preds = logistic_model.predict(X)\n",
        "    # Adjust the combination method based on your VotingClassifier settings\n",
        "    hard_voting_preds = np.array([1 if sum(p) > 1 else 0 for p in zip(knn_preds, svm_preds, logistic_preds)])\n",
        "    return hard_voting_preds\n",
        "\n",
        "# Define a SHAP explainer using KernelExplainer\n",
        "explainer = shap.KernelExplainer(voting_predict, X_train)\n",
        "\n",
        "# Calculate SHAP values for the test set\n",
        "shap_values = explainer.shap_values(X_test)\n",
        "\n",
        "# Plot SHAP summary plot for the combined model\n",
        "plt.figure(figsize=(10, 15))\n",
        "shap.summary_plot(shap_values, X_test, title='SHAP Summary Plot - Combined Model')\n",
        "\n",
        "# Plot SHAP summary plot for the combined model with a larger figure size"
      ],
      "metadata": {
        "id": "gQk812cwJwY_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import shap\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "# Assuming you have already trained your models (knn_classifier, svm_model, logistic_classifier)\n",
        "# Make sure your models have predict_proba method for soft voting\n",
        "# If not, you might need to train soft voting with models that have predict_proba method\n",
        "\n",
        "# Define individual models used in the VotingClassifier\n",
        "knn_model = knn_classifier\n",
        "svm_model = svm_model\n",
        "logistic_model = logistic_classifier\n",
        "\n",
        "# Define a function to make predictions using the individual models\n",
        "def knn_predict(X):\n",
        "    return knn_model.predict(X)\n",
        "\n",
        "def svm_predict(X):\n",
        "    return svm_model.predict(X)\n",
        "\n",
        "def logistic_predict(X):\n",
        "    return logistic_model.predict(X)\n",
        "\n",
        "# Define a SHAP explainer using KernelExplainer for each model\n",
        "explainer_knn = shap.KernelExplainer(knn_predict, X_train)\n",
        "explainer_svm = shap.KernelExplainer(svm_predict, X_train)\n",
        "explainer_logistic = shap.KernelExplainer(logistic_predict, X_train)\n",
        "\n",
        "# Calculate SHAP values for the test set for each model\n",
        "shap_values_knn = explainer_knn.shap_values(X_test)\n",
        "shap_values_svm = explainer_svm.shap_values(X_test)\n",
        "shap_values_logistic = explainer_logistic.shap_values(X_test)\n",
        "\n",
        "# Plot SHAP summary plot for each model\n",
        "plt.figure(figsize=(15, 10))\n",
        "\n",
        "# KNN model\n",
        "plt.subplot(3, 1, 1)\n",
        "shap.summary_plot(shap_values_knn, X_test, title='SHAP Summary Plot - KNN Model')\n",
        "\n",
        "# SVM model\n",
        "plt.subplot(3, 1, 2)\n",
        "shap.summary_plot(shap_values_svm, X_test, title='SHAP Summary Plot - SVM Model')\n",
        "\n",
        "# Logistic model\n",
        "plt.subplot(3, 1, 3)\n",
        "shap.summary_plot(shap_values_logistic, X_test, title='SHAP Summary Plot - Logistic Model')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "GJrnM6Fd183o",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 435,
          "referenced_widgets": [
            "761af656b6824e19b6b87d28dd4c2704",
            "5da5062433f34f1685d5ba1b192d5768",
            "0236fb7dcd584021998c4c97c0bc51e8",
            "4c5276735848417aad7295751e05df96",
            "4a8e6e789b9b49478d57e0587eb044e3",
            "20881e0c1d3b4ab3846597c5b5d7318a",
            "2543d3c6f014498cada76e6fab7e60ce",
            "221f60835d994a4dba3ef6ac5049f084",
            "64d2bfa42c854da6abbd4422e4ca7475",
            "b7406ef433404b089dbd431d96267603",
            "ba0a442d121a4bd3989d7eb95a51173b",
            "1b9ffb08e32a4cc18576839e5f801dd6",
            "4f3170d820b2468e9fb4d86075b67652",
            "1e46e9396d334131af4fbe3e306dd729",
            "afe13640593a4f3f918a831296a1404c",
            "380c3acb6f4244a89cfe8bf5d5a6539d",
            "b90844ce000b475ba6be56e1c31b801a",
            "4a9b4ded49134cd4a29d1b66cdbe8739",
            "e90284eb07d546e99430301b836656c8",
            "43b4ef6264de4733a770a90883c7647c",
            "e8fe4ae13dc7420ab52ba4776d728ef4",
            "901bd925795a41e7b22ff6a999e34803",
            "2bdf48e44e334c3fad4969f3f47904a2",
            "b6862aa243314bf694ceeb38e31ac37c",
            "0680acffb55f4ec797656b0e400a0234",
            "552368e7b12b4370906372a62b478783",
            "a488b0e3ce5c4248875e4def8fd81d5b",
            "5acefe4f4ddd4447becbdfa4b4e02727",
            "6b9bf53c6a774e648051d828a6db5c1b",
            "f45ab68c798f438b98f12044bdb1cb51",
            "3664bbb81adb411889bc44bf36ecdba9",
            "28947a6fe0de49a19fefc8ba9cf07361",
            "d0685720bc8f4322b94ab142ae54b71a"
          ]
        },
        "outputId": "98801e2d-a0da-4fcf-e0cf-16a0749b849e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:shap:Using 172 background data samples could cause slower run times. Consider using shap.sample(data, K) or shap.kmeans(data, K) to summarize the background as K samples.\n",
            "WARNING:shap:Using 172 background data samples could cause slower run times. Consider using shap.sample(data, K) or shap.kmeans(data, K) to summarize the background as K samples.\n",
            "WARNING:shap:Using 172 background data samples could cause slower run times. Consider using shap.sample(data, K) or shap.kmeans(data, K) to summarize the background as K samples.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  0%|          | 0/22 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "761af656b6824e19b6b87d28dd4c2704"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  0%|          | 0/22 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "1b9ffb08e32a4cc18576839e5f801dd6"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  0%|          | 0/22 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "2bdf48e44e334c3fad4969f3f47904a2"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x190 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x190 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x190 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "8TQ4oHiE48m4"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1QILppSNAAyzPK7w5Lzy4GTqe2iAbc7I1",
      "authorship_tag": "ABX9TyO7ZuchUj//es772we4uszA",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "25900a9921d54744b0dfbb02a470db42": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_53b7fd56efd645779a9722bed89e8568",
              "IPY_MODEL_4c46f3203d394168a3bc4dac19dcda27",
              "IPY_MODEL_d4408322bd904779b14be651b34198e7"
            ],
            "layout": "IPY_MODEL_a64ad400a8634032807af75adf4b80b2"
          }
        },
        "53b7fd56efd645779a9722bed89e8568": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_8ff3bea0e169431abb57f9bdd67cf2f3",
            "placeholder": "​",
            "style": "IPY_MODEL_5e0daba8c17e408cb579cc7d9637b2b2",
            "value": "100%"
          }
        },
        "4c46f3203d394168a3bc4dac19dcda27": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_bc174532500d474d8f8bd9350f69a28e",
            "max": 22,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_34cfb26ff2bb4ddfb23283858fb2cb2d",
            "value": 22
          }
        },
        "d4408322bd904779b14be651b34198e7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_faecc67e3cd74ce9bd6edd130185c67d",
            "placeholder": "​",
            "style": "IPY_MODEL_1200bbabf5824734a14ddde47872666c",
            "value": " 22/22 [00:00&lt;00:00, 110.01it/s]"
          }
        },
        "a64ad400a8634032807af75adf4b80b2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "8ff3bea0e169431abb57f9bdd67cf2f3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "5e0daba8c17e408cb579cc7d9637b2b2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "bc174532500d474d8f8bd9350f69a28e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "34cfb26ff2bb4ddfb23283858fb2cb2d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "faecc67e3cd74ce9bd6edd130185c67d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "1200bbabf5824734a14ddde47872666c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "918b578fe898469a976e35d921d69f45": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_1d2f6d26eb4d4d8593dfeea49b02da44",
              "IPY_MODEL_8ee9a81f876c41029aa2ab8790e0db07",
              "IPY_MODEL_a5ea87003f07429795ad60fe723ea4cc"
            ],
            "layout": "IPY_MODEL_62ce7ed50bac4f98b0f5d65a2b712896"
          }
        },
        "1d2f6d26eb4d4d8593dfeea49b02da44": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_24b03308ced74c45a719bb9d353250ad",
            "placeholder": "​",
            "style": "IPY_MODEL_5098728dece64a708dc1dd13ec7d503b",
            "value": "100%"
          }
        },
        "8ee9a81f876c41029aa2ab8790e0db07": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_bdab066a5c344e6ea76a1c5652df66eb",
            "max": 22,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_fa019178d1044e66922f61f8cec8caed",
            "value": 22
          }
        },
        "a5ea87003f07429795ad60fe723ea4cc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_e3e0c2ab46e640679532e6ee916682b8",
            "placeholder": "​",
            "style": "IPY_MODEL_e8facf569de5419092e6f479f6ed8181",
            "value": " 22/22 [00:00&lt;00:00, 94.71it/s]"
          }
        },
        "62ce7ed50bac4f98b0f5d65a2b712896": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "24b03308ced74c45a719bb9d353250ad": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "5098728dece64a708dc1dd13ec7d503b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "bdab066a5c344e6ea76a1c5652df66eb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "fa019178d1044e66922f61f8cec8caed": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "e3e0c2ab46e640679532e6ee916682b8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e8facf569de5419092e6f479f6ed8181": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "a1cc9b70be734d558cb14978abc137fe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_d95b963e1b0b417e8243c193db3e09fa",
              "IPY_MODEL_9798e31ad50b4082854bee5636661e14",
              "IPY_MODEL_76cbdb4c66ca4c7b87434cf8072b3976"
            ],
            "layout": "IPY_MODEL_7c8abc4a3ac3400795b64ee3e9f648a7"
          }
        },
        "d95b963e1b0b417e8243c193db3e09fa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_8ef1e8d5b67b4030bd5e3bcd9c8b3bb6",
            "placeholder": "​",
            "style": "IPY_MODEL_0eba4240c43041c998687f4541a3af4a",
            "value": "100%"
          }
        },
        "9798e31ad50b4082854bee5636661e14": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_9f7f50253175400781903b641d7e7f66",
            "max": 22,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_e528f4eb65a4488897400c197e5bfdba",
            "value": 22
          }
        },
        "76cbdb4c66ca4c7b87434cf8072b3976": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_a8a92adc7b40412d8213763655ea1c4d",
            "placeholder": "​",
            "style": "IPY_MODEL_0a477db453bb49ad8088c74794d68802",
            "value": " 22/22 [00:00&lt;00:00, 85.86it/s]"
          }
        },
        "7c8abc4a3ac3400795b64ee3e9f648a7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "8ef1e8d5b67b4030bd5e3bcd9c8b3bb6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "0eba4240c43041c998687f4541a3af4a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "9f7f50253175400781903b641d7e7f66": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e528f4eb65a4488897400c197e5bfdba": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "a8a92adc7b40412d8213763655ea1c4d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "0a477db453bb49ad8088c74794d68802": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "0caeb1bd6e2446be8bfa2fbd663c7262": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_35fb565d79124ef89ed89774c693ed5f",
              "IPY_MODEL_9625ec62863c4042b33f60c7d875f314",
              "IPY_MODEL_f2c076a5909542fcaf5de8f32954b055"
            ],
            "layout": "IPY_MODEL_baf857f5ffa249a2af4f7660f876235d"
          }
        },
        "35fb565d79124ef89ed89774c693ed5f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_2bc4137cf9b846afb4c218c87fd6f411",
            "placeholder": "​",
            "style": "IPY_MODEL_2fdbecc8f3b94644b7a1ad2b57403437",
            "value": "100%"
          }
        },
        "9625ec62863c4042b33f60c7d875f314": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_2a2ee91a0e05429ca2ddca944b16197f",
            "max": 22,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_44aee1aa3f0044a9b72fbb9db72324c2",
            "value": 22
          }
        },
        "f2c076a5909542fcaf5de8f32954b055": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_369fdb096ba1488b9a4f209284042eee",
            "placeholder": "​",
            "style": "IPY_MODEL_ceae5537d0a2405bb0ae8606d145bde1",
            "value": " 22/22 [00:00&lt;00:00, 104.66it/s]"
          }
        },
        "baf857f5ffa249a2af4f7660f876235d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2bc4137cf9b846afb4c218c87fd6f411": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2fdbecc8f3b94644b7a1ad2b57403437": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "2a2ee91a0e05429ca2ddca944b16197f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "44aee1aa3f0044a9b72fbb9db72324c2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "369fdb096ba1488b9a4f209284042eee": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ceae5537d0a2405bb0ae8606d145bde1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "761af656b6824e19b6b87d28dd4c2704": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_5da5062433f34f1685d5ba1b192d5768",
              "IPY_MODEL_0236fb7dcd584021998c4c97c0bc51e8",
              "IPY_MODEL_4c5276735848417aad7295751e05df96"
            ],
            "layout": "IPY_MODEL_4a8e6e789b9b49478d57e0587eb044e3"
          }
        },
        "5da5062433f34f1685d5ba1b192d5768": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_20881e0c1d3b4ab3846597c5b5d7318a",
            "placeholder": "​",
            "style": "IPY_MODEL_2543d3c6f014498cada76e6fab7e60ce",
            "value": "100%"
          }
        },
        "0236fb7dcd584021998c4c97c0bc51e8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_221f60835d994a4dba3ef6ac5049f084",
            "max": 22,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_64d2bfa42c854da6abbd4422e4ca7475",
            "value": 22
          }
        },
        "4c5276735848417aad7295751e05df96": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_b7406ef433404b089dbd431d96267603",
            "placeholder": "​",
            "style": "IPY_MODEL_ba0a442d121a4bd3989d7eb95a51173b",
            "value": " 22/22 [00:00&lt;00:00, 107.64it/s]"
          }
        },
        "4a8e6e789b9b49478d57e0587eb044e3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "20881e0c1d3b4ab3846597c5b5d7318a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2543d3c6f014498cada76e6fab7e60ce": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "221f60835d994a4dba3ef6ac5049f084": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "64d2bfa42c854da6abbd4422e4ca7475": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "b7406ef433404b089dbd431d96267603": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ba0a442d121a4bd3989d7eb95a51173b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "1b9ffb08e32a4cc18576839e5f801dd6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_4f3170d820b2468e9fb4d86075b67652",
              "IPY_MODEL_1e46e9396d334131af4fbe3e306dd729",
              "IPY_MODEL_afe13640593a4f3f918a831296a1404c"
            ],
            "layout": "IPY_MODEL_380c3acb6f4244a89cfe8bf5d5a6539d"
          }
        },
        "4f3170d820b2468e9fb4d86075b67652": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_b90844ce000b475ba6be56e1c31b801a",
            "placeholder": "​",
            "style": "IPY_MODEL_4a9b4ded49134cd4a29d1b66cdbe8739",
            "value": "100%"
          }
        },
        "1e46e9396d334131af4fbe3e306dd729": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_e90284eb07d546e99430301b836656c8",
            "max": 22,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_43b4ef6264de4733a770a90883c7647c",
            "value": 22
          }
        },
        "afe13640593a4f3f918a831296a1404c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_e8fe4ae13dc7420ab52ba4776d728ef4",
            "placeholder": "​",
            "style": "IPY_MODEL_901bd925795a41e7b22ff6a999e34803",
            "value": " 22/22 [00:00&lt;00:00, 98.71it/s]"
          }
        },
        "380c3acb6f4244a89cfe8bf5d5a6539d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b90844ce000b475ba6be56e1c31b801a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4a9b4ded49134cd4a29d1b66cdbe8739": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "e90284eb07d546e99430301b836656c8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "43b4ef6264de4733a770a90883c7647c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "e8fe4ae13dc7420ab52ba4776d728ef4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "901bd925795a41e7b22ff6a999e34803": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "2bdf48e44e334c3fad4969f3f47904a2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_b6862aa243314bf694ceeb38e31ac37c",
              "IPY_MODEL_0680acffb55f4ec797656b0e400a0234",
              "IPY_MODEL_552368e7b12b4370906372a62b478783"
            ],
            "layout": "IPY_MODEL_a488b0e3ce5c4248875e4def8fd81d5b"
          }
        },
        "b6862aa243314bf694ceeb38e31ac37c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5acefe4f4ddd4447becbdfa4b4e02727",
            "placeholder": "​",
            "style": "IPY_MODEL_6b9bf53c6a774e648051d828a6db5c1b",
            "value": "100%"
          }
        },
        "0680acffb55f4ec797656b0e400a0234": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "success",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_f45ab68c798f438b98f12044bdb1cb51",
            "max": 22,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_3664bbb81adb411889bc44bf36ecdba9",
            "value": 22
          }
        },
        "552368e7b12b4370906372a62b478783": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_28947a6fe0de49a19fefc8ba9cf07361",
            "placeholder": "​",
            "style": "IPY_MODEL_d0685720bc8f4322b94ab142ae54b71a",
            "value": " 22/22 [00:00&lt;00:00, 78.55it/s]"
          }
        },
        "a488b0e3ce5c4248875e4def8fd81d5b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "5acefe4f4ddd4447becbdfa4b4e02727": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "6b9bf53c6a774e648051d828a6db5c1b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "f45ab68c798f438b98f12044bdb1cb51": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3664bbb81adb411889bc44bf36ecdba9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "28947a6fe0de49a19fefc8ba9cf07361": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d0685720bc8f4322b94ab142ae54b71a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}